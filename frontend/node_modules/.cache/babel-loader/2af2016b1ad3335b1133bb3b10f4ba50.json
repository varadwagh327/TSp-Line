{"ast":null,"code":"/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = { ...props\n  };\n\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = { ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = { ...slotProps\n          };\n\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return output;\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/node_modules/@mui/utils/esm/resolveProps/resolveProps.js"],"names":["resolveProps","defaultProps","props","output","key","Object","prototype","hasOwnProperty","call","propName","defaultSlotProps","slotProps","slotKey","slotPropName","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAT,CAAsBC,YAAtB,EAAoCC,KAApC,EAA2C;AACxD,QAAMC,MAAM,GAAG,EACb,GAAGD;AADU,GAAf;;AAGA,OAAK,MAAME,GAAX,IAAkBH,YAAlB,EAAgC;AAC9B,QAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,YAArC,EAAmDG,GAAnD,CAAJ,EAA6D;AAC3D,YAAMK,QAAQ,GAAGL,GAAjB;;AACA,UAAIK,QAAQ,KAAK,YAAb,IAA6BA,QAAQ,KAAK,OAA9C,EAAuD;AACrDN,QAAAA,MAAM,CAACM,QAAD,CAAN,GAAmB,EACjB,GAAGR,YAAY,CAACQ,QAAD,CADE;AAEjB,aAAGN,MAAM,CAACM,QAAD;AAFQ,SAAnB;AAID,OALD,MAKO,IAAIA,QAAQ,KAAK,iBAAb,IAAkCA,QAAQ,KAAK,WAAnD,EAAgE;AACrE,cAAMC,gBAAgB,GAAGT,YAAY,CAACQ,QAAD,CAArC;AACA,cAAME,SAAS,GAAGT,KAAK,CAACO,QAAD,CAAvB;;AACA,YAAI,CAACE,SAAL,EAAgB;AACdR,UAAAA,MAAM,CAACM,QAAD,CAAN,GAAmBC,gBAAgB,IAAI,EAAvC;AACD,SAFD,MAEO,IAAI,CAACA,gBAAL,EAAuB;AAC5BP,UAAAA,MAAM,CAACM,QAAD,CAAN,GAAmBE,SAAnB;AACD,SAFM,MAEA;AACLR,UAAAA,MAAM,CAACM,QAAD,CAAN,GAAmB,EACjB,GAAGE;AADc,WAAnB;;AAGA,eAAK,MAAMC,OAAX,IAAsBF,gBAAtB,EAAwC;AACtC,gBAAIL,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCE,gBAArC,EAAuDE,OAAvD,CAAJ,EAAqE;AACnE,oBAAMC,YAAY,GAAGD,OAArB;AACAT,cAAAA,MAAM,CAACM,QAAD,CAAN,CAAiBI,YAAjB,IAAiCb,YAAY,CAACU,gBAAgB,CAACG,YAAD,CAAjB,EAAiCF,SAAS,CAACE,YAAD,CAA1C,CAA7C;AACD;AACF;AACF;AACF,OAlBM,MAkBA,IAAIV,MAAM,CAACM,QAAD,CAAN,KAAqBK,SAAzB,EAAoC;AACzCX,QAAAA,MAAM,CAACM,QAAD,CAAN,GAAmBR,YAAY,CAACQ,QAAD,CAA/B;AACD;AACF;AACF;;AACD,SAAON,MAAP;AACD","sourcesContent":["/**\n * Add keys, values of `defaultProps` that does not exist in `props`\n * @param defaultProps\n * @param props\n * @returns resolved props\n */\nexport default function resolveProps(defaultProps, props) {\n  const output = {\n    ...props\n  };\n  for (const key in defaultProps) {\n    if (Object.prototype.hasOwnProperty.call(defaultProps, key)) {\n      const propName = key;\n      if (propName === 'components' || propName === 'slots') {\n        output[propName] = {\n          ...defaultProps[propName],\n          ...output[propName]\n        };\n      } else if (propName === 'componentsProps' || propName === 'slotProps') {\n        const defaultSlotProps = defaultProps[propName];\n        const slotProps = props[propName];\n        if (!slotProps) {\n          output[propName] = defaultSlotProps || {};\n        } else if (!defaultSlotProps) {\n          output[propName] = slotProps;\n        } else {\n          output[propName] = {\n            ...slotProps\n          };\n          for (const slotKey in defaultSlotProps) {\n            if (Object.prototype.hasOwnProperty.call(defaultSlotProps, slotKey)) {\n              const slotPropName = slotKey;\n              output[propName][slotPropName] = resolveProps(defaultSlotProps[slotPropName], slotProps[slotPropName]);\n            }\n          }\n        }\n      } else if (output[propName] === undefined) {\n        output[propName] = defaultProps[propName];\n      }\n    }\n  }\n  return output;\n}"]},"metadata":{},"sourceType":"module"}