{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web Projects\\\\Web\\\\Business Website\\\\frontend\\\\src\\\\components\\\\sessions\\\\register\\\\FirebaseRegister.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Card, Checkbox, Grid, styled, TextField, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useSnackbar } from \"notistack\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\"; // GLOBAL CUSTOM COMPONENTS\n\nimport MatxDivider from \"app/components/MatxDivider\";\nimport { Paragraph } from \"app/components/Typography\"; // GLOBAL CUSTOM HOOKS\n\nimport useAuth from \"app/hooks/useAuth\"; // STYLED COMPONENTS\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentBox = styled(\"div\")(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    height: \"100%\",\n    padding: \"32px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: theme.palette.background.default\n  };\n});\n_c = ContentBox;\nconst FlexBox = styled(Box)({\n  display: \"flex\"\n});\n_c2 = FlexBox;\nconst IMG = styled(\"img\")({\n  width: \"100%\"\n});\n_c3 = IMG;\nconst GoogleButton = styled(Button)(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    color: \"rgba(0, 0, 0, 0.87)\",\n    backgroundColor: \"#e0e0e0\",\n    boxShadow: theme.shadows[0],\n    \"&:hover\": {\n      backgroundColor: \"#d5d5d5\"\n    }\n  };\n});\n_c4 = GoogleButton;\nconst RegisterRoot = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  background: \"#1A2038\",\n  minHeight: \"100vh !important\",\n  \"& .card\": {\n    maxWidth: 650,\n    margin: 16,\n    borderRadius: 12\n  }\n}); // initial login credentials\n\n_c5 = RegisterRoot;\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  remember: true\n}; // form field validation schema\n\nconst validationSchema = Yup.object().shape({\n  password: Yup.string().min(6, \"Password must be 6 character length\").required(\"Password is required!\"),\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\n});\nexport default function FirebaseRegister() {\n  _s();\n\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const {\n    createUserWithEmail,\n    signInWithGoogle\n  } = useAuth();\n\n  const handleGoogleRegister = async () => {\n    try {\n      await signInWithGoogle();\n      navigate(\"/\");\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  const handleFormSubmit = async values => {\n    try {\n      setLoading(true);\n      await createUserWithEmail(values.email, values.password);\n      navigate(\"/\");\n      enqueueSnackbar(\"Register Successfully!\", {\n        variant: \"success\"\n      });\n    } catch (e) {\n      setLoading(false);\n      enqueueSnackbar(e.message, {\n        variant: \"error\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterRoot, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 5,\n          md: 5,\n          sm: 5,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ContentBox, {\n            children: /*#__PURE__*/_jsxDEV(IMG, {\n              src: \"/assets/images/illustrations/posting_photo.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          lg: 7,\n          md: 7,\n          sm: 7,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            px: 4,\n            pt: 4,\n            children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n              fullWidth: true,\n              variant: \"contained\",\n              onClick: handleGoogleRegister,\n              startIcon: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/assets/images/logos/google.svg\",\n                alt: \"google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 28\n              }, this),\n              children: \"Sign In With Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MatxDivider, {\n            sx: {\n              mt: 3,\n              px: 4\n            },\n            text: \"Or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 4,\n            height: \"100%\",\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              onSubmit: handleFormSubmit,\n              initialValues: initialValues,\n              validationSchema: validationSchema,\n              children: _ref3 => {\n                let {\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  handleSubmit\n                } = _ref3;\n                return /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: handleSubmit,\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    type: \"email\",\n                    name: \"email\",\n                    label: \"Email\",\n                    variant: \"outlined\",\n                    onBlur: handleBlur,\n                    value: values.email,\n                    onChange: handleChange,\n                    helperText: touched.email && errors.email,\n                    error: Boolean(errors.email && touched.email),\n                    sx: {\n                      mb: 3\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    fullWidth: true,\n                    size: \"small\",\n                    name: \"password\",\n                    type: \"password\",\n                    label: \"Password\",\n                    variant: \"outlined\",\n                    onBlur: handleBlur,\n                    value: values.password,\n                    onChange: handleChange,\n                    helperText: touched.password && errors.password,\n                    error: Boolean(errors.password && touched.password),\n                    sx: {\n                      mb: 1.5\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FlexBox, {\n                    gap: 1,\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                      size: \"small\",\n                      name: \"remember\",\n                      onChange: handleChange,\n                      checked: values.remember,\n                      sx: {\n                        padding: 0\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n                      fontSize: 13,\n                      children: \"I have read and agree to the terms of service.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n                    type: \"submit\",\n                    color: \"primary\",\n                    loading: loading,\n                    variant: \"contained\",\n                    sx: {\n                      my: 2\n                    },\n                    children: \"Regiser\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n                    children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(NavLink, {\n                      to: \"/session/signin\",\n                      style: {\n                        color: theme.palette.primary.main,\n                        marginLeft: 5\n                      },\n                      children: \"Login\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FirebaseRegister, \"G/WHGZ1fELon+tog9YaL4SMmfZM=\", false, function () {\n  return [useTheme, useNavigate, useSnackbar, useAuth];\n});\n\n_c6 = FirebaseRegister;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ContentBox\");\n$RefreshReg$(_c2, \"FlexBox\");\n$RefreshReg$(_c3, \"IMG\");\n$RefreshReg$(_c4, \"GoogleButton\");\n$RefreshReg$(_c5, \"RegisterRoot\");\n$RefreshReg$(_c6, \"FirebaseRegister\");","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/src/components/sessions/register/FirebaseRegister.jsx"],"names":["useState","NavLink","useNavigate","Box","Button","Card","Checkbox","Grid","styled","TextField","useTheme","LoadingButton","useSnackbar","Formik","Yup","MatxDivider","Paragraph","useAuth","ContentBox","theme","height","padding","display","alignItems","justifyContent","backgroundColor","palette","background","default","FlexBox","IMG","width","GoogleButton","color","boxShadow","shadows","RegisterRoot","minHeight","maxWidth","margin","borderRadius","initialValues","email","password","remember","validationSchema","object","shape","string","min","required","FirebaseRegister","navigate","enqueueSnackbar","loading","setLoading","createUserWithEmail","signInWithGoogle","handleGoogleRegister","e","handleFormSubmit","values","variant","message","mt","px","errors","touched","handleChange","handleBlur","handleSubmit","Boolean","mb","my","primary","main","marginLeft"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { Box, Button, Card, Checkbox, Grid, styled, TextField, useTheme } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useSnackbar } from \"notistack\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n// GLOBAL CUSTOM COMPONENTS\nimport MatxDivider from \"app/components/MatxDivider\";\nimport { Paragraph } from \"app/components/Typography\";\n// GLOBAL CUSTOM HOOKS\nimport useAuth from \"app/hooks/useAuth\";\n\n// STYLED COMPONENTS\nconst ContentBox = styled(\"div\")(({ theme }) => ({\n  height: \"100%\",\n  padding: \"32px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  backgroundColor: theme.palette.background.default\n}));\n\nconst FlexBox = styled(Box)({\n  display: \"flex\"\n});\n\nconst IMG = styled(\"img\")({ width: \"100%\" });\n\nconst GoogleButton = styled(Button)(({ theme }) => ({\n  color: \"rgba(0, 0, 0, 0.87)\",\n  backgroundColor: \"#e0e0e0\",\n  boxShadow: theme.shadows[0],\n  \"&:hover\": { backgroundColor: \"#d5d5d5\" }\n}));\n\nconst RegisterRoot = styled(\"div\")({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  background: \"#1A2038\",\n  minHeight: \"100vh !important\",\n  \"& .card\": { maxWidth: 650, margin: 16, borderRadius: 12 }\n});\n\n// initial login credentials\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  remember: true\n};\n\n// form field validation schema\nconst validationSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(6, \"Password must be 6 character length\")\n    .required(\"Password is required!\"),\n  email: Yup.string().email(\"Invalid Email address\").required(\"Email is required!\")\n});\n\nexport default function FirebaseRegister() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { enqueueSnackbar } = useSnackbar();\n  const [loading, setLoading] = useState(false);\n  const { createUserWithEmail, signInWithGoogle } = useAuth();\n\n  const handleGoogleRegister = async () => {\n    try {\n      await signInWithGoogle();\n      navigate(\"/\");\n    } catch (e) {\n      setLoading(false);\n    }\n  };\n\n  const handleFormSubmit = async (values) => {\n    try {\n      setLoading(true);\n      await createUserWithEmail(values.email, values.password);\n      navigate(\"/\");\n      enqueueSnackbar(\"Register Successfully!\", { variant: \"success\" });\n    } catch (e) {\n      setLoading(false);\n      enqueueSnackbar(e.message, { variant: \"error\" });\n    }\n  };\n\n  return (\n    <RegisterRoot>\n      <Card className=\"card\">\n        <Grid container>\n          <Grid item lg={5} md={5} sm={5} xs={12}>\n            <ContentBox>\n              <IMG src=\"/assets/images/illustrations/posting_photo.svg\" alt=\"\" />\n            </ContentBox>\n          </Grid>\n\n          <Grid item lg={7} md={7} sm={7} xs={12}>\n            <Box px={4} pt={4}>\n              <GoogleButton\n                fullWidth\n                variant=\"contained\"\n                onClick={handleGoogleRegister}\n                startIcon={<img src=\"/assets/images/logos/google.svg\" alt=\"google\" />}>\n                Sign In With Google\n              </GoogleButton>\n            </Box>\n\n            <MatxDivider sx={{ mt: 3, px: 4 }} text=\"Or\" />\n\n            <Box p={4} height=\"100%\">\n              <Formik\n                onSubmit={handleFormSubmit}\n                initialValues={initialValues}\n                validationSchema={validationSchema}>\n                {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n                  <form onSubmit={handleSubmit}>\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      type=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.email}\n                      onChange={handleChange}\n                      helperText={touched.email && errors.email}\n                      error={Boolean(errors.email && touched.email)}\n                      sx={{ mb: 3 }}\n                    />\n                    <TextField\n                      fullWidth\n                      size=\"small\"\n                      name=\"password\"\n                      type=\"password\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onBlur={handleBlur}\n                      value={values.password}\n                      onChange={handleChange}\n                      helperText={touched.password && errors.password}\n                      error={Boolean(errors.password && touched.password)}\n                      sx={{ mb: 1.5 }}\n                    />\n\n                    <FlexBox gap={1} alignItems=\"center\">\n                      <Checkbox\n                        size=\"small\"\n                        name=\"remember\"\n                        onChange={handleChange}\n                        checked={values.remember}\n                        sx={{ padding: 0 }}\n                      />\n\n                      <Paragraph fontSize={13}>\n                        I have read and agree to the terms of service.\n                      </Paragraph>\n                    </FlexBox>\n\n                    <LoadingButton\n                      type=\"submit\"\n                      color=\"primary\"\n                      loading={loading}\n                      variant=\"contained\"\n                      sx={{ my: 2 }}>\n                      Regiser\n                    </LoadingButton>\n\n                    <Paragraph>\n                      Already have an account?\n                      <NavLink\n                        to=\"/session/signin\"\n                        style={{ color: theme.palette.primary.main, marginLeft: 5 }}>\n                        Login\n                      </NavLink>\n                    </Paragraph>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Grid>\n        </Grid>\n      </Card>\n    </RegisterRoot>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}