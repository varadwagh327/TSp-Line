{"ast":null,"code":"import { createUnarySpacing } from \"../spacing/index.js\"; // The different signatures imply different meaning for their arguments that can't be expressed structurally.\n// We express the difference with variable names.\n\nexport default function createSpacing() {\n  let spacingInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createUnarySpacing({\n    spacing: spacingInput\n  });\n\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n\n  const spacing = function () {\n    for (var _len = arguments.length, argsInput = new Array(_len), _key = 0; _key < _len; _key++) {\n      argsInput[_key] = arguments[_key];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n\n  spacing.mui = true;\n  return spacing;\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/system/createTheme/createSpacing.js"],"names":["createUnarySpacing","createSpacing","spacingInput","transform","spacing","mui","argsInput","process","env","NODE_ENV","length","console","error","args","map","argument","output","join"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,qBAAnC,C,CAEA;AACA;;AAEA,eAAe,SAASC,aAAT,GAMX;AAAA,MANkCC,YAMlC,uEANiD,CAMjD;AAAA,MAFJC,SAEI,uEAFQH,kBAAkB,CAAC;AAC7BI,IAAAA,OAAO,EAAEF;AADoB,GAAD,CAE1B;;AACF;AACA,MAAIA,YAAY,CAACG,GAAjB,EAAsB;AACpB,WAAOH,YAAP;AACD;;AACD,QAAME,OAAO,GAAG,YAAkB;AAAA,sCAAdE,SAAc;AAAdA,MAAAA,SAAc;AAAA;;AAChC,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,EAAEH,SAAS,CAACI,MAAV,IAAoB,CAAtB,CAAJ,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,KAAR,CAAe,mEAAkEN,SAAS,CAACI,MAAO,EAAlG;AACD;AACF;;AACD,UAAMG,IAAI,GAAGP,SAAS,CAACI,MAAV,KAAqB,CAArB,GAAyB,CAAC,CAAD,CAAzB,GAA+BJ,SAA5C;AACA,WAAOO,IAAI,CAACC,GAAL,CAASC,QAAQ,IAAI;AAC1B,YAAMC,MAAM,GAAGb,SAAS,CAACY,QAAD,CAAxB;AACA,aAAO,OAAOC,MAAP,KAAkB,QAAlB,GAA8B,GAAEA,MAAO,IAAvC,GAA6CA,MAApD;AACD,KAHM,EAGJC,IAHI,CAGC,GAHD,CAAP;AAID,GAXD;;AAYAb,EAAAA,OAAO,CAACC,GAAR,GAAc,IAAd;AACA,SAAOD,OAAP;AACD","sourcesContent":["import { createUnarySpacing } from \"../spacing/index.js\";\n\n// The different signatures imply different meaning for their arguments that can't be expressed structurally.\n// We express the difference with variable names.\n\nexport default function createSpacing(spacingInput = 8,\n// Material Design layouts are visually balanced. Most measurements align to an 8dp grid, which aligns both spacing and the overall layout.\n// Smaller components, such as icons, can align to a 4dp grid.\n// https://m2.material.io/design/layout/understanding-layout.html\ntransform = createUnarySpacing({\n  spacing: spacingInput\n})) {\n  // Already transformed.\n  if (spacingInput.mui) {\n    return spacingInput;\n  }\n  const spacing = (...argsInput) => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!(argsInput.length <= 4)) {\n        console.error(`MUI: Too many arguments provided, expected between 0 and 4, got ${argsInput.length}`);\n      }\n    }\n    const args = argsInput.length === 0 ? [1] : argsInput;\n    return args.map(argument => {\n      const output = transform(argument);\n      return typeof output === 'number' ? `${output}px` : output;\n    }).join(' ');\n  };\n  spacing.mui = true;\n  return spacing;\n}"]},"metadata":{},"sourceType":"module"}