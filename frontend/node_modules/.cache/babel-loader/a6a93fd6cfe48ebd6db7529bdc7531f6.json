{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport formLabelClasses, { getFormLabelUtilityClasses } from \"./formLabelClasses.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: (_ref, styles) => {\n    let {\n      ownerState\n    } = _ref;\n    return { ...styles.root,\n      ...(ownerState.color === 'secondary' && styles.colorSecondary),\n      ...(ownerState.filled && styles.filled)\n    };\n  }\n})(memoTheme(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    ...theme.typography.body1,\n    lineHeight: '1.4375em',\n    padding: 0,\n    position: 'relative',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(_ref3 => {\n      let [color] = _ref3;\n      return {\n        props: {\n          color\n        },\n        style: {\n          [`&.${formLabelClasses.focused}`]: {\n            color: (theme.vars || theme).palette[color].main\n          }\n        }\n      };\n    }), {\n      props: {},\n      style: {\n        [`&.${formLabelClasses.disabled}`]: {\n          color: (theme.vars || theme).palette.text.disabled\n        },\n        [`&.${formLabelClasses.error}`]: {\n          color: (theme.vars || theme).palette.error.main\n        }\n      }\n    }]\n  };\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return {\n    [`&.${formLabelClasses.error}`]: {\n      color: (theme.vars || theme).palette.error.main\n    }\n  };\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n    children,\n    className,\n    color,\n    component = 'label',\n    disabled,\n    error,\n    filled,\n    focused,\n    required,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = { ...props,\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/FormLabel/FormLabel.js"],"names":["React","PropTypes","clsx","composeClasses","formControlState","useFormControl","capitalize","styled","memoTheme","createSimplePaletteValueFilter","useDefaultProps","formLabelClasses","getFormLabelUtilityClasses","jsxs","_jsxs","useUtilityClasses","ownerState","classes","color","focused","disabled","error","filled","required","slots","root","asterisk","FormLabelRoot","name","slot","overridesResolver","styles","colorSecondary","theme","vars","palette","text","secondary","typography","body1","lineHeight","padding","position","variants","Object","entries","filter","map","props","style","main","AsteriskComponent","FormLabel","forwardRef","inProps","ref","children","className","component","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","sx","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport formLabelClasses, { getFormLabelUtilityClasses } from \"./formLabelClasses.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...(ownerState.color === 'secondary' && styles.colorSecondary),\n      ...(ownerState.filled && styles.filled)\n    };\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  ...theme.typography.body1,\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${formLabelClasses.focused}`]: {\n        color: (theme.vars || theme).palette[color].main\n      }\n    }\n  })), {\n    props: {},\n    style: {\n      [`&.${formLabelClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      },\n      [`&.${formLabelClasses.error}`]: {\n        color: (theme.vars || theme).palette.error.main\n      }\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n    children,\n    className,\n    color,\n    component = 'label',\n    disabled,\n    error,\n    filled,\n    focused,\n    required,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = {\n    ...props,\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;"]},"metadata":{},"sourceType":"module"}