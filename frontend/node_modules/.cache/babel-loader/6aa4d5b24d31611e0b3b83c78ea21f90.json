{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\n\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexShrink: 0,\n    width: 40,\n    height: 40,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(20),\n    lineHeight: 1,\n    borderRadius: '50%',\n    overflow: 'hidden',\n    userSelect: 'none',\n    variants: [{\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: {\n        variant: 'square'\n      },\n      style: {\n        borderRadius: 0\n      }\n    }, {\n      props: {\n        colorDefault: true\n      },\n      style: {\n        color: (theme.vars || theme).palette.background.default,\n        ...(theme.vars ? {\n          backgroundColor: theme.vars.palette.Avatar.defaultBg\n        } : {\n          backgroundColor: theme.palette.grey[400],\n          ...theme.applyStyles('dark', {\n            backgroundColor: theme.palette.grey[600]\n          })\n        })\n      }\n    }]\n  };\n}));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\n\nfunction useLoaded(_ref2) {\n  let {\n    crossOrigin,\n    referrerPolicy,\n    src,\n    srcSet\n  } = _ref2;\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\n\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  const loaded = useLoaded({ ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = { ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  }; // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: { ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, { ...imgSlotProps\n    }); // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Avatar/Avatar.js"],"names":["React","PropTypes","clsx","composeClasses","styled","memoTheme","useDefaultProps","Person","getAvatarUtilityClass","useSlot","jsx","_jsx","useUtilityClasses","ownerState","classes","variant","colorDefault","slots","root","img","fallback","AvatarRoot","name","slot","overridesResolver","props","styles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","textAlign","objectFit","textIndent","AvatarFallback","useLoaded","crossOrigin","referrerPolicy","src","srcSet","loaded","setLoaded","useState","useEffect","undefined","active","image","Image","onload","onerror","srcset","forwardRef","inProps","ref","alt","children","childrenProp","className","component","slotProps","imgProps","sizes","other","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","elementType","externalForwardedProps","additionalProps","as","process","env","NODE_ENV","propTypes","string","node","object","oneOfType","func","sx","arrayOf","bool","oneOf"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,MAAMC,iBAAiB,GAAGC,UAAU,IAAI;AACtC,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA;AAHI,MAIFH,UAJJ;AAKA,QAAMI,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASH,OAAT,EAAkBC,YAAY,IAAI,cAAlC,CADM;AAEZG,IAAAA,GAAG,EAAE,CAAC,KAAD,CAFO;AAGZC,IAAAA,QAAQ,EAAE,CAAC,UAAD;AAHE,GAAd;AAKA,SAAOjB,cAAc,CAACc,KAAD,EAAQT,qBAAR,EAA+BM,OAA/B,CAArB;AACD,CAZD;;AAaA,MAAMO,UAAU,GAAGjB,MAAM,CAAC,KAAD,EAAQ;AAC/BkB,EAAAA,IAAI,EAAE,WADyB;AAE/BC,EAAAA,IAAI,EAAE,MAFyB;AAG/BC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,UAAM;AACJb,MAAAA;AADI,QAEFY,KAFJ;AAGA,WAAO,CAACC,MAAM,CAACR,IAAR,EAAcQ,MAAM,CAACb,UAAU,CAACE,OAAZ,CAApB,EAA0CF,UAAU,CAACG,YAAX,IAA2BU,MAAM,CAACV,YAA5E,CAAP;AACD;AAR8B,CAAR,CAAN,CAShBX,SAAS,CAAC;AAAA,MAAC;AACZsB,IAAAA;AADY,GAAD;AAAA,SAEN;AACLC,IAAAA,QAAQ,EAAE,UADL;AAELC,IAAAA,OAAO,EAAE,MAFJ;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,cAAc,EAAE,QAJX;AAKLC,IAAAA,UAAU,EAAE,CALP;AAMLC,IAAAA,KAAK,EAAE,EANF;AAOLC,IAAAA,MAAM,EAAE,EAPH;AAQLC,IAAAA,UAAU,EAAER,KAAK,CAACS,UAAN,CAAiBD,UARxB;AASLE,IAAAA,QAAQ,EAAEV,KAAK,CAACS,UAAN,CAAiBE,OAAjB,CAAyB,EAAzB,CATL;AAULC,IAAAA,UAAU,EAAE,CAVP;AAWLC,IAAAA,YAAY,EAAE,KAXT;AAYLC,IAAAA,QAAQ,EAAE,QAZL;AAaLC,IAAAA,UAAU,EAAE,MAbP;AAcLC,IAAAA,QAAQ,EAAE,CAAC;AACTlB,MAAAA,KAAK,EAAE;AACLV,QAAAA,OAAO,EAAE;AADJ,OADE;AAIT6B,MAAAA,KAAK,EAAE;AACLJ,QAAAA,YAAY,EAAE,CAACb,KAAK,CAACkB,IAAN,IAAclB,KAAf,EAAsBmB,KAAtB,CAA4BN;AADrC;AAJE,KAAD,EAOP;AACDf,MAAAA,KAAK,EAAE;AACLV,QAAAA,OAAO,EAAE;AADJ,OADN;AAID6B,MAAAA,KAAK,EAAE;AACLJ,QAAAA,YAAY,EAAE;AADT;AAJN,KAPO,EAcP;AACDf,MAAAA,KAAK,EAAE;AACLT,QAAAA,YAAY,EAAE;AADT,OADN;AAID4B,MAAAA,KAAK,EAAE;AACLG,QAAAA,KAAK,EAAE,CAACpB,KAAK,CAACkB,IAAN,IAAclB,KAAf,EAAsBqB,OAAtB,CAA8BC,UAA9B,CAAyCC,OAD3C;AAEL,YAAIvB,KAAK,CAACkB,IAAN,GAAa;AACfM,UAAAA,eAAe,EAAExB,KAAK,CAACkB,IAAN,CAAWG,OAAX,CAAmBI,MAAnB,CAA0BC;AAD5B,SAAb,GAEA;AACFF,UAAAA,eAAe,EAAExB,KAAK,CAACqB,OAAN,CAAcM,IAAd,CAAmB,GAAnB,CADf;AAEF,aAAG3B,KAAK,CAAC4B,WAAN,CAAkB,MAAlB,EAA0B;AAC3BJ,YAAAA,eAAe,EAAExB,KAAK,CAACqB,OAAN,CAAcM,IAAd,CAAmB,GAAnB;AADU,WAA1B;AAFD,SAFJ;AAFK;AAJN,KAdO;AAdL,GAFM;AAAA,CAAD,CATO,CAAnB;AAwDA,MAAME,SAAS,GAAGpD,MAAM,CAAC,KAAD,EAAQ;AAC9BkB,EAAAA,IAAI,EAAE,WADwB;AAE9BC,EAAAA,IAAI,EAAE,KAFwB;AAG9BC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACP;AAHf,CAAR,CAAN,CAIf;AACDc,EAAAA,KAAK,EAAE,MADN;AAEDC,EAAAA,MAAM,EAAE,MAFP;AAGDuB,EAAAA,SAAS,EAAE,QAHV;AAID;AACAC,EAAAA,SAAS,EAAE,OALV;AAMD;AACAX,EAAAA,KAAK,EAAE,aAPN;AAQD;AACAY,EAAAA,UAAU,EAAE;AATX,CAJe,CAAlB;AAeA,MAAMC,cAAc,GAAGxD,MAAM,CAACG,MAAD,EAAS;AACpCe,EAAAA,IAAI,EAAE,WAD8B;AAEpCC,EAAAA,IAAI,EAAE,UAF8B;AAGpCC,EAAAA,iBAAiB,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACN;AAHT,CAAT,CAAN,CAIpB;AACDa,EAAAA,KAAK,EAAE,KADN;AAEDC,EAAAA,MAAM,EAAE;AAFP,CAJoB,CAAvB;;AAQA,SAAS2B,SAAT,QAKG;AAAA,MALgB;AACjBC,IAAAA,WADiB;AAEjBC,IAAAA,cAFiB;AAGjBC,IAAAA,GAHiB;AAIjBC,IAAAA;AAJiB,GAKhB;AACD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnE,KAAK,CAACoE,QAAN,CAAe,KAAf,CAA5B;AACApE,EAAAA,KAAK,CAACqE,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACL,GAAD,IAAQ,CAACC,MAAb,EAAqB;AACnB,aAAOK,SAAP;AACD;;AACDH,IAAAA,SAAS,CAAC,KAAD,CAAT;AACA,QAAII,MAAM,GAAG,IAAb;AACA,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;;AACAD,IAAAA,KAAK,CAACE,MAAN,GAAe,MAAM;AACnB,UAAI,CAACH,MAAL,EAAa;AACX;AACD;;AACDJ,MAAAA,SAAS,CAAC,QAAD,CAAT;AACD,KALD;;AAMAK,IAAAA,KAAK,CAACG,OAAN,GAAgB,MAAM;AACpB,UAAI,CAACJ,MAAL,EAAa;AACX;AACD;;AACDJ,MAAAA,SAAS,CAAC,OAAD,CAAT;AACD,KALD;;AAMAK,IAAAA,KAAK,CAACV,WAAN,GAAoBA,WAApB;AACAU,IAAAA,KAAK,CAACT,cAAN,GAAuBA,cAAvB;AACAS,IAAAA,KAAK,CAACR,GAAN,GAAYA,GAAZ;;AACA,QAAIC,MAAJ,EAAY;AACVO,MAAAA,KAAK,CAACI,MAAN,GAAeX,MAAf;AACD;;AACD,WAAO,MAAM;AACXM,MAAAA,MAAM,GAAG,KAAT;AACD,KAFD;AAGD,GA5BD,EA4BG,CAACT,WAAD,EAAcC,cAAd,EAA8BC,GAA9B,EAAmCC,MAAnC,CA5BH;AA6BA,SAAOC,MAAP;AACD;;AACD,MAAMd,MAAM,GAAG,aAAapD,KAAK,CAAC6E,UAAN,CAAiB,SAASzB,MAAT,CAAgB0B,OAAhB,EAAyBC,GAAzB,EAA8B;AACzE,QAAMtD,KAAK,GAAGnB,eAAe,CAAC;AAC5BmB,IAAAA,KAAK,EAAEqD,OADqB;AAE5BxD,IAAAA,IAAI,EAAE;AAFsB,GAAD,CAA7B;AAIA,QAAM;AACJ0D,IAAAA,GADI;AAEJC,IAAAA,QAAQ,EAAEC,YAFN;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,SAAS,GAAG,KAJR;AAKJnE,IAAAA,KAAK,GAAG,EALJ;AAMJoE,IAAAA,SAAS,GAAG,EANR;AAOJC,IAAAA,QAPI;AAQJC,IAAAA,KARI;AASJvB,IAAAA,GATI;AAUJC,IAAAA,MAVI;AAWJlD,IAAAA,OAAO,GAAG,UAXN;AAYJ,OAAGyE;AAZC,MAaF/D,KAbJ;AAcA,MAAIwD,QAAQ,GAAG,IAAf,CAnByE,CAqBzE;;AACA,QAAMf,MAAM,GAAGL,SAAS,CAAC,EACvB,GAAGyB,QADoB;AAEvBtB,IAAAA,GAFuB;AAGvBC,IAAAA;AAHuB,GAAD,CAAxB;AAKA,QAAMwB,MAAM,GAAGzB,GAAG,IAAIC,MAAtB;AACA,QAAMyB,gBAAgB,GAAGD,MAAM,IAAIvB,MAAM,KAAK,OAA9C;AACA,QAAMrD,UAAU,GAAG,EACjB,GAAGY,KADc;AAEjBT,IAAAA,YAAY,EAAE,CAAC0E,gBAFE;AAGjBN,IAAAA,SAHiB;AAIjBrE,IAAAA;AAJiB,GAAnB,CA7ByE,CAmCzE;;AACA,SAAOF,UAAU,CAACA,UAAlB;AACA,QAAMC,OAAO,GAAGF,iBAAiB,CAACC,UAAD,CAAjC;AACA,QAAM,CAAC8E,OAAD,EAAUC,YAAV,IAA0BnF,OAAO,CAAC,KAAD,EAAQ;AAC7C0E,IAAAA,SAAS,EAAErE,OAAO,CAACK,GAD0B;AAE7C0E,IAAAA,WAAW,EAAErC,SAFgC;AAG7CsC,IAAAA,sBAAsB,EAAE;AACtB7E,MAAAA,KADsB;AAEtBoE,MAAAA,SAAS,EAAE;AACTlE,QAAAA,GAAG,EAAE,EACH,GAAGmE,QADA;AAEH,aAAGD,SAAS,CAAClE;AAFV;AADI;AAFW,KAHqB;AAY7C4E,IAAAA,eAAe,EAAE;AACff,MAAAA,GADe;AAEfhB,MAAAA,GAFe;AAGfC,MAAAA,MAHe;AAIfsB,MAAAA;AAJe,KAZ4B;AAkB7C1E,IAAAA;AAlB6C,GAAR,CAAvC;;AAoBA,MAAI6E,gBAAJ,EAAsB;AACpBT,IAAAA,QAAQ,GAAG,aAAatE,IAAI,CAACgF,OAAD,EAAU,EACpC,GAAGC;AADiC,KAAV,CAA5B,CADoB,CAIpB;AACA;AACD,GAND,MAMO,IAAI,CAAC,CAACV,YAAF,IAAkBA,YAAY,KAAK,CAAvC,EAA0C;AAC/CD,IAAAA,QAAQ,GAAGC,YAAX;AACD,GAFM,MAEA,IAAIO,MAAM,IAAIT,GAAd,EAAmB;AACxBC,IAAAA,QAAQ,GAAGD,GAAG,CAAC,CAAD,CAAd;AACD,GAFM,MAEA;AACLC,IAAAA,QAAQ,GAAG,aAAatE,IAAI,CAACiD,cAAD,EAAiB;AAC3C/C,MAAAA,UAAU,EAAEA,UAD+B;AAE3CsE,MAAAA,SAAS,EAAErE,OAAO,CAACM;AAFwB,KAAjB,CAA5B;AAID;;AACD,SAAO,aAAaT,IAAI,CAACU,UAAD,EAAa;AACnC2E,IAAAA,EAAE,EAAEZ,SAD+B;AAEnCD,IAAAA,SAAS,EAAEjF,IAAI,CAACY,OAAO,CAACI,IAAT,EAAeiE,SAAf,CAFoB;AAGnCJ,IAAAA,GAAG,EAAEA,GAH8B;AAInC,OAAGS,KAJgC;AAKnC3E,IAAAA,UAAU,EAAEA,UALuB;AAMnCoE,IAAAA,QAAQ,EAAEA;AANyB,GAAb,CAAxB;AAQD,CAlF2B,CAA5B;AAmFAgB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC/C,MAAM,CAACgD;AAAU;AAAjB,EAA0C;AAChF;AACA;AACA;AACA;;AACA;AACF;AACA;AACA;AACEpB,EAAAA,GAAG,EAAE/E,SAAS,CAACoG,MATiE;;AAUhF;AACF;AACA;AACA;AACEpB,EAAAA,QAAQ,EAAEhF,SAAS,CAACqG,IAd4D;;AAehF;AACF;AACA;AACExF,EAAAA,OAAO,EAAEb,SAAS,CAACsG,MAlB6D;;AAmBhF;AACF;AACA;AACEpB,EAAAA,SAAS,EAAElF,SAAS,CAACoG,MAtB2D;;AAuBhF;AACF;AACA;AACA;AACEjB,EAAAA,SAAS,EAAEnF,SAAS,CAAC4F,WA3B2D;;AA4BhF;AACF;AACA;AACA;AACEP,EAAAA,QAAQ,EAAErF,SAAS,CAACsG,MAhC4D;;AAiChF;AACF;AACA;AACEhB,EAAAA,KAAK,EAAEtF,SAAS,CAACoG,MApC+D;;AAqChF;AACF;AACA;AACA;AACEhB,EAAAA,SAAS,EAAEpF,SAAS,CAAC6C,KAAV,CAAgB;AACzB3B,IAAAA,GAAG,EAAElB,SAAS,CAACuG,SAAV,CAAoB,CAACvG,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACsG,MAA3B,CAApB;AADoB,GAAhB,CAzCqE;;AA4ChF;AACF;AACA;AACA;AACEtF,EAAAA,KAAK,EAAEhB,SAAS,CAAC6C,KAAV,CAAgB;AACrB3B,IAAAA,GAAG,EAAElB,SAAS,CAAC4F;AADM,GAAhB,CAhDyE;;AAmDhF;AACF;AACA;AACE7B,EAAAA,GAAG,EAAE/D,SAAS,CAACoG,MAtDiE;;AAuDhF;AACF;AACA;AACA;AACEpC,EAAAA,MAAM,EAAEhE,SAAS,CAACoG,MA3D8D;;AA4DhF;AACF;AACA;AACEK,EAAAA,EAAE,EAAEzG,SAAS,CAACuG,SAAV,CAAoB,CAACvG,SAAS,CAAC0G,OAAV,CAAkB1G,SAAS,CAACuG,SAAV,CAAoB,CAACvG,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACsG,MAA3B,EAAmCtG,SAAS,CAAC2G,IAA7C,CAApB,CAAlB,CAAD,EAA6F3G,SAAS,CAACwG,IAAvG,EAA6GxG,SAAS,CAACsG,MAAvH,CAApB,CA/D4E;;AAgEhF;AACF;AACA;AACA;AACExF,EAAAA,OAAO,EAAEd;AAAU;AAAD,GAAuCuG,SAAhD,CAA0D,CAACvG,SAAS,CAAC4G,KAAV,CAAgB,CAAC,UAAD,EAAa,SAAb,EAAwB,QAAxB,CAAhB,CAAD,EAAqD5G,SAAS,CAACoG,MAA/D,CAA1D;AApEuE,CAAlF,GAqEI,KAAK,CArET;AAsEA,eAAejD,MAAf","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}