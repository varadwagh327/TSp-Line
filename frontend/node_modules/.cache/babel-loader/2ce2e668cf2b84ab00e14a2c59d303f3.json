{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\n\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(_ref2 => {\n      let [color] = _ref2;\n      return {\n        props: {\n          color\n        },\n        style: {\n          backgroundColor: (theme.vars || theme).palette[color].main,\n          color: (theme.vars || theme).palette[color].contrastText\n        }\n      };\n    }), {\n      props: {\n        variant: 'dot'\n      },\n      style: {\n        borderRadius: RADIUS_DOT,\n        height: RADIUS_DOT * 2,\n        minWidth: RADIUS_DOT * 2,\n        padding: 0\n      }\n    }, {\n      props: _ref3 => {\n        let {\n          ownerState\n        } = _ref3;\n        return ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular';\n      },\n      style: {\n        top: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: _ref4 => {\n        let {\n          ownerState\n        } = _ref4;\n        return ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular';\n      },\n      style: {\n        bottom: 0,\n        right: 0,\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: _ref5 => {\n        let {\n          ownerState\n        } = _ref5;\n        return ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular';\n      },\n      style: {\n        top: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: _ref6 => {\n        let {\n          ownerState\n        } = _ref6;\n        return ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular';\n      },\n      style: {\n        bottom: 0,\n        left: 0,\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: _ref7 => {\n        let {\n          ownerState\n        } = _ref7;\n        return ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular';\n      },\n      style: {\n        top: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, -50%)'\n        }\n      }\n    }, {\n      props: _ref8 => {\n        let {\n          ownerState\n        } = _ref8;\n        return ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular';\n      },\n      style: {\n        bottom: '14%',\n        right: '14%',\n        transform: 'scale(1) translate(50%, 50%)',\n        transformOrigin: '100% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(50%, 50%)'\n        }\n      }\n    }, {\n      props: _ref9 => {\n        let {\n          ownerState\n        } = _ref9;\n        return ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular';\n      },\n      style: {\n        top: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, -50%)',\n        transformOrigin: '0% 0%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, -50%)'\n        }\n      }\n    }, {\n      props: _ref10 => {\n        let {\n          ownerState\n        } = _ref10;\n        return ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular';\n      },\n      style: {\n        bottom: '14%',\n        left: '14%',\n        transform: 'scale(1) translate(-50%, 50%)',\n        transformOrigin: '0% 100%',\n        [`&.${badgeClasses.invisible}`]: {\n          transform: 'scale(0) translate(-50%, 50%)'\n        }\n      }\n    }, {\n      props: {\n        invisible: true\n      },\n      style: {\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeInOut,\n          duration: theme.transitions.duration.leavingScreen\n        })\n      }\n    }]\n  };\n}));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = { ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState); // support both `slots` and `components` for backward compatibility\n\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, { ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, { ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Badge/Badge.js"],"names":["React","PropTypes","clsx","usePreviousProps","composeClasses","useSlotProps","useBadge","styled","memoTheme","createSimplePaletteValueFilter","useDefaultProps","capitalize","badgeClasses","getBadgeUtilityClass","jsx","_jsx","jsxs","_jsxs","RADIUS_STANDARD","RADIUS_DOT","useUtilityClasses","ownerState","color","anchorOrigin","invisible","overlap","variant","classes","slots","root","badge","vertical","horizontal","BadgeRoot","name","slot","overridesResolver","props","styles","position","display","verticalAlign","flexShrink","BadgeBadge","theme","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","variants","Object","entries","palette","filter","map","style","backgroundColor","vars","main","contrastText","top","right","transform","transformOrigin","bottom","left","leavingScreen","Badge","forwardRef","inProps","ref","anchorOriginProp","className","classesProp","component","components","componentsProps","children","overlapProp","colorProp","invisibleProp","max","maxProp","badgeContent","badgeContentProp","slotProps","showZero","variantProp","other","invisibleFromHook","displayValue","displayValueFromHook","prevProps","undefined","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","as","badgeProps","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","oneOfType","func","bool","number","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin = anchorOriginProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;"]},"metadata":{},"sourceType":"module"}