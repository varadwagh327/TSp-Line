{"ast":null,"code":"/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\nexport default function composeClasses(slots, getUtilityClass) {\n  let classes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  const output = {};\n\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n\n    output[slotName] = buffer;\n  }\n\n  return output;\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/utils/esm/composeClasses/composeClasses.js"],"names":["composeClasses","slots","getUtilityClass","classes","undefined","output","slotName","slot","buffer","start","i","length","value"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,eAAe,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,eAA/B,EAAqE;AAAA,MAArBC,OAAqB,uEAAXC,SAAW;AAClF,QAAMC,MAAM,GAAG,EAAf;;AACA,OAAK,MAAMC,QAAX,IAAuBL,KAAvB,EAA8B;AAC5B,UAAMM,IAAI,GAAGN,KAAK,CAACK,QAAD,CAAlB;AACA,QAAIE,MAAM,GAAG,EAAb;AACA,QAAIC,KAAK,GAAG,IAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,YAAME,KAAK,GAAGL,IAAI,CAACG,CAAD,CAAlB;;AACA,UAAIE,KAAJ,EAAW;AACTJ,QAAAA,MAAM,IAAI,CAACC,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsB,GAAvB,IAA8BP,eAAe,CAACU,KAAD,CAAvD;AACAH,QAAAA,KAAK,GAAG,KAAR;;AACA,YAAIN,OAAO,IAAIA,OAAO,CAACS,KAAD,CAAtB,EAA+B;AAC7BJ,UAAAA,MAAM,IAAI,MAAML,OAAO,CAACS,KAAD,CAAvB;AACD;AACF;AACF;;AACDP,IAAAA,MAAM,CAACC,QAAD,CAAN,GAAmBE,MAAnB;AACD;;AACD,SAAOH,MAAP;AACD","sourcesContent":["/* eslint no-restricted-syntax: 0, prefer-template: 0, guard-for-in: 0\n   ---\n   These rules are preventing the performance optimizations below.\n */\n\nexport default function composeClasses(slots, getUtilityClass, classes = undefined) {\n  const output = {};\n  for (const slotName in slots) {\n    const slot = slots[slotName];\n    let buffer = '';\n    let start = true;\n    for (let i = 0; i < slot.length; i += 1) {\n      const value = slot[i];\n      if (value) {\n        buffer += (start === true ? '' : ' ') + getUtilityClass(value);\n        start = false;\n        if (classes && classes[value]) {\n          buffer += ' ' + classes[value];\n        }\n      }\n    }\n    output[slotName] = buffer;\n  }\n  return output;\n}"]},"metadata":{},"sourceType":"module"}