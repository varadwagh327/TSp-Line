{"ast":null,"code":"'use client';\n\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputActionTypes } from './numberInputAction.types';\nimport { numberInputReducer } from './numberInputReducer';\nimport { isNumber } from './utils';\nconst STEP_KEYS = ['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown'];\nconst SUPPORTED_KEYS = [...STEP_KEYS, 'Home', 'End'];\nexport function getInputValueAsString(v) {\n  return v ? String(v.trim()) : String(v);\n}\n/**\n *\n * Demos:\n *\n * - [Number Input](https://next.mui.com/base-ui/react-number-input/#hook)\n *\n * API:\n *\n * - [useNumberInput API](https://next.mui.com/base-ui/react-number-input/hooks-api/#use-number-input)\n */\n\nexport function useNumberInput(parameters) {\n  const {\n    min,\n    max,\n    step,\n    shiftMultiplier = 10,\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    required: requiredProp = false,\n    readOnly: readOnlyProp = false,\n    value: valueProp,\n    inputRef: inputRefProp,\n    inputId: inputIdProp,\n    componentName = 'useNumberInput'\n  } = parameters; // TODO: make it work with FormControl\n\n  const formControlContext = useFormControlContext();\n  const {\n    current: isControlled\n  } = React.useRef(valueProp != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const inputId = useId(inputIdProp);\n  const [focused, setFocused] = React.useState(false);\n  const handleStateChange = React.useCallback((event, field, fieldValue, reason) => {\n    if (field === 'value' && typeof fieldValue !== 'string') {\n      switch (reason) {\n        // only a blur event will dispatch `numberInput:clamp`\n        case 'numberInput:clamp':\n          onChange?.(event, fieldValue);\n          break;\n\n        case 'numberInput:increment':\n        case 'numberInput:decrement':\n        case 'numberInput:incrementToMax':\n        case 'numberInput:decrementToMin':\n          onChange?.(event, fieldValue);\n          break;\n\n        default:\n          break;\n      }\n    }\n  }, [onChange]);\n  const numberInputActionContext = React.useMemo(() => {\n    return {\n      min,\n      max,\n      step,\n      shiftMultiplier,\n      getInputValueAsString\n    };\n  }, [min, max, step, shiftMultiplier]);\n  const initialValue = valueProp ?? defaultValueProp ?? null;\n  const initialState = {\n    value: initialValue,\n    inputValue: initialValue ? String(initialValue) : ''\n  };\n  const controlledState = React.useMemo(() => ({\n    value: valueProp\n  }), [valueProp]);\n  const [state, dispatch] = useControllableReducer({\n    reducer: numberInputReducer,\n    controlledProps: controlledState,\n    initialState,\n    onStateChange: handleStateChange,\n    actionContext: React.useMemo(() => numberInputActionContext, [numberInputActionContext]),\n    componentName\n  });\n  const {\n    value,\n    inputValue\n  } = state;\n  React.useEffect(() => {\n    if (!formControlContext && disabledProp && focused) {\n      setFocused(false);\n      onBlur?.();\n    }\n  }, [formControlContext, disabledProp, focused, onBlur]);\n  React.useEffect(() => {\n    if (isControlled && isNumber(value)) {\n      dispatch({\n        type: NumberInputActionTypes.resetInputValue\n      });\n    }\n  }, [value, dispatch, isControlled]);\n\n  const createHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    if (formControlContext && formControlContext.onFocus) {\n      formControlContext?.onFocus?.();\n    }\n\n    setFocused(true);\n  };\n\n  const createHandleInputChange = otherHandlers => event => {\n    if (!isControlled && event.target === null) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n    }\n\n    formControlContext?.onChange?.(event);\n    otherHandlers.onInputChange?.(event);\n\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: NumberInputActionTypes.inputChange,\n      event,\n      inputValue: event.currentTarget.value\n    });\n  };\n\n  const createHandleBlur = otherHandlers => event => {\n    formControlContext?.onBlur();\n    otherHandlers.onBlur?.(event);\n\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: NumberInputActionTypes.clamp,\n      event,\n      inputValue: event.currentTarget.value\n    });\n    setFocused(false);\n  };\n\n  const createHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n  };\n\n  const handleStep = direction => event => {\n    const applyMultiplier = Boolean(event.shiftKey);\n    const actionType = {\n      up: NumberInputActionTypes.increment,\n      down: NumberInputActionTypes.decrement\n    }[direction];\n    dispatch({\n      type: actionType,\n      event,\n      applyMultiplier\n    });\n  };\n\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    } // this prevents unintended page scrolling\n\n\n    if (SUPPORTED_KEYS.includes(event.key)) {\n      event.preventDefault();\n    }\n\n    switch (event.key) {\n      case 'ArrowUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n\n      case 'ArrowDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n\n      case 'PageUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: true\n        });\n        break;\n\n      case 'PageDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: true\n        });\n        break;\n\n      case 'Home':\n        dispatch({\n          type: NumberInputActionTypes.incrementToMax,\n          event\n        });\n        break;\n\n      case 'End':\n        dispatch({\n          type: NumberInputActionTypes.decrementToMin,\n          event\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const propsEventHandlers = extractEventHandlers(parameters, [// these are handled by the input slot\n    'onBlur', 'onInputChange', 'onFocus', 'onChange']);\n    const externalEventHandlers = { ...propsEventHandlers,\n      ...extractEventHandlers(externalProps)\n    };\n    return { ...externalProps,\n      ...externalEventHandlers,\n      onClick: createHandleClick(externalEventHandlers)\n    };\n  };\n\n  const getInputProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const propsEventHandlers = {\n      onBlur,\n      onFocus,\n      // onChange from normal props is the custom onChange so we ignore it here\n      onChange: onInputChange\n    };\n    const externalEventHandlers = { ...propsEventHandlers,\n      ...extractEventHandlers(externalProps, [// onClick is handled by the root slot\n      'onClick' // do not ignore 'onInputChange', we want slotProps.input.onInputChange to enter the DOM and throw\n      ])\n    };\n    const mergedEventHandlers = { ...externalEventHandlers,\n      onFocus: createHandleFocus(externalEventHandlers),\n      // slotProps.onChange is renamed to onInputChange and passed to createHandleInputChange\n      onChange: createHandleInputChange({ ...externalEventHandlers,\n        onInputChange: externalEventHandlers.onChange\n      }),\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    };\n    const displayValue = (focused ? inputValue : value) ?? ''; // get rid of slotProps.input.onInputChange before returning to prevent it from entering the DOM\n    // if it was passed, it will be in mergedEventHandlers and throw\n\n    delete externalProps.onInputChange;\n    return {\n      type: 'text',\n      id: inputId,\n      'aria-invalid': errorProp || undefined,\n      defaultValue: undefined,\n      value: displayValue,\n      'aria-valuenow': displayValue,\n      'aria-valuetext': String(displayValue),\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      spellCheck: 'false',\n      required: requiredProp,\n      readOnly: readOnlyProp,\n      'aria-disabled': disabledProp,\n      disabled: disabledProp,\n      ...externalProps,\n      ref: handleInputRef,\n      ...mergedEventHandlers\n    };\n  };\n\n  const handleStepperButtonMouseDown = event => {\n    event.preventDefault();\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  const stepperButtonCommonProps = {\n    'aria-controls': inputId,\n    tabIndex: -1\n  };\n  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max ?? Number.MAX_SAFE_INTEGER) : false);\n\n  const getIncrementButtonProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isIncrementDisabled,\n      'aria-disabled': isIncrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('up')\n    };\n  };\n\n  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min ?? Number.MIN_SAFE_INTEGER) : false);\n\n  const getDecrementButtonProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isDecrementDisabled,\n      'aria-disabled': isDecrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('down')\n    };\n  };\n\n  return {\n    disabled: disabledProp,\n    error: errorProp,\n    focused,\n    formControlContext,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getRootProps,\n    required: requiredProp,\n    value,\n    inputValue,\n    isIncrementDisabled,\n    isDecrementDisabled\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/unstable_useNumberInput/useNumberInput.js"],"names":["_formatMuiErrorMessage","React","unstable_useForkRef","useForkRef","unstable_useId","useId","extractEventHandlers","useControllableReducer","useFormControlContext","NumberInputActionTypes","numberInputReducer","isNumber","STEP_KEYS","SUPPORTED_KEYS","getInputValueAsString","v","String","trim","useNumberInput","parameters","min","max","step","shiftMultiplier","defaultValue","defaultValueProp","disabled","disabledProp","error","errorProp","onBlur","onInputChange","onFocus","onChange","required","requiredProp","readOnly","readOnlyProp","value","valueProp","inputRef","inputRefProp","inputId","inputIdProp","componentName","formControlContext","current","isControlled","useRef","handleInputRefWarning","useCallback","instance","process","env","NODE_ENV","nodeName","focus","console","join","handleInputRef","focused","setFocused","useState","handleStateChange","event","field","fieldValue","reason","numberInputActionContext","useMemo","initialValue","initialState","inputValue","controlledState","state","dispatch","reducer","controlledProps","onStateChange","actionContext","useEffect","type","resetInputValue","createHandleFocus","otherHandlers","defaultMuiPrevented","defaultPrevented","createHandleInputChange","target","Error","inputChange","currentTarget","createHandleBlur","clamp","createHandleClick","onClick","handleStep","direction","applyMultiplier","Boolean","shiftKey","actionType","up","increment","down","decrement","createHandleKeyDown","onKeyDown","includes","key","preventDefault","incrementToMax","decrementToMin","getRootProps","externalProps","propsEventHandlers","externalEventHandlers","getInputProps","mergedEventHandlers","displayValue","id","undefined","autoComplete","autoCorrect","spellCheck","ref","handleStepperButtonMouseDown","stepperButtonCommonProps","tabIndex","isIncrementDisabled","Number","MAX_SAFE_INTEGER","getIncrementButtonProps","onMouseDown","isDecrementDisabled","MIN_SAFE_INTEGER","getDecrementButtonProps"],"mappings":"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","sourcesContent":["'use client';\n\nimport _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { extractEventHandlers } from '../utils/extractEventHandlers';\nimport { useControllableReducer } from '../utils/useControllableReducer';\nimport { useFormControlContext } from '../FormControl';\nimport { NumberInputActionTypes } from './numberInputAction.types';\nimport { numberInputReducer } from './numberInputReducer';\nimport { isNumber } from './utils';\nconst STEP_KEYS = ['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown'];\nconst SUPPORTED_KEYS = [...STEP_KEYS, 'Home', 'End'];\nexport function getInputValueAsString(v) {\n  return v ? String(v.trim()) : String(v);\n}\n\n/**\n *\n * Demos:\n *\n * - [Number Input](https://next.mui.com/base-ui/react-number-input/#hook)\n *\n * API:\n *\n * - [useNumberInput API](https://next.mui.com/base-ui/react-number-input/hooks-api/#use-number-input)\n */\nexport function useNumberInput(parameters) {\n  const {\n    min,\n    max,\n    step,\n    shiftMultiplier = 10,\n    defaultValue: defaultValueProp,\n    disabled: disabledProp = false,\n    error: errorProp = false,\n    onBlur,\n    onInputChange,\n    onFocus,\n    onChange,\n    required: requiredProp = false,\n    readOnly: readOnlyProp = false,\n    value: valueProp,\n    inputRef: inputRefProp,\n    inputId: inputIdProp,\n    componentName = 'useNumberInput'\n  } = parameters;\n\n  // TODO: make it work with FormControl\n  const formControlContext = useFormControlContext();\n  const {\n    current: isControlled\n  } = React.useRef(valueProp != null);\n  const handleInputRefWarning = React.useCallback(instance => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (instance && instance.nodeName !== 'INPUT' && !instance.focus) {\n        console.error(['MUI: You have provided a `slots.input` to the input component', 'that does not correctly handle the `ref` prop.', 'Make sure the `ref` prop is called with a HTMLInputElement.'].join('\\n'));\n      }\n    }\n  }, []);\n  const inputRef = React.useRef(null);\n  const handleInputRef = useForkRef(inputRef, inputRefProp, handleInputRefWarning);\n  const inputId = useId(inputIdProp);\n  const [focused, setFocused] = React.useState(false);\n  const handleStateChange = React.useCallback((event, field, fieldValue, reason) => {\n    if (field === 'value' && typeof fieldValue !== 'string') {\n      switch (reason) {\n        // only a blur event will dispatch `numberInput:clamp`\n        case 'numberInput:clamp':\n          onChange?.(event, fieldValue);\n          break;\n        case 'numberInput:increment':\n        case 'numberInput:decrement':\n        case 'numberInput:incrementToMax':\n        case 'numberInput:decrementToMin':\n          onChange?.(event, fieldValue);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [onChange]);\n  const numberInputActionContext = React.useMemo(() => {\n    return {\n      min,\n      max,\n      step,\n      shiftMultiplier,\n      getInputValueAsString\n    };\n  }, [min, max, step, shiftMultiplier]);\n  const initialValue = valueProp ?? defaultValueProp ?? null;\n  const initialState = {\n    value: initialValue,\n    inputValue: initialValue ? String(initialValue) : ''\n  };\n  const controlledState = React.useMemo(() => ({\n    value: valueProp\n  }), [valueProp]);\n  const [state, dispatch] = useControllableReducer({\n    reducer: numberInputReducer,\n    controlledProps: controlledState,\n    initialState,\n    onStateChange: handleStateChange,\n    actionContext: React.useMemo(() => numberInputActionContext, [numberInputActionContext]),\n    componentName\n  });\n  const {\n    value,\n    inputValue\n  } = state;\n  React.useEffect(() => {\n    if (!formControlContext && disabledProp && focused) {\n      setFocused(false);\n      onBlur?.();\n    }\n  }, [formControlContext, disabledProp, focused, onBlur]);\n  React.useEffect(() => {\n    if (isControlled && isNumber(value)) {\n      dispatch({\n        type: NumberInputActionTypes.resetInputValue\n      });\n    }\n  }, [value, dispatch, isControlled]);\n  const createHandleFocus = otherHandlers => event => {\n    otherHandlers.onFocus?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    if (formControlContext && formControlContext.onFocus) {\n      formControlContext?.onFocus?.();\n    }\n    setFocused(true);\n  };\n  const createHandleInputChange = otherHandlers => event => {\n    if (!isControlled && event.target === null) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Expected valid input target. Did you use a custom \\`slots.input\\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : _formatMuiErrorMessage(17));\n    }\n    formControlContext?.onChange?.(event);\n    otherHandlers.onInputChange?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: NumberInputActionTypes.inputChange,\n      event,\n      inputValue: event.currentTarget.value\n    });\n  };\n  const createHandleBlur = otherHandlers => event => {\n    formControlContext?.onBlur();\n    otherHandlers.onBlur?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    dispatch({\n      type: NumberInputActionTypes.clamp,\n      event,\n      inputValue: event.currentTarget.value\n    });\n    setFocused(false);\n  };\n  const createHandleClick = otherHandlers => event => {\n    otherHandlers.onClick?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n    if (inputRef.current && event.currentTarget === event.target) {\n      inputRef.current.focus();\n    }\n  };\n  const handleStep = direction => event => {\n    const applyMultiplier = Boolean(event.shiftKey);\n    const actionType = {\n      up: NumberInputActionTypes.increment,\n      down: NumberInputActionTypes.decrement\n    }[direction];\n    dispatch({\n      type: actionType,\n      event,\n      applyMultiplier\n    });\n  };\n  const createHandleKeyDown = otherHandlers => event => {\n    otherHandlers.onKeyDown?.(event);\n    if (event.defaultMuiPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    // this prevents unintended page scrolling\n    if (SUPPORTED_KEYS.includes(event.key)) {\n      event.preventDefault();\n    }\n    switch (event.key) {\n      case 'ArrowUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n      case 'ArrowDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: !!event.shiftKey\n        });\n        break;\n      case 'PageUp':\n        dispatch({\n          type: NumberInputActionTypes.increment,\n          event,\n          applyMultiplier: true\n        });\n        break;\n      case 'PageDown':\n        dispatch({\n          type: NumberInputActionTypes.decrement,\n          event,\n          applyMultiplier: true\n        });\n        break;\n      case 'Home':\n        dispatch({\n          type: NumberInputActionTypes.incrementToMax,\n          event\n        });\n        break;\n      case 'End':\n        dispatch({\n          type: NumberInputActionTypes.decrementToMin,\n          event\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const getRootProps = (externalProps = {}) => {\n    const propsEventHandlers = extractEventHandlers(parameters, [\n    // these are handled by the input slot\n    'onBlur', 'onInputChange', 'onFocus', 'onChange']);\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...extractEventHandlers(externalProps)\n    };\n    return {\n      ...externalProps,\n      ...externalEventHandlers,\n      onClick: createHandleClick(externalEventHandlers)\n    };\n  };\n  const getInputProps = (externalProps = {}) => {\n    const propsEventHandlers = {\n      onBlur,\n      onFocus,\n      // onChange from normal props is the custom onChange so we ignore it here\n      onChange: onInputChange\n    };\n    const externalEventHandlers = {\n      ...propsEventHandlers,\n      ...extractEventHandlers(externalProps, [\n      // onClick is handled by the root slot\n      'onClick'\n      // do not ignore 'onInputChange', we want slotProps.input.onInputChange to enter the DOM and throw\n      ])\n    };\n    const mergedEventHandlers = {\n      ...externalEventHandlers,\n      onFocus: createHandleFocus(externalEventHandlers),\n      // slotProps.onChange is renamed to onInputChange and passed to createHandleInputChange\n      onChange: createHandleInputChange({\n        ...externalEventHandlers,\n        onInputChange: externalEventHandlers.onChange\n      }),\n      onBlur: createHandleBlur(externalEventHandlers),\n      onKeyDown: createHandleKeyDown(externalEventHandlers)\n    };\n    const displayValue = (focused ? inputValue : value) ?? '';\n\n    // get rid of slotProps.input.onInputChange before returning to prevent it from entering the DOM\n    // if it was passed, it will be in mergedEventHandlers and throw\n    delete externalProps.onInputChange;\n    return {\n      type: 'text',\n      id: inputId,\n      'aria-invalid': errorProp || undefined,\n      defaultValue: undefined,\n      value: displayValue,\n      'aria-valuenow': displayValue,\n      'aria-valuetext': String(displayValue),\n      'aria-valuemin': min,\n      'aria-valuemax': max,\n      autoComplete: 'off',\n      autoCorrect: 'off',\n      spellCheck: 'false',\n      required: requiredProp,\n      readOnly: readOnlyProp,\n      'aria-disabled': disabledProp,\n      disabled: disabledProp,\n      ...externalProps,\n      ref: handleInputRef,\n      ...mergedEventHandlers\n    };\n  };\n  const handleStepperButtonMouseDown = event => {\n    event.preventDefault();\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  const stepperButtonCommonProps = {\n    'aria-controls': inputId,\n    tabIndex: -1\n  };\n  const isIncrementDisabled = disabledProp || (isNumber(value) ? value >= (max ?? Number.MAX_SAFE_INTEGER) : false);\n  const getIncrementButtonProps = (externalProps = {}) => {\n    return {\n      ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isIncrementDisabled,\n      'aria-disabled': isIncrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('up')\n    };\n  };\n  const isDecrementDisabled = disabledProp || (isNumber(value) ? value <= (min ?? Number.MIN_SAFE_INTEGER) : false);\n  const getDecrementButtonProps = (externalProps = {}) => {\n    return {\n      ...externalProps,\n      ...stepperButtonCommonProps,\n      disabled: isDecrementDisabled,\n      'aria-disabled': isDecrementDisabled,\n      onMouseDown: handleStepperButtonMouseDown,\n      onClick: handleStep('down')\n    };\n  };\n  return {\n    disabled: disabledProp,\n    error: errorProp,\n    focused,\n    formControlContext,\n    getInputProps,\n    getIncrementButtonProps,\n    getDecrementButtonProps,\n    getRootProps,\n    required: requiredProp,\n    value,\n    inputValue,\n    isIncrementDisabled,\n    isDecrementDisabled\n  };\n}"]},"metadata":{},"sourceType":"module"}