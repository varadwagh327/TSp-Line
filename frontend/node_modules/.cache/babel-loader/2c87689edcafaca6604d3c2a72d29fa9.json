{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { keyframes, styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Ripple from \"./Ripple.js\";\nimport touchRippleClasses from \"./touchRippleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`;\nconst exitKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\nconst pulsateKeyframe = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n}); // This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\n\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})`\n  opacity: 0;\n  position: absolute;\n\n  &.${touchRippleClasses.rippleVisible} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${enterKeyframe};\n    animation-duration: ${DURATION}ms;\n    animation-timing-function: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.transitions.easing.easeInOut;\n}};\n  }\n\n  &.${touchRippleClasses.ripplePulsate} {\n    animation-duration: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.transitions.duration.shorter;\n}}ms;\n  }\n\n  & .${touchRippleClasses.child} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${touchRippleClasses.childLeaving} {\n    opacity: 0;\n    animation-name: ${exitKeyframe};\n    animation-duration: ${DURATION}ms;\n    animation-timing-function: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.transitions.easing.easeInOut;\n}};\n  }\n\n  & .${touchRippleClasses.childPulsate} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${pulsateKeyframe};\n    animation-duration: 2500ms;\n    animation-timing-function: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.transitions.easing.easeInOut;\n}};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`;\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  const {\n    center: centerProp = false,\n    classes = {},\n    className,\n    ...other\n  } = props;\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = useTimeout(); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback(function () {\n    let event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let cb = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : () => {};\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event?.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event?.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size is even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event?.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n        // We have to make a tradeoff with this delay value.\n\n\n        startTimer.start(DELAY_RIPPLE, () => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        });\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit, startTimer]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    startTimer.clear(); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event?.type === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.start(0, () => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, [startTimer]);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, {\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container,\n    ...other,\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes\n/* remove-proptypes */\n= {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/ButtonBase/TouchRipple.js"],"names":["React","PropTypes","TransitionGroup","clsx","useTimeout","keyframes","styled","useDefaultProps","Ripple","touchRippleClasses","jsx","_jsx","DURATION","DELAY_RIPPLE","enterKeyframe","exitKeyframe","pulsateKeyframe","TouchRippleRoot","name","slot","overflow","pointerEvents","position","zIndex","top","right","bottom","left","borderRadius","TouchRippleRipple","rippleVisible","theme","transitions","easing","easeInOut","ripplePulsate","duration","shorter","child","childLeaving","childPulsate","TouchRipple","forwardRef","inProps","ref","props","center","centerProp","classes","className","other","ripples","setRipples","useState","nextKey","useRef","rippleCallback","useEffect","current","ignoringMouseDown","startTimer","startTimerCommit","container","startCommit","useCallback","params","pulsate","rippleX","rippleY","rippleSize","cb","oldRipples","ripple","timeout","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","width","height","undefined","clientX","clientY","touches","Math","round","length","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","stop","clear","slice","useImperativeHandle","root","children","component","exit","process","env","NODE_ENV","propTypes","bool","object","string"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { keyframes, styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Ripple from \"./Ripple.js\";\nimport touchRippleClasses from \"./touchRippleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nconst enterKeyframe = keyframes`\n  0% {\n    transform: scale(0);\n    opacity: 0.1;\n  }\n\n  100% {\n    transform: scale(1);\n    opacity: 0.3;\n  }\n`;\nconst exitKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: 0;\n  }\n`;\nconst pulsateKeyframe = keyframes`\n  0% {\n    transform: scale(1);\n  }\n\n  50% {\n    transform: scale(0.92);\n  }\n\n  100% {\n    transform: scale(1);\n  }\n`;\nexport const TouchRippleRoot = styled('span', {\n  name: 'MuiTouchRipple',\n  slot: 'Root'\n})({\n  overflow: 'hidden',\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 0,\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  borderRadius: 'inherit'\n});\n\n// This `styled()` function invokes keyframes. `styled-components` only supports keyframes\n// in string templates. Do not convert these styles in JS object as it will break.\nexport const TouchRippleRipple = styled(Ripple, {\n  name: 'MuiTouchRipple',\n  slot: 'Ripple'\n})`\n  opacity: 0;\n  position: absolute;\n\n  &.${touchRippleClasses.rippleVisible} {\n    opacity: 0.3;\n    transform: scale(1);\n    animation-name: ${enterKeyframe};\n    animation-duration: ${DURATION}ms;\n    animation-timing-function: ${({\n  theme\n}) => theme.transitions.easing.easeInOut};\n  }\n\n  &.${touchRippleClasses.ripplePulsate} {\n    animation-duration: ${({\n  theme\n}) => theme.transitions.duration.shorter}ms;\n  }\n\n  & .${touchRippleClasses.child} {\n    opacity: 1;\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 50%;\n    background-color: currentColor;\n  }\n\n  & .${touchRippleClasses.childLeaving} {\n    opacity: 0;\n    animation-name: ${exitKeyframe};\n    animation-duration: ${DURATION}ms;\n    animation-timing-function: ${({\n  theme\n}) => theme.transitions.easing.easeInOut};\n  }\n\n  & .${touchRippleClasses.childPulsate} {\n    position: absolute;\n    /* @noflip */\n    left: 0px;\n    top: 0;\n    animation-name: ${pulsateKeyframe};\n    animation-duration: 2500ms;\n    animation-timing-function: ${({\n  theme\n}) => theme.transitions.easing.easeInOut};\n    animation-iteration-count: infinite;\n    animation-delay: 200ms;\n  }\n`;\n\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTouchRipple'\n  });\n  const {\n    center: centerProp = false,\n    classes = {},\n    className,\n    ...other\n  } = props;\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]);\n\n  // Used to filter out mouse emulated events on mobile.\n  const ignoringMouseDown = React.useRef(false);\n  // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n  const startTimer = useTimeout();\n\n  // This is the hook called once the previous timeout is ready.\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/_jsx(TouchRippleRipple, {\n      classes: {\n        ripple: clsx(classes.ripple, touchRippleClasses.ripple),\n        rippleVisible: clsx(classes.rippleVisible, touchRippleClasses.rippleVisible),\n        ripplePulsate: clsx(classes.ripplePulsate, touchRippleClasses.ripplePulsate),\n        child: clsx(classes.child, touchRippleClasses.child),\n        childLeaving: clsx(classes.childLeaving, touchRippleClasses.childLeaving),\n        childPulsate: clsx(classes.childPulsate, touchRippleClasses.childPulsate)\n      },\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    }, nextKey.current)]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb = () => {}) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n    } = options;\n    if (event?.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n    if (event?.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    };\n\n    // Get the size of the ripple\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n    if (center || event === undefined || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches && event.touches.length > 0 ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3);\n\n      // For some reason the animation is broken on Mobile Chrome if the size is even.\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    }\n\n    // Touche devices\n    if (event?.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        };\n        // Delay the execution of the ripple effect.\n        // We have to make a tradeoff with this delay value.\n        startTimer.start(DELAY_RIPPLE, () => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        });\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit, startTimer]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    startTimer.clear();\n\n    // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n    if (event?.type === 'touchend' && startTimerCommit.current) {\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.start(0, () => {\n        stop(event, cb);\n      });\n      return;\n    }\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, [startTimer]);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/_jsx(TouchRippleRoot, {\n    className: clsx(touchRippleClasses.root, classes.root, className),\n    ref: container,\n    ...other,\n    children: /*#__PURE__*/_jsx(TransitionGroup, {\n      component: null,\n      exit: true,\n      children: ripples\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes /* remove-proptypes */ = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default TouchRipple;"]},"metadata":{},"sourceType":"module"}