{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'inline-flex',\n    alignItems: 'center',\n    cursor: 'pointer',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    WebkitTapHighlightColor: 'transparent',\n    marginLeft: -11,\n    marginRight: 16,\n    // used for row presentation of radio/checkbox\n    [`&.${formControlLabelClasses.disabled}`]: {\n      cursor: 'default'\n    },\n    [`& .${formControlLabelClasses.label}`]: {\n      [`&.${formControlLabelClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.text.disabled\n      }\n    },\n    variants: [{\n      props: {\n        labelPlacement: 'start'\n      },\n      style: {\n        flexDirection: 'row-reverse',\n        marginRight: -11\n      }\n    }, {\n      props: {\n        labelPlacement: 'top'\n      },\n      style: {\n        flexDirection: 'column-reverse'\n      }\n    }, {\n      props: {\n        labelPlacement: 'bottom'\n      },\n      style: {\n        flexDirection: 'column'\n      }\n    }, {\n      props: _ref2 => {\n        let {\n          labelPlacement\n        } = _ref2;\n        return labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom';\n      },\n      style: {\n        marginLeft: 16 // used for row presentation of radio/checkbox\n\n      }\n    }]\n  };\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    [`&.${formControlLabelClasses.error}`]: {\n      color: (theme.vars || theme).palette.error.main\n    }\n  };\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = { ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: { ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"names":["React","PropTypes","clsx","refType","composeClasses","useFormControl","styled","memoTheme","useDefaultProps","Typography","capitalize","formControlLabelClasses","getFormControlLabelUtilityClasses","formControlState","useSlot","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disabled","labelPlacement","error","required","slots","root","label","asterisk","FormControlLabelRoot","name","slot","overridesResolver","props","styles","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","color","vars","palette","text","variants","style","flexDirection","AsteriskComponent","main","FormControlLabel","forwardRef","inProps","ref","checked","className","componentsProps","control","disabledProp","disableTypography","inputRef","labelProp","onChange","requiredProp","slotProps","value","other","muiFormControl","controlProps","forEach","key","fcs","states","externalForwardedProps","TypographySlot","typographySlotProps","elementType","type","component","children","cloneElement","process","env","NODE_ENV","propTypes","bool","object","string","shape","typography","element","isRequired","node","oneOf","func","oneOfType","sx","arrayOf","any"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"]},"metadata":{},"sourceType":"module"}