{"ast":null,"code":"/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\n\n\nfunction checkSimplePaletteColorValues(obj) {\n  let additionalPropertiesToCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\n\n\nexport default function createSimplePaletteValueFilter() {\n  let additionalPropertiesToCheck = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return _ref => {\n    let [, value] = _ref;\n    return value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/utils/createSimplePaletteValueFilter.js"],"names":["hasCorrectMainProperty","obj","main","checkSimplePaletteColorValues","additionalPropertiesToCheck","value","hasOwnProperty","createSimplePaletteValueFilter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,sBAAT,CAAgCC,GAAhC,EAAqC;AACnC,SAAO,OAAOA,GAAG,CAACC,IAAX,KAAoB,QAA3B;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,6BAAT,CAAuCF,GAAvC,EAA8E;AAAA,MAAlCG,2BAAkC,uEAAJ,EAAI;;AAC5E,MAAI,CAACJ,sBAAsB,CAACC,GAAD,CAA3B,EAAkC;AAChC,WAAO,KAAP;AACD;;AACD,OAAK,MAAMI,KAAX,IAAoBD,2BAApB,EAAiD;AAC/C,QAAI,CAACH,GAAG,CAACK,cAAJ,CAAmBD,KAAnB,CAAD,IAA8B,OAAOJ,GAAG,CAACI,KAAD,CAAV,KAAsB,QAAxD,EAAkE;AAChE,aAAO,KAAP;AACD;AACF;;AACD,SAAO,IAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASE,8BAAT,GAA0E;AAAA,MAAlCH,2BAAkC,uEAAJ,EAAI;AACvF,SAAO;AAAA,QAAC,GAAGC,KAAH,CAAD;AAAA,WAAeA,KAAK,IAAIF,6BAA6B,CAACE,KAAD,EAAQD,2BAAR,CAArD;AAAA,GAAP;AACD","sourcesContent":["/**\n * Type guard to check if the object has a \"main\" property of type string.\n *\n * @param obj - the object to check\n * @returns boolean\n */\nfunction hasCorrectMainProperty(obj) {\n  return typeof obj.main === 'string';\n}\n/**\n * Checks if the object conforms to the SimplePaletteColorOptions type.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param obj - The object to check\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns boolean\n */\nfunction checkSimplePaletteColorValues(obj, additionalPropertiesToCheck = []) {\n  if (!hasCorrectMainProperty(obj)) {\n    return false;\n  }\n  for (const value of additionalPropertiesToCheck) {\n    if (!obj.hasOwnProperty(value) || typeof obj[value] !== 'string') {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Creates a filter function used to filter simple palette color options.\n * The minimum requirement is that the object has a \"main\" property of type string, this is always checked.\n * Optionally, you can pass additional properties to check.\n *\n * @param additionalPropertiesToCheck - Array containing \"light\", \"dark\", and/or \"contrastText\"\n * @returns ([, value]: [any, PaletteColorOptions]) => boolean\n */\nexport default function createSimplePaletteValueFilter(additionalPropertiesToCheck = []) {\n  return ([, value]) => value && checkSimplePaletteColorValues(value, additionalPropertiesToCheck);\n}"]},"metadata":{},"sourceType":"module"}