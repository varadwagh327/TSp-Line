{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { isFilled, isAdornedStart } from \"../InputBase/utils.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport isMuiElement from \"../utils/isMuiElement.js\";\nimport FormControlContext from \"./FormControlContext.js\";\nimport { getFormControlUtilityClasses } from \"./formControlClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\n\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: (_ref, styles) => {\n    let {\n      ownerState\n    } = _ref;\n    return { ...styles.root,\n      ...styles[`margin${capitalize(ownerState.margin)}`],\n      ...(ownerState.fullWidth && styles.fullWidth)\n    };\n  }\n})({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top',\n  // Fix alignment issue on Safari.\n  variants: [{\n    props: {\n      margin: 'normal'\n    },\n    style: {\n      marginTop: 16,\n      marginBottom: 8\n    }\n  }, {\n    props: {\n      margin: 'dense'\n    },\n    style: {\n      marginTop: 8,\n      marginBottom: 4\n    }\n  }, {\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }]\n});\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\n\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined',\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  const registeredInput = React.useRef(false);\n\n  if (process.env.NODE_ENV !== 'production') {\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/FormControl/FormControl.js"],"names":["React","PropTypes","clsx","composeClasses","styled","useDefaultProps","isFilled","isAdornedStart","capitalize","isMuiElement","FormControlContext","getFormControlUtilityClasses","jsx","_jsx","useUtilityClasses","ownerState","classes","margin","fullWidth","slots","root","FormControlRoot","name","slot","overridesResolver","styles","display","flexDirection","position","minWidth","padding","border","verticalAlign","variants","props","style","marginTop","marginBottom","width","FormControl","forwardRef","inProps","ref","children","className","color","component","disabled","error","focused","visuallyFocused","hiddenLabel","required","size","variant","other","adornedStart","setAdornedStart","useState","initialAdornedStart","Children","forEach","child","input","filled","setFilled","initialFilled","inputProps","focusedState","setFocused","undefined","registerEffect","registeredInput","useRef","process","env","NODE_ENV","current","console","join","childContext","useMemo","onBlur","onEmpty","onFilled","onFocus","Provider","value","as","propTypes","node","object","string","oneOfType","oneOf","elementType","bool","sx","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { isFilled, isAdornedStart } from \"../InputBase/utils.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport isMuiElement from \"../utils/isMuiElement.js\";\nimport FormControlContext from \"./FormControlContext.js\";\nimport { getFormControlUtilityClasses } from \"./formControlClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...styles[`margin${capitalize(ownerState.margin)}`],\n      ...(ownerState.fullWidth && styles.fullWidth)\n    };\n  }\n})({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top',\n  // Fix alignment issue on Safari.\n  variants: [{\n    props: {\n      margin: 'normal'\n    },\n    style: {\n      marginTop: 16,\n      marginBottom: 8\n    }\n  }, {\n    props: {\n      margin: 'dense'\n    },\n    style: {\n      marginTop: 8,\n      marginBottom: 4\n    }\n  }, {\n    props: {\n      fullWidth: true\n    },\n    style: {\n      width: '100%'\n    }\n  }]\n});\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  const registeredInput = React.useRef(false);\n  if (process.env.NODE_ENV !== 'production') {\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;"]},"metadata":{},"sourceType":"module"}