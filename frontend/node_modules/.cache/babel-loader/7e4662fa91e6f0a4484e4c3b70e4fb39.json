{"ast":null,"code":"// We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to\n// allocate more objects.\nconst arg = {\n  theme: undefined\n};\n/**\n * Memoize style function on theme.\n * Intended to be used in styled() calls that only need access to the theme.\n */\n\nexport default function memoTheme(styleFn) {\n  let lastValue;\n  let lastTheme;\n  return props => {\n    let value = lastValue;\n\n    if (value === undefined || props.theme !== lastTheme) {\n      arg.theme = props.theme;\n      value = styleFn(arg);\n      lastValue = value;\n      lastTheme = props.theme;\n    }\n\n    return value;\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/utils/memoTheme.js"],"names":["arg","theme","undefined","memoTheme","styleFn","lastValue","lastTheme","props","value"],"mappings":"AAAA;AACA;AACA,MAAMA,GAAG,GAAG;AACVC,EAAAA,KAAK,EAAEC;AADG,CAAZ;AAIA;AACA;AACA;AACA;;AACA,eAAe,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AACzC,MAAIC,SAAJ;AACA,MAAIC,SAAJ;AACA,SAAOC,KAAK,IAAI;AACd,QAAIC,KAAK,GAAGH,SAAZ;;AACA,QAAIG,KAAK,KAAKN,SAAV,IAAuBK,KAAK,CAACN,KAAN,KAAgBK,SAA3C,EAAsD;AACpDN,MAAAA,GAAG,CAACC,KAAJ,GAAYM,KAAK,CAACN,KAAlB;AACAO,MAAAA,KAAK,GAAGJ,OAAO,CAACJ,GAAD,CAAf;AACAK,MAAAA,SAAS,GAAGG,KAAZ;AACAF,MAAAA,SAAS,GAAGC,KAAK,CAACN,KAAlB;AACD;;AACD,WAAOO,KAAP;AACD,GATD;AAUD","sourcesContent":["// We need to pass an argument as `{ theme }` for PigmentCSS, but we don't want to\n// allocate more objects.\nconst arg = {\n  theme: undefined\n};\n\n/**\n * Memoize style function on theme.\n * Intended to be used in styled() calls that only need access to the theme.\n */\nexport default function memoTheme(styleFn) {\n  let lastValue;\n  let lastTheme;\n  return props => {\n    let value = lastValue;\n    if (value === undefined || props.theme !== lastTheme) {\n      arg.theme = props.theme;\n      value = styleFn(arg);\n      lastValue = value;\n      lastTheme = props.theme;\n    }\n    return value;\n  };\n}"]},"metadata":{},"sourceType":"module"}