{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { isHostComponent } from '../utils/isHostComponent';\nimport { TablePaginationActions } from './TablePaginationActions';\nimport { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\n\nfunction defaultLabelDisplayedRows(_ref) {\n  let {\n    from,\n    to,\n    count\n  } = _ref;\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\n *\n * API:\n *\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\n */\n\n\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\n  const {\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n  const Root = slots.root ?? 'td';\n\n  if (Root === 'td' || !isHostComponent(Root)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = slots.select ?? 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = slots.actions ?? TablePaginationActions;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = slots.menuItem ?? 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = slots.selectLabel ?? 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = slots.displayedRows ?? 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = slots.toolbar ?? 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = slots.spacer ?? 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, { ...rootProps,\n    children: /*#__PURE__*/_jsxs(Toolbar, { ...toolbarProps,\n      children: [/*#__PURE__*/_jsx(Spacer, { ...spacerProps\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, { ...selectLabelProps,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, { ...selectProps,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, { ...menuItemProps,\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }, typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      }), /*#__PURE__*/_jsx(DisplayedRows, { ...displayedRowsProps,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(Actions, { ...actionsProps\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport { TablePagination };","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/TablePagination/TablePagination.js"],"names":["React","PropTypes","unstable_useId","useId","chainPropTypes","integerPropType","useSlotProps","unstable_composeClasses","composeClasses","isHostComponent","TablePaginationActions","getTablePaginationUtilityClass","useClassNamesOverride","jsx","_jsx","jsxs","_jsxs","createElement","_createElement","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","slots","root","toolbar","spacer","selectLabel","select","input","selectIcon","menuItem","displayedRows","actions","TablePagination","forwardRef","props","forwardedRef","colSpan","colSpanProp","getItemAriaLabel","labelDisplayedRows","labelId","labelIdProp","labelRowsPerPage","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","selectId","selectIdProp","slotProps","other","ownerState","classes","Root","getLabelDisplayedRowsTo","Math","min","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","className","Select","selectProps","value","id","onChange","event","toString","filter","Boolean","join","undefined","Actions","actionsProps","MenuItem","menuItemProps","SelectLabel","selectLabelProps","DisplayedRows","displayedRowsProps","Toolbar","toolbarProps","Spacer","spacerProps","children","length","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","number","isRequired","func","string","node","newLastPage","max","ceil","Error","arrayOf","oneOfType","shape","object"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAc,IAAIC,KAA3B,EAAkCC,cAAlC,EAAkDC,eAAlD,QAAyE,YAAzE;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,mBAA1D;AACA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,SAASC,8BAAT,QAA+C,0BAA/C;AACA,SAASC,qBAAT,QAAsC,gCAAtC;AACA,SAASC,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,QAA2C,mBAA3C;AACA,SAASC,aAAa,IAAIC,cAA1B,QAAgD,OAAhD;;AACA,SAASC,yBAAT,OAIG;AAAA,MAJgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,EAFiC;AAGjCC,IAAAA;AAHiC,GAIhC;AACD,SAAQ,GAAEF,IAAK,IAAGC,EAAG,OAAMC,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,GAAwB,aAAYD,EAAG,EAAE,EAApE;AACD;;AACD,SAASE,mBAAT,CAA6BC,IAA7B,EAAmC;AACjC,SAAQ,SAAQA,IAAK,OAArB;AACD;;AACD,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,CAAC,MAAD,CADM;AAEZC,IAAAA,OAAO,EAAE,CAAC,SAAD,CAFG;AAGZC,IAAAA,MAAM,EAAE,CAAC,QAAD,CAHI;AAIZC,IAAAA,WAAW,EAAE,CAAC,aAAD,CAJD;AAKZC,IAAAA,MAAM,EAAE,CAAC,QAAD,CALI;AAMZC,IAAAA,KAAK,EAAE,CAAC,OAAD,CANK;AAOZC,IAAAA,UAAU,EAAE,CAAC,YAAD,CAPA;AAQZC,IAAAA,QAAQ,EAAE,CAAC,UAAD,CARE;AASZC,IAAAA,aAAa,EAAE,CAAC,eAAD,CATH;AAUZC,IAAAA,OAAO,EAAE,CAAC,SAAD;AAVG,GAAd;AAYA,SAAO5B,cAAc,CAACkB,KAAD,EAAQd,qBAAqB,CAACD,8BAAD,CAA7B,CAArB;AACD,CAdD;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAM0B,eAAe,GAAG,aAAarC,KAAK,CAACsC,UAAN,CAAiB,SAASD,eAAT,CAAyBE,KAAzB,EAAgCC,YAAhC,EAA8C;AAClG,QAAM;AACJC,IAAAA,OAAO,EAAEC,WADL;AAEJpB,IAAAA,KAFI;AAGJqB,IAAAA,gBAAgB,GAAGpB,mBAHf;AAIJqB,IAAAA,kBAAkB,GAAGzB,yBAJjB;AAKJ0B,IAAAA,OAAO,EAAEC,WALL;AAMJC,IAAAA,gBAAgB,GAAG,gBANf;AAOJC,IAAAA,YAPI;AAQJC,IAAAA,mBARI;AASJC,IAAAA,IATI;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,kBAAkB,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,GAAb,CAXjB;AAYJC,IAAAA,QAAQ,EAAEC,YAZN;AAaJC,IAAAA,SAAS,GAAG,EAbR;AAcJ7B,IAAAA,KAAK,GAAG,EAdJ;AAeJ,OAAG8B;AAfC,MAgBFjB,KAhBJ;AAiBA,QAAMkB,UAAU,GAAGlB,KAAnB;AACA,QAAMmB,OAAO,GAAGjC,iBAAiB,EAAjC;AACA,MAAIgB,OAAJ;AACA,QAAMkB,IAAI,GAAGjC,KAAK,CAACC,IAAN,IAAc,IAA3B;;AACA,MAAIgC,IAAI,KAAK,IAAT,IAAiB,CAAClD,eAAe,CAACkD,IAAD,CAArC,EAA6C;AAC3ClB,IAAAA,OAAO,GAAGC,WAAW,IAAI,IAAzB,CAD2C,CACZ;AAChC;;AACD,QAAMkB,uBAAuB,GAAG,MAAM;AACpC,QAAItC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAO,CAAC4B,IAAI,GAAG,CAAR,IAAaC,WAApB;AACD;;AACD,WAAOA,WAAW,KAAK,CAAC,CAAjB,GAAqB7B,KAArB,GAA6BuC,IAAI,CAACC,GAAL,CAASxC,KAAT,EAAgB,CAAC4B,IAAI,GAAG,CAAR,IAAaC,WAA7B,CAApC;AACD,GALD;;AAMA,QAAME,QAAQ,GAAGlD,KAAK,CAACmD,YAAD,CAAtB;AACA,QAAMT,OAAO,GAAG1C,KAAK,CAAC2C,WAAD,CAArB;AACA,QAAMiB,SAAS,GAAGzD,YAAY,CAAC;AAC7B0D,IAAAA,WAAW,EAAEL,IADgB;AAE7BM,IAAAA,iBAAiB,EAAEV,SAAS,CAAC5B,IAFA;AAG7BuC,IAAAA,sBAAsB,EAAEV,KAHK;AAI7BW,IAAAA,eAAe,EAAE;AACf1B,MAAAA,OADe;AAEf2B,MAAAA,GAAG,EAAE5B;AAFU,KAJY;AAQ7BiB,IAAAA,UAR6B;AAS7BY,IAAAA,SAAS,EAAEX,OAAO,CAAC/B;AATU,GAAD,CAA9B;AAWA,QAAM2C,MAAM,GAAG5C,KAAK,CAACK,MAAN,IAAgB,QAA/B;AACA,QAAMwC,WAAW,GAAGjE,YAAY,CAAC;AAC/B0D,IAAAA,WAAW,EAAEM,MADkB;AAE/BL,IAAAA,iBAAiB,EAAEV,SAAS,CAACxB,MAFE;AAG/BoC,IAAAA,eAAe,EAAE;AACfK,MAAAA,KAAK,EAAErB,WADQ;AAEfsB,MAAAA,EAAE,EAAEpB,QAFW;AAGfqB,MAAAA,QAAQ,EAAEC,KAAK,IAAI1B,mBAAmB,IAAIA,mBAAmB,CAAC0B,KAAD,CAH9C;AAIf,oBAAcxB,WAAW,CAACyB,QAAZ,EAJC;AAKf,yBAAmB,CAAC/B,OAAD,EAAUQ,QAAV,EAAoBwB,MAApB,CAA2BC,OAA3B,EAAoCC,IAApC,CAAyC,GAAzC,KAAiDC;AALrD,KAHc;AAU/BvB,IAAAA,UAV+B;AAW/BY,IAAAA,SAAS,EAAEX,OAAO,CAAC3B;AAXY,GAAD,CAAhC;AAaA,QAAMkD,OAAO,GAAGvD,KAAK,CAACU,OAAN,IAAiB1B,sBAAjC;AACA,QAAMwE,YAAY,GAAG5E,YAAY,CAAC;AAChC0D,IAAAA,WAAW,EAAEiB,OADmB;AAEhChB,IAAAA,iBAAiB,EAAEV,SAAS,CAACnB,OAFG;AAGhC+B,IAAAA,eAAe,EAAE;AACfjB,MAAAA,IADe;AAEfC,MAAAA,WAFe;AAGf7B,MAAAA,KAHe;AAIf0B,MAAAA,YAJe;AAKfL,MAAAA;AALe,KAHe;AAUhCc,IAAAA,UAVgC;AAWhCY,IAAAA,SAAS,EAAEX,OAAO,CAACtB;AAXa,GAAD,CAAjC;AAaA,QAAM+C,QAAQ,GAAGzD,KAAK,CAACQ,QAAN,IAAkB,QAAnC;AACA,QAAMkD,aAAa,GAAG9E,YAAY,CAAC;AACjC0D,IAAAA,WAAW,EAAEmB,QADoB;AAEjClB,IAAAA,iBAAiB,EAAEV,SAAS,CAACrB,QAFI;AAGjCiC,IAAAA,eAAe,EAAE;AACfK,MAAAA,KAAK,EAAEQ;AADQ,KAHgB;AAMjCvB,IAAAA,UANiC;AAOjCY,IAAAA,SAAS,EAAEX,OAAO,CAACxB;AAPc,GAAD,CAAlC;AASA,QAAMmD,WAAW,GAAG3D,KAAK,CAACI,WAAN,IAAqB,GAAzC;AACA,QAAMwD,gBAAgB,GAAGhF,YAAY,CAAC;AACpC0D,IAAAA,WAAW,EAAEqB,WADuB;AAEpCpB,IAAAA,iBAAiB,EAAEV,SAAS,CAACzB,WAFO;AAGpCqC,IAAAA,eAAe,EAAE;AACfM,MAAAA,EAAE,EAAE5B;AADW,KAHmB;AAMpCY,IAAAA,UANoC;AAOpCY,IAAAA,SAAS,EAAEX,OAAO,CAAC5B;AAPiB,GAAD,CAArC;AASA,QAAMyD,aAAa,GAAG7D,KAAK,CAACS,aAAN,IAAuB,GAA7C;AACA,QAAMqD,kBAAkB,GAAGlF,YAAY,CAAC;AACtC0D,IAAAA,WAAW,EAAEuB,aADyB;AAEtCtB,IAAAA,iBAAiB,EAAEV,SAAS,CAACpB,aAFS;AAGtCsB,IAAAA,UAHsC;AAItCY,IAAAA,SAAS,EAAEX,OAAO,CAACvB;AAJmB,GAAD,CAAvC;AAMA,QAAMsD,OAAO,GAAG/D,KAAK,CAACE,OAAN,IAAiB,KAAjC;AACA,QAAM8D,YAAY,GAAGpF,YAAY,CAAC;AAChC0D,IAAAA,WAAW,EAAEyB,OADmB;AAEhCxB,IAAAA,iBAAiB,EAAEV,SAAS,CAAC3B,OAFG;AAGhC6B,IAAAA,UAHgC;AAIhCY,IAAAA,SAAS,EAAEX,OAAO,CAAC9B;AAJa,GAAD,CAAjC;AAMA,QAAM+D,MAAM,GAAGjE,KAAK,CAACG,MAAN,IAAgB,KAA/B;AACA,QAAM+D,WAAW,GAAGtF,YAAY,CAAC;AAC/B0D,IAAAA,WAAW,EAAE2B,MADkB;AAE/B1B,IAAAA,iBAAiB,EAAEV,SAAS,CAAC1B,MAFE;AAG/B4B,IAAAA,UAH+B;AAI/BY,IAAAA,SAAS,EAAEX,OAAO,CAAC7B;AAJY,GAAD,CAAhC;AAMA,SAAO,aAAaf,IAAI,CAAC6C,IAAD,EAAO,EAC7B,GAAGI,SAD0B;AAE7B8B,IAAAA,QAAQ,EAAE,aAAa7E,KAAK,CAACyE,OAAD,EAAU,EACpC,GAAGC,YADiC;AAEpCG,MAAAA,QAAQ,EAAE,CAAC,aAAa/E,IAAI,CAAC6E,MAAD,EAAS,EACnC,GAAGC;AADgC,OAAT,CAAlB,EAENxC,kBAAkB,CAAC0C,MAAnB,GAA4B,CAA5B,IAAiC,aAAahF,IAAI,CAACuE,WAAD,EAAc,EAClE,GAAGC,gBAD+D;AAElEO,QAAAA,QAAQ,EAAE9C;AAFwD,OAAd,CAF5C,EAKNK,kBAAkB,CAAC0C,MAAnB,GAA4B,CAA5B,IAAiC,aAAahF,IAAI,CAACwD,MAAD,EAAS,EAC7D,GAAGC,WAD0D;AAE7DsB,QAAAA,QAAQ,EAAEzC,kBAAkB,CAAC2C,GAAnB,CAAuBC,iBAAiB,IAAI,aAAa9E,cAAc,CAACiE,QAAD,EAAW,EAC1F,GAAGC,aADuF;AAE1Fa,UAAAA,GAAG,EAAE,OAAOD,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACE,KAA3D,GAAmEF,iBAAiB,CAACE,KAArF,GAA6FF,iBAFR;AAG1FxB,UAAAA,KAAK,EAAE,OAAOwB,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACxB,KAA3D,GAAmEwB,iBAAiB,CAACxB,KAArF,GAA6FwB;AAHV,SAAX,EAI9E,OAAOA,iBAAP,KAA6B,QAA7B,IAAyCA,iBAAiB,CAACE,KAA3D,GAAmEF,iBAAiB,CAACE,KAArF,GAA6FF,iBAJf,CAAvE;AAFmD,OAAT,CAL5C,EAYN,aAAalF,IAAI,CAACyE,aAAD,EAAgB,EACnC,GAAGC,kBADgC;AAEnCK,QAAAA,QAAQ,EAAEjD,kBAAkB,CAAC;AAC3BxB,UAAAA,IAAI,EAAEE,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB4B,IAAI,GAAGC,WAAP,GAAqB,CADlB;AAE3B9B,UAAAA,EAAE,EAAEuC,uBAAuB,EAFA;AAG3BtC,UAAAA,KAAK,EAAEA,KAAK,KAAK,CAAC,CAAX,GAAe,CAAC,CAAhB,GAAoBA,KAHA;AAI3B4B,UAAAA;AAJ2B,SAAD;AAFO,OAAhB,CAZX,EAoBN,aAAapC,IAAI,CAACmE,OAAD,EAAU,EAC7B,GAAGC;AAD0B,OAAV,CApBX;AAF0B,KAAV;AAFC,GAAP,CAAxB;AA6BD,CA9IoC,CAArC;AA+IAiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChE,eAAe,CAACiE;AAAU;AAA1B,EAAmD;AACzF;AACA;AACA;AACA;;AACA;AACF;AACA;AACE7D,EAAAA,OAAO,EAAExC,SAAS,CAACsG,MARsE;;AASzF;AACF;AACA;AACA;AACA;AACEjF,EAAAA,KAAK,EAAErB,SAAS,CAACsG,MAAV,CAAiBC,UAdiE;;AAezF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE7D,EAAAA,gBAAgB,EAAE1C,SAAS,CAACwG,IA1B6D;;AA2BzF;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE7D,EAAAA,kBAAkB,EAAE3C,SAAS,CAACwG,IApC2D;;AAqCzF;AACF;AACA;AACE5D,EAAAA,OAAO,EAAE5C,SAAS,CAACyG,MAxCsE;;AAyCzF;AACF;AACA;AACA;AACA;AACA;AACE3D,EAAAA,gBAAgB,EAAE9C,SAAS,CAAC0G,IA/C6D;;AAgDzF;AACF;AACA;AACA;AACA;AACA;AACE3D,EAAAA,YAAY,EAAE/C,SAAS,CAACwG,IAAV,CAAeD,UAtD4D;;AAuDzF;AACF;AACA;AACA;AACA;AACEvD,EAAAA,mBAAmB,EAAEhD,SAAS,CAACwG,IA5D0D;;AA6DzF;AACF;AACA;AACEvD,EAAAA,IAAI,EAAE9C,cAAc,CAACC,eAAe,CAACmG,UAAjB,EAA6BjE,KAAK,IAAI;AACxD,UAAM;AACJjB,MAAAA,KADI;AAEJ4B,MAAAA,IAFI;AAGJC,MAAAA;AAHI,QAIFZ,KAJJ;;AAKA,QAAIjB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,aAAO,IAAP;AACD;;AACD,UAAMsF,WAAW,GAAG/C,IAAI,CAACgD,GAAL,CAAS,CAAT,EAAYhD,IAAI,CAACiD,IAAL,CAAUxF,KAAK,GAAG6B,WAAlB,IAAiC,CAA7C,CAApB;;AACA,QAAID,IAAI,GAAG,CAAP,IAAYA,IAAI,GAAG0D,WAAvB,EAAoC;AAClC,aAAO,IAAIG,KAAJ,CAAU,6DAA8D,SAAQH,WAAY,iBAAgB1D,IAAK,IAAjH,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAdmB,CAhEqE;;AA+EzF;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,EAAE9C,eAAe,CAACmG,UApF4D;;AAqFzF;AACF;AACA;AACA;AACA;AACA;AACEpD,EAAAA,kBAAkB,EAAEnD,SAAS,CAAC+G,OAAV,CAAkB/G,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACsG,MAAX,EAAmBtG,SAAS,CAACiH,KAAV,CAAgB;AAC3FhB,IAAAA,KAAK,EAAEjG,SAAS,CAACyG,MAAV,CAAiBF,UADmE;AAE3FhC,IAAAA,KAAK,EAAEvE,SAAS,CAACsG,MAAV,CAAiBC;AAFmE,GAAhB,CAAnB,CAApB,EAGjCA,UAHe,CA3FqE;;AA+FzF;AACF;AACA;AACEnD,EAAAA,QAAQ,EAAEpD,SAAS,CAACyG,MAlGqE;;AAmGzF;AACF;AACA;AACA;AACEnD,EAAAA,SAAS,EAAEtD;AAAU;AAAD,GAAuCiH,KAAhD,CAAsD;AAC/D9E,IAAAA,OAAO,EAAEnC,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CADsD;AAE/DhF,IAAAA,aAAa,EAAElC,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CAFgD;AAG/DjF,IAAAA,QAAQ,EAAEjC,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CAHqD;AAI/DxF,IAAAA,IAAI,EAAE1B,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CAJyD;AAK/DpF,IAAAA,MAAM,EAAE9B,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CALuD;AAM/DrF,IAAAA,WAAW,EAAE7B,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CANkD;AAO/DtF,IAAAA,MAAM,EAAE5B,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB,CAPuD;AAQ/DvF,IAAAA,OAAO,EAAE3B,SAAS,CAACgH,SAAV,CAAoB,CAAChH,SAAS,CAACwG,IAAX,EAAiBxG,SAAS,CAACkH,MAA3B,CAApB;AARsD,GAAtD,CAvG8E;;AAiHzF;AACF;AACA;AACA;AACA;AACEzF,EAAAA,KAAK,EAAEzB,SAAS,CAACiH,KAAV,CAAgB;AACrB9E,IAAAA,OAAO,EAAEnC,SAAS,CAAC+D,WADE;AAErB7B,IAAAA,aAAa,EAAElC,SAAS,CAAC+D,WAFJ;AAGrB9B,IAAAA,QAAQ,EAAEjC,SAAS,CAAC+D,WAHC;AAIrBrC,IAAAA,IAAI,EAAE1B,SAAS,CAAC+D,WAJK;AAKrBjC,IAAAA,MAAM,EAAE9B,SAAS,CAAC+D,WALG;AAMrBlC,IAAAA,WAAW,EAAE7B,SAAS,CAAC+D,WANF;AAOrBnC,IAAAA,MAAM,EAAE5B,SAAS,CAAC+D,WAPG;AAQrBpC,IAAAA,OAAO,EAAE3B,SAAS,CAAC+D;AARE,GAAhB;AAtHkF,CAA3F,GAgII,KAAK,CAhIT;AAiIA,SAAS3B,eAAT","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { isHostComponent } from '../utils/isHostComponent';\nimport { TablePaginationActions } from './TablePaginationActions';\nimport { getTablePaginationUtilityClass } from './tablePaginationClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, useClassNamesOverride(getTablePaginationUtilityClass));\n};\n\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Table Pagination](https://mui.com/base-ui/react-table-pagination/)\n *\n * API:\n *\n * - [TablePagination API](https://mui.com/base-ui/react-table-pagination/components-api/#table-pagination)\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, forwardedRef) {\n  const {\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n  const Root = slots.root ?? 'td';\n  if (Root === 'td' || !isHostComponent(Root)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref: forwardedRef\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = slots.select ?? 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: slotProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: event => onRowsPerPageChange && onRowsPerPageChange(event),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = slots.actions ?? TablePaginationActions;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: slotProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = slots.menuItem ?? 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: slotProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = slots.selectLabel ?? 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: slotProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = slots.displayedRows ?? 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: slotProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = slots.toolbar ?? 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: slotProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = slots.spacer ?? 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: slotProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, {\n    ...rootProps,\n    children: /*#__PURE__*/_jsxs(Toolbar, {\n      ...toolbarProps,\n      children: [/*#__PURE__*/_jsx(Spacer, {\n        ...spacerProps\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, {\n        ...selectLabelProps,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, {\n        ...selectProps,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, {\n          ...menuItemProps,\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }, typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      }), /*#__PURE__*/_jsx(DisplayedRows, {\n        ...displayedRowsProps,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(Actions, {\n        ...actionsProps\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.elementType,\n    displayedRows: PropTypes.elementType,\n    menuItem: PropTypes.elementType,\n    root: PropTypes.elementType,\n    select: PropTypes.elementType,\n    selectLabel: PropTypes.elementType,\n    spacer: PropTypes.elementType,\n    toolbar: PropTypes.elementType\n  })\n} : void 0;\nexport { TablePagination };"]},"metadata":{},"sourceType":"module"}