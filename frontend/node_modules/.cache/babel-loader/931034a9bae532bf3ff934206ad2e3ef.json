{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from \"./tabPanelClasses.js\";\nimport { getPanelId, getTabId, useTabContext } from \"../TabContext/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\n\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    padding: theme.spacing(3)\n  };\n});\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n    children,\n    className,\n    value,\n    keepMounted = false,\n    ...other\n  } = props;\n  const ownerState = { ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, {\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState,\n    ...other,\n    children: (keepMounted || value === context.value) && children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Always keep the children in the DOM.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/lab/TabPanel/TabPanel.js"],"names":["React","PropTypes","clsx","styled","useThemeProps","unstable_composeClasses","composeClasses","getTabPanelUtilityClass","getPanelId","getTabId","useTabContext","jsx","_jsx","useUtilityClasses","ownerState","classes","hidden","slots","root","TabPanelRoot","name","slot","overridesResolver","props","styles","theme","padding","spacing","TabPanel","forwardRef","inProps","ref","children","className","value","keepMounted","other","context","TypeError","id","tabId","role","process","env","NODE_ENV","propTypes","node","object","string","bool","sx","oneOfType","arrayOf","func","isRequired"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from \"./tabPanelClasses.js\";\nimport { getPanelId, getTabId, useTabContext } from \"../TabContext/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    hidden\n  } = ownerState;\n  const slots = {\n    root: ['root', hidden && 'hidden']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n    children,\n    className,\n    value,\n    keepMounted = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, {\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState,\n    ...other,\n    children: (keepMounted || value === context.value) && children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Always keep the children in the DOM.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;"]},"metadata":{},"sourceType":"module"}