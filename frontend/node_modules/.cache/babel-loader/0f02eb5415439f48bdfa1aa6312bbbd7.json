{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { isHorizontal } from \"../Drawer/Drawer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: theme.zIndex.drawer - 1,\n    variants: [{\n      props: {\n        anchor: 'left'\n      },\n      style: {\n        right: 'auto'\n      }\n    }, {\n      props: {\n        anchor: 'right'\n      },\n      style: {\n        left: 'auto',\n        right: 0\n      }\n    }, {\n      props: {\n        anchor: 'top'\n      },\n      style: {\n        bottom: 'auto',\n        right: 0\n      }\n    }, {\n      props: {\n        anchor: 'bottom'\n      },\n      style: {\n        top: 'auto',\n        bottom: 0,\n        right: 0\n      }\n    }]\n  };\n}));\n/**\n * @ignore - internal component.\n */\n\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/SwipeableDrawer/SwipeArea.js"],"names":["React","PropTypes","clsx","styled","memoTheme","rootShouldForwardProp","capitalize","isHorizontal","jsx","_jsx","SwipeAreaRoot","shouldForwardProp","theme","position","top","left","bottom","zIndex","drawer","variants","props","anchor","style","right","SwipeArea","forwardRef","ref","classes","className","width","other","ownerState","root","process","env","NODE_ENV","propTypes","oneOf","isRequired","object","string","number"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { isHorizontal } from \"../Drawer/Drawer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SwipeAreaRoot = styled('div', {\n  shouldForwardProp: rootShouldForwardProp\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'fixed',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  zIndex: theme.zIndex.drawer - 1,\n  variants: [{\n    props: {\n      anchor: 'left'\n    },\n    style: {\n      right: 'auto'\n    }\n  }, {\n    props: {\n      anchor: 'right'\n    },\n    style: {\n      left: 'auto',\n      right: 0\n    }\n  }, {\n    props: {\n      anchor: 'top'\n    },\n    style: {\n      bottom: 'auto',\n      right: 0\n    }\n  }, {\n    props: {\n      anchor: 'bottom'\n    },\n    style: {\n      top: 'auto',\n      bottom: 0,\n      right: 0\n    }\n  }]\n})));\n\n/**\n * @ignore - internal component.\n */\nconst SwipeArea = /*#__PURE__*/React.forwardRef(function SwipeArea(props, ref) {\n  const {\n    anchor,\n    classes = {},\n    className,\n    width,\n    style,\n    ...other\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(SwipeAreaRoot, {\n    className: clsx('PrivateSwipeArea-root', classes.root, classes[`anchor${capitalize(anchor)}`], className),\n    ref: ref,\n    style: {\n      [isHorizontal(anchor) ? 'width' : 'height']: width,\n      ...style\n    },\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeArea.propTypes = {\n  /**\n   * Side on which to attach the discovery area.\n   */\n  anchor: PropTypes.oneOf(['left', 'top', 'right', 'bottom']).isRequired,\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` where the\n   * drawer can be swiped open from.\n   */\n  width: PropTypes.number.isRequired\n} : void 0;\nexport default SwipeArea;"]},"metadata":{},"sourceType":"module"}