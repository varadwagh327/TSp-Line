{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { StyleSheet } from '@emotion/sheet'; // We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst createEmotionCache = options => {\n  const cache = createCache(options);\n  /**\n   * This is for client-side apps only.\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\n   */\n\n  class MyStyleSheet extends StyleSheet {\n    constructor(args) {\n      super(args);\n      this.prepend = cache.sheet.prepend;\n    }\n\n  } // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n\n\n  cache.sheet = new MyStyleSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n}; // prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\n\n\nlet cache;\n\nif (typeof document === 'object') {\n  cache = createEmotionCache({\n    key: 'css',\n    prepend: true\n  });\n}\n\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/styled-engine/StyledEngineProvider/StyledEngineProvider.js"],"names":["React","PropTypes","CacheProvider","createCache","StyleSheet","jsx","_jsx","createEmotionCache","options","cache","MyStyleSheet","constructor","args","prepend","sheet","key","nonce","container","speedy","isSpeedy","insertionPoint","document","StyledEngineProvider","props","injectFirst","children","value","process","env","NODE_ENV","propTypes","node","bool"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,gBAA3B,C,CAEA;AACA;;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,IAAI;AACpC,QAAMC,KAAK,GAAGN,WAAW,CAACK,OAAD,CAAzB;AAEA;AACF;AACA;AACA;AACA;;AACE,QAAME,YAAN,SAA2BN,UAA3B,CAAsC;AACpCO,IAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,YAAMA,IAAN;AACA,WAAKC,OAAL,GAAeJ,KAAK,CAACK,KAAN,CAAYD,OAA3B;AACD;;AAJmC,GARF,CAepC;;;AACAJ,EAAAA,KAAK,CAACK,KAAN,GAAc,IAAIJ,YAAJ,CAAiB;AAC7BK,IAAAA,GAAG,EAAEN,KAAK,CAACM,GADkB;AAE7BC,IAAAA,KAAK,EAAEP,KAAK,CAACK,KAAN,CAAYE,KAFU;AAG7BC,IAAAA,SAAS,EAAER,KAAK,CAACK,KAAN,CAAYG,SAHM;AAI7BC,IAAAA,MAAM,EAAET,KAAK,CAACK,KAAN,CAAYK,QAJS;AAK7BN,IAAAA,OAAO,EAAEJ,KAAK,CAACK,KAAN,CAAYD,OALQ;AAM7BO,IAAAA,cAAc,EAAEX,KAAK,CAACK,KAAN,CAAYM;AANC,GAAjB,CAAd;AAQA,SAAOX,KAAP;AACD,CAzBD,C,CA2BA;AACA;;;AACA,IAAIA,KAAJ;;AACA,IAAI,OAAOY,QAAP,KAAoB,QAAxB,EAAkC;AAChCZ,EAAAA,KAAK,GAAGF,kBAAkB,CAAC;AACzBQ,IAAAA,GAAG,EAAE,KADoB;AAEzBF,IAAAA,OAAO,EAAE;AAFgB,GAAD,CAA1B;AAID;;AACD,eAAe,SAASS,oBAAT,CAA8BC,KAA9B,EAAqC;AAClD,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAIA,SAAOC,WAAW,IAAIf,KAAf,GAAuB,aAAaH,IAAI,CAACJ,aAAD,EAAgB;AAC7DwB,IAAAA,KAAK,EAAEjB,KADsD;AAE7DgB,IAAAA,QAAQ,EAAEA;AAFmD,GAAhB,CAAxC,GAGFA,QAHL;AAID;AACDE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCP,oBAAoB,CAACQ,SAArB,GAAiC;AACvE;AACF;AACA;AACEL,EAAAA,QAAQ,EAAExB,SAAS,CAAC8B,IAJmD;;AAKvE;AACF;AACA;AACA;AACA;AACEP,EAAAA,WAAW,EAAEvB,SAAS,CAAC+B;AAVgD,CAAzE,GAWI,KAAK,CAXT","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { CacheProvider } from '@emotion/react';\nimport createCache from '@emotion/cache';\nimport { StyleSheet } from '@emotion/sheet';\n\n// We might be able to remove this when this issue is fixed:\n// https://github.com/emotion-js/emotion/issues/2790\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst createEmotionCache = options => {\n  const cache = createCache(options);\n\n  /**\n   * This is for client-side apps only.\n   * A custom sheet is required to make the GlobalStyles API work with `prepend: true`.\n   * This is because the [sheet](https://github.com/emotion-js/emotion/blob/main/packages/react/src/global.js#L94-L99) does not consume the options.\n   */\n  class MyStyleSheet extends StyleSheet {\n    constructor(args) {\n      super(args);\n      this.prepend = cache.sheet.prepend;\n    }\n  }\n\n  // Do the same as https://github.com/emotion-js/emotion/blob/main/packages/cache/src/index.js#L238-L245\n  cache.sheet = new MyStyleSheet({\n    key: cache.key,\n    nonce: cache.sheet.nonce,\n    container: cache.sheet.container,\n    speedy: cache.sheet.isSpeedy,\n    prepend: cache.sheet.prepend,\n    insertionPoint: cache.sheet.insertionPoint\n  });\n  return cache;\n};\n\n// prepend: true moves MUI styles to the top of the <head> so they're loaded first.\n// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.\nlet cache;\nif (typeof document === 'object') {\n  cache = createEmotionCache({\n    key: 'css',\n    prepend: true\n  });\n}\nexport default function StyledEngineProvider(props) {\n  const {\n    injectFirst,\n    children\n  } = props;\n  return injectFirst && cache ? /*#__PURE__*/_jsx(CacheProvider, {\n    value: cache,\n    children: children\n  }) : children;\n}\nprocess.env.NODE_ENV !== \"production\" ? StyledEngineProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override MUI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool\n} : void 0;"]},"metadata":{},"sourceType":"module"}