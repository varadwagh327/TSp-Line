{"ast":null,"code":"import React__default, { useMemo, forwardRef, useRef, useCallback, useEffect, createElement, cloneElement, useLayoutEffect, memo, useState, Component, isValidElement, useContext } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport { css } from 'goober';\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar noOp = function noOp() {\n  return '';\n};\n\nvar SnackbarContext = /*#__PURE__*/React__default.createContext({\n  enqueueSnackbar: noOp,\n  closeSnackbar: noOp\n});\nvar breakpoints = {\n  downXs: '@media (max-width:599.95px)',\n  upSm: '@media (min-width:600px)'\n};\n\nvar capitalise = function capitalise(text) {\n  return text.charAt(0).toUpperCase() + text.slice(1);\n};\n\nvar originKeyExtractor = function originKeyExtractor(anchor) {\n  return \"\" + capitalise(anchor.vertical) + capitalise(anchor.horizontal);\n};\n\nvar isDefined = function isDefined(value) {\n  return !!value || value === 0;\n};\n\nvar UNMOUNTED = 'unmounted';\nvar EXITED = 'exited';\nvar ENTERING = 'entering';\nvar ENTERED = 'entered';\nvar EXITING = 'exiting';\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var appear = props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props[\"in\"]) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else if (props.unmountOnExit || props.mountOnEnter) {\n      initialStatus = UNMOUNTED;\n    } else {\n      initialStatus = EXITED;\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref[\"in\"];\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  };\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props[\"in\"]) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else if (status === ENTERING || status === ENTERED) {\n        nextStatus = EXITING;\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var enter = timeout;\n    var exit = timeout;\n\n    if (timeout != null && typeof timeout !== 'number' && typeof timeout !== 'string') {\n      exit = timeout.exit;\n      enter = timeout.enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var isAppearing = mounting;\n    var timeouts = this.getTimeouts();\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        if (_this2.props.onEntered) {\n          _this2.props.onEntered(_this2.node, isAppearing);\n        }\n      });\n      return;\n    }\n\n    if (this.props.onEnter) {\n      this.props.onEnter(this.node, isAppearing);\n    }\n\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      if (_this2.props.onEntering) {\n        _this2.props.onEntering(_this2.node, isAppearing);\n      }\n\n      _this2.onTransitionEnd(timeouts.enter, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          if (_this2.props.onEntered) {\n            _this2.props.onEntered(_this2.node, isAppearing);\n          }\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        if (_this3.props.onExited) {\n          _this3.props.onExited(_this3.node);\n        }\n      });\n      return;\n    }\n\n    if (this.props.onExit) {\n      this.props.onExit(this.node);\n    }\n\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      if (_this3.props.onExiting) {\n        _this3.props.onExiting(_this3.node);\n      }\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          if (_this3.props.onExited) {\n            _this3.props.onExited(_this3.node);\n          }\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null && this.nextCallback.cancel) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function () {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback();\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!this.node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(this.node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return children(status, childProps);\n  };\n\n  _createClass(Transition, [{\n    key: \"node\",\n    get: function get() {\n      var _this$props$nodeRef;\n\n      var node = (_this$props$nodeRef = this.props.nodeRef) === null || _this$props$nodeRef === void 0 ? void 0 : _this$props$nodeRef.current;\n\n      if (!node) {\n        throw new Error('notistack - Custom snackbar is not refForwarding');\n      }\n\n      return node;\n    }\n  }]);\n\n  return Transition;\n}(React__default.Component);\n\nfunction noop() {//\n}\n\nTransition.defaultProps = {\n  \"in\": false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\n/**\r\n * Credit to MUI team @ https://mui.com\r\n */\n\n/**\r\n * passes {value} to {ref}\r\n *\r\n * Useful if you want to expose the ref of an inner component to the public API\r\n * while still using it inside the component.\r\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\r\n */\n\nfunction setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nfunction useForkRef(refA, refB) {\n  /**\r\n   * This will create a new function if the ref props change and are defined.\r\n   * This means react will call the old forkRef with `null` and the new forkRef\r\n   * with the ref. Cleanup naturally emerges from this behavior.\r\n   */\n  return useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}\n\nfunction getTransitionProps(props) {\n  var timeout = props.timeout,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      mode = props.mode;\n  return {\n    duration: typeof timeout === 'object' ? timeout[mode] || 0 : timeout,\n    easing: style.transitionTimingFunction,\n    delay: style.transitionDelay\n  };\n}\n/**\r\n * Credit to MUI team @ https://mui.com\r\n */\n\n\nvar defaultEasing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n};\n/**\r\n * CSS hack to force a repaint\r\n */\n\nvar reflow = function reflow(node) {\n  // We have to do something with node.scrollTop.\n  // Otherwise it's removed from the compiled code by optimisers\n  // eslint-disable-next-line no-self-assign\n  node.scrollTop = node.scrollTop;\n};\n\nvar formatMs = function formatMs(milliseconds) {\n  return Math.round(milliseconds) + \"ms\";\n};\n\nfunction createTransition(props, options) {\n  if (props === void 0) {\n    props = ['all'];\n  }\n\n  var _ref = options || {},\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 300 : _ref$duration,\n      _ref$easing = _ref.easing,\n      easing = _ref$easing === void 0 ? defaultEasing.easeInOut : _ref$easing,\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? 0 : _ref$delay;\n\n  var properties = Array.isArray(props) ? props : [props];\n  return properties.map(function (animatedProp) {\n    var formattedDuration = typeof duration === 'string' ? duration : formatMs(duration);\n    var formattedDelay = typeof delay === 'string' ? delay : formatMs(delay);\n    return animatedProp + \" \" + formattedDuration + \" \" + easing + \" \" + formattedDelay;\n  }).join(',');\n}\n\nfunction ownerDocument(node) {\n  return node && node.ownerDocument || document;\n}\n\nfunction ownerWindow(node) {\n  var doc = ownerDocument(node);\n  return doc.defaultView || window;\n}\n/**\r\n * Corresponds to 10 frames at 60 Hz.\r\n * A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\r\n */\n\n\nfunction debounce(func, wait) {\n  if (wait === void 0) {\n    wait = 166;\n  }\n\n  var timeout;\n\n  function debounced() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var later = function later() {\n      // @ts-ignore\n      func.apply(_this, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  }\n\n  debounced.clear = function () {\n    clearTimeout(timeout);\n  };\n\n  return debounced;\n}\n/**\r\n * Translate the node so it can't be seen on the screen.\r\n * Later, we're going to translate the node back to its original location with `none`.\r\n */\n\n\nfunction getTranslateValue(direction, node) {\n  var rect = node.getBoundingClientRect();\n  var containerWindow = ownerWindow(node);\n  var transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    var computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    var transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  switch (direction) {\n    case 'left':\n      return \"translateX(\" + (containerWindow.innerWidth + offsetX - rect.left) + \"px)\";\n\n    case 'right':\n      return \"translateX(-\" + (rect.left + rect.width - offsetX) + \"px)\";\n\n    case 'up':\n      return \"translateY(\" + (containerWindow.innerHeight + offsetY - rect.top) + \"px)\";\n\n    default:\n      // down\n      return \"translateY(-\" + (rect.top + rect.height - offsetY) + \"px)\";\n  }\n}\n\nfunction setTranslateValue(direction, node) {\n  if (!node) return;\n  var transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\n\nvar Slide = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'down' : _props$direction,\n      inProp = props[\"in\"],\n      style = props.style,\n      _props$timeout = props.timeout,\n      timeout = _props$timeout === void 0 ? 0 : _props$timeout,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"direction\", \"in\", \"style\", \"timeout\", \"onEnter\", \"onEntered\", \"onExit\", \"onExited\"]);\n\n  var nodeRef = useRef(null);\n  var handleRefIntermediary = useForkRef(children.ref, nodeRef);\n  var handleRef = useForkRef(handleRefIntermediary, ref);\n\n  var handleEnter = function handleEnter(node, isAppearing) {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  var handleEntering = function handleEntering(node) {\n    var easing = (style === null || style === void 0 ? void 0 : style.transitionTimingFunction) || defaultEasing.easeOut;\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      mode: 'enter',\n      style: _extends({}, style, {\n        transitionTimingFunction: easing\n      })\n    });\n    node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n    node.style.transition = createTransition('transform', transitionProps);\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n  };\n\n  var handleExit = function handleExit(node) {\n    var easing = (style === null || style === void 0 ? void 0 : style.transitionTimingFunction) || defaultEasing.sharp;\n    var transitionProps = getTransitionProps({\n      timeout: timeout,\n      mode: 'exit',\n      style: _extends({}, style, {\n        transitionTimingFunction: easing\n      })\n    });\n    node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n    node.style.transition = createTransition('transform', transitionProps);\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  };\n\n  var handleExited = function handleExited(node) {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  var updatePosition = useCallback(function () {\n    if (nodeRef.current) {\n      setTranslateValue(direction, nodeRef.current);\n    }\n  }, [direction]);\n  useEffect(function () {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    var handleResize = debounce(function () {\n      if (nodeRef.current) {\n        setTranslateValue(direction, nodeRef.current);\n      }\n    });\n    var containerWindow = ownerWindow(nodeRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  useEffect(function () {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return createElement(Transition, Object.assign({\n    appear: true,\n    nodeRef: nodeRef,\n    onEnter: handleEnter,\n    onEntered: onEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    \"in\": inProp,\n    timeout: timeout\n  }, other), function (state, childProps) {\n    return cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, {}, children.props.style)\n    }, childProps));\n  });\n});\nSlide.displayName = 'Slide';\n\nvar SvgIcon = function SvgIcon(props) {\n  return React__default.createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 24 24\",\n    focusable: \"false\",\n    style: {\n      fontSize: 20,\n      marginInlineEnd: 8,\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0\n    }\n  }, props));\n};\n\nvar CheckIcon = function CheckIcon() {\n  return React__default.createElement(SvgIcon, null, React__default.createElement(\"path\", {\n    d: \"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\"\n  }));\n};\n\nvar WarningIcon = function WarningIcon() {\n  return React__default.createElement(SvgIcon, null, React__default.createElement(\"path\", {\n    d: \"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\"\n  }));\n};\n\nvar ErrorIcon = function ErrorIcon() {\n  return React__default.createElement(SvgIcon, null, React__default.createElement(\"path\", {\n    d: \"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"\n  }));\n};\n\nvar InfoIcon = function InfoIcon() {\n  return React__default.createElement(SvgIcon, null, React__default.createElement(\"path\", {\n    d: \"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\\n        0 22,12A10,10 0 0,0 12,2Z\"\n  }));\n};\n\nvar defaultIconVariants = {\n  \"default\": undefined,\n  success: /*#__PURE__*/React__default.createElement(CheckIcon, null),\n  warning: /*#__PURE__*/React__default.createElement(WarningIcon, null),\n  error: /*#__PURE__*/React__default.createElement(ErrorIcon, null),\n  info: /*#__PURE__*/React__default.createElement(InfoIcon, null)\n};\nvar defaults = {\n  maxSnack: 3,\n  persist: false,\n  hideIconVariant: false,\n  disableWindowBlurListener: false,\n  variant: 'default',\n  autoHideDuration: 5000,\n  iconVariant: defaultIconVariants,\n  anchorOrigin: {\n    vertical: 'bottom',\n    horizontal: 'left'\n  },\n  TransitionComponent: Slide,\n  transitionDuration: {\n    enter: 225,\n    exit: 195\n  }\n};\n/**\r\n * Derives the right autoHideDuration taking into account the following\r\n * prority order: 1: Options, 2: Props, 3: default fallback\r\n */\n\nvar getAutoHideDuration = function getAutoHideDuration(optionsDuration, propsDuration) {\n  var isNumberOrNull = function isNumberOrNull(numberish) {\n    return typeof numberish === 'number' || numberish === null;\n  };\n\n  if (isNumberOrNull(optionsDuration)) return optionsDuration;\n  if (isNumberOrNull(propsDuration)) return propsDuration;\n  return defaults.autoHideDuration;\n};\n/**\r\n * Derives the right transitionDuration taking into account the following\r\n * prority order: 1: Options, 2: Props, 3: default fallback\r\n */\n\n\nvar getTransitionDuration = function getTransitionDuration(optionsDuration, propsDuration) {\n  var is = function is(item, types) {\n    return types.some(function (t) {\n      return typeof item === t;\n    });\n  };\n\n  if (is(optionsDuration, ['string', 'number'])) {\n    return optionsDuration;\n  }\n\n  if (is(optionsDuration, ['object'])) {\n    return _extends({}, defaults.transitionDuration, {}, is(propsDuration, ['object']) && propsDuration, {}, optionsDuration);\n  }\n\n  if (is(propsDuration, ['string', 'number'])) {\n    return propsDuration;\n  }\n\n  if (is(propsDuration, ['object'])) {\n    return _extends({}, defaults.transitionDuration, {}, propsDuration);\n  }\n\n  return defaults.transitionDuration;\n};\n\nvar merge = function merge(options, props) {\n  return function (name, shouldObjectMerge) {\n    if (shouldObjectMerge === void 0) {\n      shouldObjectMerge = false;\n    }\n\n    if (shouldObjectMerge) {\n      return _extends({}, defaults[name], {}, props[name], {}, options[name]);\n    }\n\n    if (name === 'autoHideDuration') {\n      return getAutoHideDuration(options.autoHideDuration, props.autoHideDuration);\n    }\n\n    if (name === 'transitionDuration') {\n      return getTransitionDuration(options.transitionDuration, props.transitionDuration);\n    }\n\n    return options[name] || props[name] || defaults[name];\n  };\n};\n\nfunction makeStyles(styles) {\n  return Object.entries(styles).reduce(function (acc, _ref) {\n    var _extends2;\n\n    var key = _ref[0],\n        value = _ref[1];\n    return _extends({}, acc, (_extends2 = {}, _extends2[key] = css(value), _extends2));\n  }, {});\n}\n\nvar ComponentClasses = {\n  SnackbarContainer: 'notistack-SnackbarContainer',\n  Snackbar: 'notistack-Snackbar',\n  CollapseWrapper: 'notistack-CollapseWrapper',\n  MuiContent: 'notistack-MuiContent',\n  MuiContentVariant: function MuiContentVariant(variant) {\n    return \"notistack-MuiContent-\" + variant;\n  }\n};\nvar classes = /*#__PURE__*/makeStyles({\n  root: {\n    height: 0\n  },\n  entered: {\n    height: 'auto'\n  }\n});\nvar collapsedSize = '0px';\nvar timeout = 175;\nvar Collapse = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      inProp = props[\"in\"],\n      onExited = props.onExited;\n  var wrapperRef = useRef(null);\n  var nodeRef = useRef(null);\n  var handleRef = useForkRef(ref, nodeRef);\n\n  var getWrapperSize = function getWrapperSize() {\n    return wrapperRef.current ? wrapperRef.current.clientHeight : 0;\n  };\n\n  var handleEnter = function handleEnter(node) {\n    node.style.height = collapsedSize;\n  };\n\n  var handleEntering = function handleEntering(node) {\n    var wrapperSize = getWrapperSize();\n\n    var _getTransitionProps = getTransitionProps({\n      timeout: timeout,\n      mode: 'enter'\n    }),\n        transitionDuration = _getTransitionProps.duration,\n        easing = _getTransitionProps.easing;\n\n    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : transitionDuration + \"ms\";\n    node.style.height = wrapperSize + \"px\";\n    node.style.transitionTimingFunction = easing || '';\n  };\n\n  var handleEntered = function handleEntered(node) {\n    node.style.height = 'auto';\n  };\n\n  var handleExit = function handleExit(node) {\n    node.style.height = getWrapperSize() + \"px\";\n  };\n\n  var handleExiting = function handleExiting(node) {\n    reflow(node);\n\n    var _getTransitionProps2 = getTransitionProps({\n      timeout: timeout,\n      mode: 'exit'\n    }),\n        transitionDuration = _getTransitionProps2.duration,\n        easing = _getTransitionProps2.easing;\n\n    node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : transitionDuration + \"ms\";\n    node.style.height = collapsedSize;\n    node.style.transitionTimingFunction = easing || '';\n  };\n\n  return createElement(Transition, {\n    \"in\": inProp,\n    unmountOnExit: true,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: onExited,\n    onExiting: handleExiting,\n    nodeRef: nodeRef,\n    timeout: timeout\n  }, function (state, childProps) {\n    return createElement(\"div\", Object.assign({\n      ref: handleRef,\n      className: clsx(classes.root, state === 'entered' && classes.entered),\n      style: _extends({\n        pointerEvents: 'all',\n        overflow: 'hidden',\n        minHeight: collapsedSize,\n        transition: createTransition('height')\n      }, state === 'entered' && {\n        overflow: 'visible'\n      }, {}, state === 'exited' && !inProp && {\n        visibility: 'hidden'\n      })\n    }, childProps), createElement(\"div\", {\n      ref: wrapperRef,\n      className: ComponentClasses.CollapseWrapper,\n      // Hack to get children with a negative margin to not falsify the height computation.\n      style: {\n        display: 'flex',\n        width: '100%'\n      }\n    }, children));\n  });\n});\nCollapse.displayName = 'Collapse';\nvar direction = {\n  right: 'left',\n  left: 'right',\n  bottom: 'up',\n  top: 'down'\n};\n\nvar getSlideDirection = function getSlideDirection(anchorOrigin) {\n  if (anchorOrigin.horizontal !== 'center') {\n    return direction[anchorOrigin.horizontal];\n  }\n\n  return direction[anchorOrigin.vertical];\n};\n/** Tranforms classes name */\n\n\nvar toSnackbarAnchorOrigin = function toSnackbarAnchorOrigin(anchorOrigin) {\n  return \"anchorOrigin\" + originKeyExtractor(anchorOrigin);\n};\n/**\r\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\r\n */\n\n\nvar keepSnackbarClassKeys = function keepSnackbarClassKeys(classes) {\n  if (classes === void 0) {\n    classes = {};\n  }\n\n  var containerClasses = {\n    containerRoot: true,\n    containerAnchorOriginTopCenter: true,\n    containerAnchorOriginBottomCenter: true,\n    containerAnchorOriginTopRight: true,\n    containerAnchorOriginBottomRight: true,\n    containerAnchorOriginTopLeft: true,\n    containerAnchorOriginBottomLeft: true\n  };\n  return Object.keys(classes).filter(function (key) {\n    return !containerClasses[key];\n  }).reduce(function (obj, key) {\n    var _extends2;\n\n    return _extends({}, obj, (_extends2 = {}, _extends2[key] = classes[key], _extends2));\n  }, {});\n};\n\nvar noOp$1 = function noOp() {\n  /* */\n};\n/**\r\n * Credit to MUI team @ https://mui.com\r\n * Safe chained function.\r\n *\r\n * Will only create a new function if needed,\r\n * otherwise will pass back existing functions or null.\r\n */\n\n\nfunction createChainedFunction(funcs, snackbarId) {\n  // @ts-ignore\n  return funcs.reduce(function (acc, func) {\n    if (func === null || func === undefined) {\n      return acc;\n    }\n\n    return function chainedFunction() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var argums = [].concat(args);\n\n      if (snackbarId && argums.indexOf(snackbarId) === -1) {\n        argums.push(snackbarId);\n      } // @ts-ignore\n\n\n      acc.apply(this, argums);\n      func.apply(this, argums);\n    };\n  }, noOp$1);\n}\n/**\r\n * Credit to MUI team @ https://mui.com\r\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\r\n */\n\n\nvar useEnhancedEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = useRef(fn);\n  useEnhancedEffect(function () {\n    ref.current = fn;\n  });\n  return useCallback(function () {\n    return (// @ts-expect-error hide `this`\n      ref.current.apply(void 0, arguments)\n    );\n  }, []);\n}\n/**\r\n * Credit to MUI team @ https://mui.com\r\n */\n\n\nvar Snackbar = /*#__PURE__*/forwardRef(function (props, ref) {\n  var children = props.children,\n      className = props.className,\n      autoHideDuration = props.autoHideDuration,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      onClose = props.onClose,\n      id = props.id,\n      open = props.open,\n      _props$SnackbarProps = props.SnackbarProps,\n      SnackbarProps = _props$SnackbarProps === void 0 ? {} : _props$SnackbarProps;\n  var timerAutoHide = useRef();\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    if (timerAutoHide.current) {\n      clearTimeout(timerAutoHide.current);\n    }\n\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout', id);\n    }, autoHideDurationParam);\n  });\n  useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      if (timerAutoHide.current) {\n        clearTimeout(timerAutoHide.current);\n      }\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]);\n  /**\r\n   * Pause the timer when the user is interacting with the Snackbar\r\n   * or when the user hide the window.\r\n   */\n\n  var handlePause = function handlePause() {\n    if (timerAutoHide.current) {\n      clearTimeout(timerAutoHide.current);\n    }\n  };\n  /**\r\n   * Restart the timer when the user is no longer interacting with the Snackbar\r\n   * or when the window is shown back.\r\n   */\n\n\n  var handleResume = useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (SnackbarProps.onMouseEnter) {\n      SnackbarProps.onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (SnackbarProps.onMouseLeave) {\n      SnackbarProps.onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]);\n  return createElement(\"div\", Object.assign({\n    ref: ref\n  }, SnackbarProps, {\n    className: clsx(ComponentClasses.Snackbar, className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave\n  }), children);\n});\nSnackbar.displayName = 'Snackbar';\n\nvar _root;\n\nvar classes$1 = /*#__PURE__*/makeStyles({\n  root: (_root = {\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexGrow: 1\n  }, _root[breakpoints.upSm] = {\n    flexGrow: 'initial',\n    minWidth: '288px'\n  }, _root)\n});\nvar SnackbarContent = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\"]);\n\n  return React__default.createElement(\"div\", Object.assign({\n    ref: ref,\n    className: clsx(classes$1.root, className)\n  }, props));\n});\nSnackbarContent.displayName = 'SnackbarContent';\nvar classes$2 = /*#__PURE__*/makeStyles({\n  root: {\n    backgroundColor: '#313131',\n    fontSize: '0.875rem',\n    lineHeight: 1.43,\n    letterSpacing: '0.01071em',\n    color: '#fff',\n    alignItems: 'center',\n    padding: '6px 16px',\n    borderRadius: '4px',\n    boxShadow: '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)'\n  },\n  lessPadding: {\n    paddingLeft: 8 * 2.5 + \"px\"\n  },\n  \"default\": {\n    backgroundColor: '#313131'\n  },\n  success: {\n    backgroundColor: '#43a047'\n  },\n  error: {\n    backgroundColor: '#d32f2f'\n  },\n  warning: {\n    backgroundColor: '#ff9800'\n  },\n  info: {\n    backgroundColor: '#2196f3'\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '8px 0'\n  },\n  action: {\n    display: 'flex',\n    alignItems: 'center',\n    marginLeft: 'auto',\n    paddingLeft: '16px',\n    marginRight: '-8px'\n  }\n});\nvar ariaDescribedby = 'notistack-snackbar';\nvar MaterialDesignContent = /*#__PURE__*/forwardRef(function (props, forwardedRef) {\n  var id = props.id,\n      message = props.message,\n      componentOrFunctionAction = props.action,\n      iconVariant = props.iconVariant,\n      variant = props.variant,\n      hideIconVariant = props.hideIconVariant,\n      style = props.style,\n      className = props.className;\n  var icon = iconVariant[variant];\n  var action = componentOrFunctionAction;\n\n  if (typeof action === 'function') {\n    action = action(id);\n  }\n\n  return React__default.createElement(SnackbarContent, {\n    ref: forwardedRef,\n    role: \"alert\",\n    \"aria-describedby\": ariaDescribedby,\n    style: style,\n    className: clsx(ComponentClasses.MuiContent, ComponentClasses.MuiContentVariant(variant), classes$2.root, classes$2[variant], className, !hideIconVariant && icon && classes$2.lessPadding)\n  }, React__default.createElement(\"div\", {\n    id: ariaDescribedby,\n    className: classes$2.message\n  }, !hideIconVariant ? icon : null, message), action && React__default.createElement(\"div\", {\n    className: classes$2.action\n  }, action));\n});\nMaterialDesignContent.displayName = 'MaterialDesignContent';\nvar MaterialDesignContent$1 = /*#__PURE__*/memo(MaterialDesignContent);\nvar styles = /*#__PURE__*/makeStyles({\n  wrappedRoot: {\n    width: '100%',\n    position: 'relative',\n    transform: 'translateX(0)',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    minWidth: '288px'\n  }\n});\n\nvar SnackbarItem = function SnackbarItem(props) {\n  var timeout = useRef();\n\n  var _useState = useState(true),\n      collapsed = _useState[0],\n      setCollapsed = _useState[1];\n\n  var handleClose = createChainedFunction([props.snack.onClose, props.onClose]);\n\n  var handleEntered = function handleEntered() {\n    if (props.snack.requestClose) {\n      handleClose(null, 'instructed', props.snack.id);\n    }\n  };\n\n  var handleExitedScreen = useCallback(function () {\n    timeout.current = setTimeout(function () {\n      setCollapsed(function (col) {\n        return !col;\n      });\n    }, 125);\n  }, []);\n  useEffect(function () {\n    return function () {\n      if (timeout.current) {\n        clearTimeout(timeout.current);\n      }\n    };\n  }, []);\n  var snack = props.snack,\n      allClasses = props.classes,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? MaterialDesignContent$1 : _props$Component;\n  var classes = useMemo(function () {\n    return keepSnackbarClassKeys(allClasses);\n  }, [allClasses]);\n\n  var open = snack.open,\n      SnackbarProps = snack.SnackbarProps,\n      TransitionComponent = snack.TransitionComponent,\n      TransitionProps = snack.TransitionProps,\n      transitionDuration = snack.transitionDuration,\n      disableWindowBlurListener = snack.disableWindowBlurListener,\n      componentOrFunctionContent = snack.content,\n      otherSnack = _objectWithoutPropertiesLoose(snack, [\"open\", \"SnackbarProps\", \"TransitionComponent\", \"TransitionProps\", \"transitionDuration\", \"disableWindowBlurListener\", \"content\", \"entered\", \"requestClose\", \"onEnter\", \"onEntered\", \"onExit\", \"onExited\"]);\n\n  var transitionProps = _extends({\n    direction: getSlideDirection(otherSnack.anchorOrigin),\n    timeout: transitionDuration\n  }, TransitionProps);\n\n  var content = componentOrFunctionContent;\n\n  if (typeof content === 'function') {\n    content = content(otherSnack.id, otherSnack.message);\n  }\n\n  var callbacks = ['onEnter', 'onEntered', 'onExit', 'onExited'].reduce(function (acc, cbName) {\n    var _extends2;\n\n    return _extends({}, acc, (_extends2 = {}, _extends2[cbName] = createChainedFunction([props.snack[cbName], props[cbName]], otherSnack.id), _extends2));\n  }, {});\n  return React__default.createElement(Collapse, {\n    \"in\": collapsed,\n    onExited: callbacks.onExited\n  }, React__default.createElement(Snackbar, {\n    open: open,\n    id: otherSnack.id,\n    disableWindowBlurListener: disableWindowBlurListener,\n    autoHideDuration: otherSnack.autoHideDuration,\n    className: clsx(styles.wrappedRoot, classes.root, classes[toSnackbarAnchorOrigin(otherSnack.anchorOrigin)]),\n    SnackbarProps: SnackbarProps,\n    onClose: handleClose\n  }, React__default.createElement(TransitionComponent, Object.assign({}, transitionProps, {\n    appear: true,\n    \"in\": open,\n    onExit: callbacks.onExit,\n    onExited: handleExitedScreen,\n    onEnter: callbacks.onEnter,\n    // order matters. first callbacks.onEntered to set entered: true,\n    // then handleEntered to check if there's a request for closing\n    onEntered: createChainedFunction([callbacks.onEntered, handleEntered], otherSnack.id)\n  }), content || React__default.createElement(Component, Object.assign({}, otherSnack)))));\n};\n\nvar _root$1, _rootDense, _left, _right, _center;\n\nvar indents = {\n  view: {\n    \"default\": 20,\n    dense: 4\n  },\n  snackbar: {\n    \"default\": 6,\n    dense: 2\n  }\n};\nvar collapseWrapper = \".\" + ComponentClasses.CollapseWrapper;\nvar xsWidthMargin = 16;\nvar styles$1 = /*#__PURE__*/makeStyles({\n  root: (_root$1 = {\n    boxSizing: 'border-box',\n    display: 'flex',\n    maxHeight: '100%',\n    position: 'fixed',\n    zIndex: 1400,\n    height: 'auto',\n    width: 'auto',\n    transition: /*#__PURE__*/createTransition(['top', 'right', 'bottom', 'left', 'max-width'], {\n      duration: 300,\n      easing: 'ease'\n    }),\n    // container itself is invisible and should not block clicks, clicks should be passed to its children\n    // a pointerEvents: all is applied in the collapse component\n    pointerEvents: 'none'\n  }, _root$1[collapseWrapper] = {\n    padding: indents.snackbar[\"default\"] + \"px 0px\",\n    transition: 'padding 300ms ease 0ms'\n  }, _root$1.maxWidth = \"calc(100% - \" + indents.view[\"default\"] * 2 + \"px)\", _root$1[breakpoints.downXs] = {\n    width: '100%',\n    maxWidth: \"calc(100% - \" + xsWidthMargin * 2 + \"px)\"\n  }, _root$1),\n  rootDense: (_rootDense = {}, _rootDense[collapseWrapper] = {\n    padding: indents.snackbar.dense + \"px 0px\"\n  }, _rootDense),\n  top: {\n    top: indents.view[\"default\"] - indents.snackbar[\"default\"] + \"px\",\n    flexDirection: 'column'\n  },\n  bottom: {\n    bottom: indents.view[\"default\"] - indents.snackbar[\"default\"] + \"px\",\n    flexDirection: 'column-reverse'\n  },\n  left: (_left = {\n    left: indents.view[\"default\"] + \"px\"\n  }, _left[breakpoints.upSm] = {\n    alignItems: 'flex-start'\n  }, _left[breakpoints.downXs] = {\n    left: xsWidthMargin + \"px\"\n  }, _left),\n  right: (_right = {\n    right: indents.view[\"default\"] + \"px\"\n  }, _right[breakpoints.upSm] = {\n    alignItems: 'flex-end'\n  }, _right[breakpoints.downXs] = {\n    right: xsWidthMargin + \"px\"\n  }, _right),\n  center: (_center = {\n    left: '50%',\n    transform: 'translateX(-50%)'\n  }, _center[breakpoints.upSm] = {\n    alignItems: 'center'\n  }, _center)\n});\n\nvar SnackbarContainer = function SnackbarContainer(props) {\n  var _props$classes = props.classes,\n      classes = _props$classes === void 0 ? {} : _props$classes,\n      anchorOrigin = props.anchorOrigin,\n      dense = props.dense,\n      children = props.children;\n  var combinedClassname = clsx(ComponentClasses.SnackbarContainer, styles$1[anchorOrigin.vertical], styles$1[anchorOrigin.horizontal], styles$1.root, // root should come after others to override maxWidth\n  classes.containerRoot, classes[\"containerAnchorOrigin\" + originKeyExtractor(anchorOrigin)], dense && styles$1.rootDense);\n  return React__default.createElement(\"div\", {\n    className: combinedClassname\n  }, children);\n};\n\nvar SnackbarContainer$1 = /*#__PURE__*/memo(SnackbarContainer);\n/* eslint-disable */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar messages = {\n  NO_PERSIST_ALL: \"Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.\"\n};\n\nvar warning = function (messageKey) {\n  if (!__DEV__) return;\n  var message = messages[messageKey];\n\n  if (typeof console !== 'undefined') {\n    console.error(\"WARNING - notistack: \" + message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n};\n\nvar isOptions = function isOptions(messageOrOptions) {\n  var isMessage = typeof messageOrOptions === 'string' || isValidElement(messageOrOptions);\n  return !isMessage;\n};\n\nvar enqueueSnackbar;\nvar closeSnackbar;\n\nvar SnackbarProvider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(SnackbarProvider, _Component);\n\n  function SnackbarProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    /**\r\n     * Adds a new snackbar to the queue to be presented.\r\n     * Returns generated or user defined key referencing the new snackbar or null\r\n     */\n\n    _this.enqueueSnackbar = function (messageOrOptions, optsOrUndefined) {\n      if (optsOrUndefined === void 0) {\n        optsOrUndefined = {};\n      }\n\n      if (messageOrOptions === undefined || messageOrOptions === null) {\n        throw new Error('enqueueSnackbar called with invalid argument');\n      }\n\n      var opts = isOptions(messageOrOptions) ? messageOrOptions : optsOrUndefined;\n      var message = isOptions(messageOrOptions) ? messageOrOptions.message : messageOrOptions;\n\n      var key = opts.key,\n          preventDuplicate = opts.preventDuplicate,\n          options = _objectWithoutPropertiesLoose(opts, [\"key\", \"preventDuplicate\"]);\n\n      var hasSpecifiedKey = isDefined(key);\n      var id = hasSpecifiedKey ? key : new Date().getTime() + Math.random();\n      var merger = merge(options, _this.props);\n\n      var snack = _extends({\n        id: id\n      }, options, {\n        message: message,\n        open: true,\n        entered: false,\n        requestClose: false,\n        persist: merger('persist'),\n        action: merger('action'),\n        content: merger('content'),\n        variant: merger('variant'),\n        anchorOrigin: merger('anchorOrigin'),\n        disableWindowBlurListener: merger('disableWindowBlurListener'),\n        autoHideDuration: merger('autoHideDuration'),\n        hideIconVariant: merger('hideIconVariant'),\n        TransitionComponent: merger('TransitionComponent'),\n        transitionDuration: merger('transitionDuration'),\n        TransitionProps: merger('TransitionProps', true),\n        iconVariant: merger('iconVariant', true),\n        style: merger('style', true),\n        SnackbarProps: merger('SnackbarProps', true),\n        className: clsx(_this.props.className, options.className)\n      });\n\n      if (snack.persist) {\n        snack.autoHideDuration = undefined;\n      }\n\n      _this.setState(function (state) {\n        if (preventDuplicate === undefined && _this.props.preventDuplicate || preventDuplicate) {\n          var compareFunction = function compareFunction(item) {\n            return hasSpecifiedKey ? item.id === id : item.message === message;\n          };\n\n          var inQueue = state.queue.findIndex(compareFunction) > -1;\n          var inView = state.snacks.findIndex(compareFunction) > -1;\n\n          if (inQueue || inView) {\n            return state;\n          }\n        }\n\n        return _this.handleDisplaySnack(_extends({}, state, {\n          queue: [].concat(state.queue, [snack])\n        }));\n      });\n\n      return id;\n    };\n    /**\r\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\r\n     * begin dismissing the oldest message to start showing the new one.\r\n     */\n\n\n    _this.handleDisplaySnack = function (state) {\n      var snacks = state.snacks;\n\n      if (snacks.length >= _this.maxSnack) {\n        return _this.handleDismissOldest(state);\n      }\n\n      return _this.processQueue(state);\n    };\n    /**\r\n     * Reducer: Display items (notifications) in the queue if there's space for them.\r\n     */\n\n\n    _this.processQueue = function (state) {\n      var queue = state.queue,\n          snacks = state.snacks;\n\n      if (queue.length > 0) {\n        return _extends({}, state, {\n          snacks: [].concat(snacks, [queue[0]]),\n          queue: queue.slice(1, queue.length)\n        });\n      }\n\n      return state;\n    };\n    /**\r\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\r\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\r\n     *\r\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\r\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\r\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\r\n     */\n\n\n    _this.handleDismissOldest = function (state) {\n      if (state.snacks.some(function (item) {\n        return !item.open || item.requestClose;\n      })) {\n        return state;\n      }\n\n      var popped = false;\n      var ignore = false;\n      var persistentCount = state.snacks.reduce(function (acc, current) {\n        return acc + (current.open && current.persist ? 1 : 0);\n      }, 0);\n\n      if (persistentCount === _this.maxSnack) {\n        process.env.NODE_ENV !== \"production\" ? warning('NO_PERSIST_ALL') : void 0;\n        ignore = true;\n      }\n\n      var snacks = state.snacks.map(function (item) {\n        if (!popped && (!item.persist || ignore)) {\n          popped = true;\n\n          if (!item.entered) {\n            return _extends({}, item, {\n              requestClose: true\n            });\n          }\n\n          if (item.onClose) {\n            item.onClose(null, 'maxsnack', item.id);\n          }\n\n          if (_this.props.onClose) {\n            _this.props.onClose(null, 'maxsnack', item.id);\n          }\n\n          return _extends({}, item, {\n            open: false\n          });\n        }\n\n        return _extends({}, item);\n      });\n      return _extends({}, state, {\n        snacks: snacks\n      });\n    };\n    /**\r\n     * Set the entered state of the snackbar with the given key.\r\n     */\n\n\n    _this.handleEnteredSnack = function (node, isAppearing, key) {\n      if (!isDefined(key)) {\n        throw new Error('handleEnteredSnack Cannot be called with undefined key');\n      }\n\n      _this.setState(function (_ref) {\n        var snacks = _ref.snacks;\n        return {\n          snacks: snacks.map(function (item) {\n            return item.id === key ? _extends({}, item, {\n              entered: true\n            }) : _extends({}, item);\n          })\n        };\n      });\n    };\n    /**\r\n     * Hide a snackbar after its timeout.\r\n     */\n\n\n    _this.handleCloseSnack = function (event, reason, key) {\n      // should not use createChainedFunction for onClose.\n      // because this.closeSnackbar called this function\n      if (_this.props.onClose) {\n        _this.props.onClose(event, reason, key);\n      }\n\n      var shouldCloseAll = key === undefined;\n\n      _this.setState(function (_ref2) {\n        var snacks = _ref2.snacks,\n            queue = _ref2.queue;\n        return {\n          snacks: snacks.map(function (item) {\n            if (!shouldCloseAll && item.id !== key) {\n              return _extends({}, item);\n            }\n\n            return item.entered ? _extends({}, item, {\n              open: false\n            }) : _extends({}, item, {\n              requestClose: true\n            });\n          }),\n          queue: queue.filter(function (item) {\n            return item.id !== key;\n          })\n        };\n      });\n    };\n    /**\r\n     * Close snackbar with the given key\r\n     */\n\n\n    _this.closeSnackbar = function (key) {\n      // call individual snackbar onClose callback passed through options parameter\n      var toBeClosed = _this.state.snacks.find(function (item) {\n        return item.id === key;\n      });\n\n      if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n        toBeClosed.onClose(null, 'instructed', key);\n      }\n\n      _this.handleCloseSnack(null, 'instructed', key);\n    };\n    /**\r\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\r\n     * it leaves the screen and immediately after leaving animation is done, this method\r\n     * gets called. We remove the hidden snackbar from state and then display notifications\r\n     * waiting in the queue (if any). If after this process the queue is not empty, the\r\n     * oldest message is dismissed.\r\n     */\n\n\n    _this.handleExitedSnack = function (node, key) {\n      if (!isDefined(key)) {\n        throw new Error('handleExitedSnack Cannot be called with undefined key');\n      }\n\n      _this.setState(function (state) {\n        var newState = _this.processQueue(_extends({}, state, {\n          snacks: state.snacks.filter(function (item) {\n            return item.id !== key;\n          })\n        }));\n\n        if (newState.queue.length === 0) {\n          return newState;\n        }\n\n        return _this.handleDismissOldest(newState);\n      });\n    };\n\n    enqueueSnackbar = _this.enqueueSnackbar;\n    closeSnackbar = _this.closeSnackbar;\n    _this.state = {\n      snacks: [],\n      queue: [],\n      contextValue: {\n        enqueueSnackbar: _this.enqueueSnackbar.bind(_assertThisInitialized(_this)),\n        closeSnackbar: _this.closeSnackbar.bind(_assertThisInitialized(_this))\n      }\n    };\n    return _this;\n  }\n\n  var _proto = SnackbarProvider.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var contextValue = this.state.contextValue;\n    var _this$props = this.props,\n        domRoot = _this$props.domRoot,\n        children = _this$props.children,\n        _this$props$dense = _this$props.dense,\n        dense = _this$props$dense === void 0 ? false : _this$props$dense,\n        _this$props$Component = _this$props.Components,\n        Components = _this$props$Component === void 0 ? {} : _this$props$Component,\n        classes = _this$props.classes;\n    var categ = this.state.snacks.reduce(function (acc, current) {\n      var _extends2;\n\n      var category = originKeyExtractor(current.anchorOrigin);\n      var existingOfCategory = acc[category] || [];\n      return _extends({}, acc, (_extends2 = {}, _extends2[category] = [].concat(existingOfCategory, [current]), _extends2));\n    }, {});\n    var snackbars = Object.keys(categ).map(function (origin) {\n      var snacks = categ[origin];\n      var nomineeSnack = snacks[0];\n      return React__default.createElement(SnackbarContainer$1, {\n        key: origin,\n        dense: dense,\n        anchorOrigin: nomineeSnack.anchorOrigin,\n        classes: classes\n      }, snacks.map(function (snack) {\n        return React__default.createElement(SnackbarItem, {\n          key: snack.id,\n          snack: snack,\n          classes: classes,\n          Component: Components[snack.variant],\n          onClose: _this2.handleCloseSnack,\n          onEnter: _this2.props.onEnter,\n          onExit: _this2.props.onExit,\n          onExited: createChainedFunction([_this2.handleExitedSnack, _this2.props.onExited], snack.id),\n          onEntered: createChainedFunction([_this2.handleEnteredSnack, _this2.props.onEntered], snack.id)\n        });\n      }));\n    });\n    return React__default.createElement(SnackbarContext.Provider, {\n      value: contextValue\n    }, children, domRoot ? createPortal(snackbars, domRoot) : snackbars);\n  };\n\n  _createClass(SnackbarProvider, [{\n    key: \"maxSnack\",\n    get: function get() {\n      return this.props.maxSnack || defaults.maxSnack;\n    }\n  }]);\n\n  return SnackbarProvider;\n}(Component);\n\nvar useSnackbar = function () {\n  return useContext(SnackbarContext);\n};\n\nexport { MaterialDesignContent$1 as MaterialDesignContent, SnackbarContent, SnackbarProvider, Transition, closeSnackbar, enqueueSnackbar, useSnackbar };","map":{"version":3,"sources":["F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarContext.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\index.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\Transition\\Transition.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\useForkRef.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\getTransitionProps.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\utils.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\createTransition.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\Slide\\Slide.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\defaultIconVariants.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarProvider\\merger.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\styles.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\transitions\\Collapse\\Collapse.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarItem\\utils.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\createChainedFunction.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\useEventCallback.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarItem\\Snackbar.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarContent\\SnackbarContent.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\ui\\MaterialDesignContent\\MaterialDesignContent.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarItem\\SnackbarItem.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarContainer\\SnackbarContainer.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\utils\\warning.ts","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\SnackbarProvider\\SnackbarProvider.tsx","F:\\Web Projects\\Web\\Business Website\\frontend\\node_modules\\src\\useSnackbar.ts"],"names":["noOp","enqueueSnackbar","closeSnackbar","breakpoints","downXs","upSm","capitalise","text","originKeyExtractor","anchor","isDefined","value","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","React","Component","appear","props","initialStatus","status","getDerivedStateFromProps","nextIn","prevState","componentDidMount","componentDidUpdate","nextStatus","prevProps","componentWillUnmount","getTimeouts","timeout","enter","exit","updateStatus","mounting","node","performEnter","isAppearing","timeouts","performExit","cancelNextCallback","safeSetState","callback","setNextCallback","active","onTransitionEnd","doesNotHaveTimeoutOrListener","setTimeout","render","state","children","childProps","mountOnEnter","unmountOnExit","onEnter","onEntering","onEntered","onExit","onExiting","onExited","noop","ref","useForkRef","refA","refB","setRef","getTransitionProps","style","mode","duration","easing","delay","transitionDelay","defaultEasing","easeInOut","easeOut","easeIn","sharp","reflow","formatMs","Math","createTransition","options","properties","Array","formattedDuration","formattedDelay","animatedProp","doc","ownerDocument","wait","args","later","func","clearTimeout","debounced","rect","containerWindow","ownerWindow","transform","computedStyle","offsetX","offsetY","transformValues","parseInt","getTranslateValue","Slide","direction","inProp","other","nodeRef","handleRefIntermediary","handleRef","handleEnter","setTranslateValue","handleEntering","transitionProps","transitionTimingFunction","handleExit","handleExited","updatePosition","handleResize","debounce","visibility","undefined","SvgIcon","viewBox","focusable","fontSize","marginInlineEnd","userSelect","width","height","display","fill","flexShrink","CheckIcon","d","WarningIcon","ErrorIcon","InfoIcon","defaultIconVariants","success","warning","error","info","defaults","maxSnack","persist","hideIconVariant","disableWindowBlurListener","variant","autoHideDuration","iconVariant","anchorOrigin","vertical","horizontal","TransitionComponent","transitionDuration","getAutoHideDuration","isNumberOrNull","numberish","getTransitionDuration","is","merge","shouldObjectMerge","name","makeStyles","styles","key","css","ComponentClasses","SnackbarContainer","Snackbar","CollapseWrapper","MuiContent","MuiContentVariant","classes","root","entered","collapsedSize","Collapse","wrapperRef","getWrapperSize","wrapperSize","handleEntered","handleExiting","className","clsx","pointerEvents","overflow","minHeight","transition","right","left","bottom","top","getSlideDirection","toSnackbarAnchorOrigin","keepSnackbarClassKeys","containerClasses","containerRoot","containerAnchorOriginTopCenter","containerAnchorOriginBottomCenter","containerAnchorOriginTopRight","containerAnchorOriginBottomRight","containerAnchorOriginTopLeft","containerAnchorOriginBottomLeft","createChainedFunction","funcs","snackbarId","argums","acc","useEnhancedEffect","useEventCallback","fn","onClose","id","open","SnackbarProps","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","handlePause","handleResume","handleMouseEnter","handleMouseLeave","window","onMouseEnter","onMouseLeave","flexWrap","flexGrow","minWidth","SnackbarContent","forwardRef","backgroundColor","lineHeight","letterSpacing","color","alignItems","padding","borderRadius","boxShadow","lessPadding","paddingLeft","message","action","marginLeft","marginRight","ariaDescribedby","MaterialDesignContent","componentOrFunctionAction","icon","forwardedRef","role","memo","wrappedRoot","position","SnackbarItem","useRef","collapsed","setCollapsed","useState","handleExitedScreen","useCallback","useEffect","snack","allClasses","useMemo","TransitionProps","content","componentOrFunctionContent","otherSnack","callbacks","indents","view","dense","snackbar","collapseWrapper","xsWidthMargin","boxSizing","maxHeight","zIndex","maxWidth","rootDense","flexDirection","center","combinedClassname","__DEV__","process","messages","NO_PERSIST_ALL","console","isOptions","isMessage","isValidElement","SnackbarProvider","snacks","queue","contextValue","optsOrUndefined","messageOrOptions","opts","preventDuplicate","hasSpecifiedKey","merger","requestClose","compareFunction","item","inQueue","inView","popped","ignore","persistentCount","current","shouldCloseAll","toBeClosed","newState","domRoot","Components","categ","category","existingOfCategory","snackbars","nomineeSnack","origin","handleCloseSnack","SnackbarContext","createPortal","useContext"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ProviderContext } from './types';\n\nconst noOp = () => {\n    return '';\n};\n\nexport default React.createContext<ProviderContext>({\n    enqueueSnackbar: noOp,\n    closeSnackbar: noOp,\n});\n","import { InternalSnack } from '../types';\n\nexport const breakpoints = {\n    downXs: '@media (max-width:599.95px)',\n    upSm: '@media (min-width:600px)',\n};\n\nconst capitalise = (text: string): string => text.charAt(0).toUpperCase() + text.slice(1);\n\nexport const originKeyExtractor = (anchor: InternalSnack['anchorOrigin']): string =>\n    `${capitalise(anchor.vertical)}${capitalise(anchor.horizontal)}`;\n\nexport const isDefined = (value: string | null | undefined | number): boolean => !!value || value === 0;\n","/**\n * BSD 3-Clause License\n *\n * Copyright (c) 2018, React Community\n * Forked from React (https://github.com/facebook/react) Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * * Neither the name of the copyright holder nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nimport React from 'react';\nimport { TransitionComponentProps, TransitionStatus } from '../../types';\n\nconst UNMOUNTED = 'unmounted';\nconst EXITED = 'exited';\nconst ENTERING = 'entering';\nconst ENTERED = 'entered';\nconst EXITING = 'exiting';\n\ninterface State {\n    status: TransitionStatus;\n}\n\ninterface NextCallback {\n    (): void;\n    cancel?: () => void;\n}\n\nclass Transition extends React.Component<TransitionComponentProps, State> {\n    appearStatus: TransitionStatus | null;\n\n    nextCallback: NextCallback | null;\n\n    constructor(props: TransitionComponentProps) {\n        super(props);\n\n        const { appear } = props;\n\n        let initialStatus: TransitionStatus;\n\n        this.appearStatus = null;\n\n        if (props.in) {\n            if (appear) {\n                initialStatus = EXITED;\n                this.appearStatus = ENTERING;\n            } else {\n                initialStatus = ENTERED;\n            }\n        } else if (props.unmountOnExit || props.mountOnEnter) {\n            initialStatus = UNMOUNTED;\n        } else {\n            initialStatus = EXITED;\n        }\n\n        this.state = { status: initialStatus };\n\n        this.nextCallback = null;\n    }\n\n    static getDerivedStateFromProps({ in: nextIn }: TransitionComponentProps, prevState: State) {\n        if (nextIn && prevState.status === UNMOUNTED) {\n            return { status: EXITED };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        this.updateStatus(true, this.appearStatus);\n    }\n\n    componentDidUpdate(prevProps: TransitionComponentProps) {\n        let nextStatus: TransitionStatus | null = null;\n        if (prevProps !== this.props) {\n            const { status } = this.state;\n\n            if (this.props.in) {\n                if (status !== ENTERING && status !== ENTERED) {\n                    nextStatus = ENTERING;\n                }\n            } else if (status === ENTERING || status === ENTERED) {\n                nextStatus = EXITING;\n            }\n        }\n        this.updateStatus(false, nextStatus);\n    }\n\n    componentWillUnmount() {\n        this.cancelNextCallback();\n    }\n\n    getTimeouts(): { exit: number; enter: number } {\n        const { timeout } = this.props;\n        let enter = timeout;\n        let exit = timeout;\n\n        if (timeout != null && typeof timeout !== 'number' && typeof timeout !== 'string') {\n            exit = timeout.exit;\n            enter = timeout.enter;\n        }\n        return {\n            exit: exit as number,\n            enter: enter as number,\n        };\n    }\n\n    updateStatus(mounting = false, nextStatus: TransitionStatus | null) {\n        if (nextStatus !== null) {\n            this.cancelNextCallback();\n\n            if (nextStatus === ENTERING) {\n                this.performEnter(mounting);\n            } else {\n                this.performExit();\n            }\n        } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n            this.setState({ status: UNMOUNTED });\n        }\n    }\n\n    get node() {\n        const node = this.props.nodeRef?.current;\n        if (!node) {\n            throw new Error('notistack - Custom snackbar is not refForwarding');\n        }\n        return node;\n    }\n\n    performEnter(mounting: boolean) {\n        const { enter } = this.props;\n        const isAppearing = mounting;\n\n        const timeouts = this.getTimeouts();\n\n        if (!mounting && !enter) {\n            this.safeSetState({ status: ENTERED }, () => {\n                if (this.props.onEntered) {\n                    this.props.onEntered(this.node, isAppearing);\n                }\n            });\n            return;\n        }\n\n        if (this.props.onEnter) {\n            this.props.onEnter(this.node, isAppearing);\n        }\n\n        this.safeSetState({ status: ENTERING }, () => {\n            if (this.props.onEntering) {\n                this.props.onEntering(this.node, isAppearing);\n            }\n\n            this.onTransitionEnd(timeouts.enter, () => {\n                this.safeSetState({ status: ENTERED }, () => {\n                    if (this.props.onEntered) {\n                        this.props.onEntered(this.node, isAppearing);\n                    }\n                });\n            });\n        });\n    }\n\n    performExit() {\n        const { exit } = this.props;\n        const timeouts = this.getTimeouts();\n\n        // no exit animation skip right to EXITED\n        if (!exit) {\n            this.safeSetState({ status: EXITED }, () => {\n                if (this.props.onExited) {\n                    this.props.onExited(this.node);\n                }\n            });\n            return;\n        }\n\n        if (this.props.onExit) {\n            this.props.onExit(this.node);\n        }\n\n        this.safeSetState({ status: EXITING }, () => {\n            if (this.props.onExiting) {\n                this.props.onExiting(this.node);\n            }\n\n            this.onTransitionEnd(timeouts.exit, () => {\n                this.safeSetState({ status: EXITED }, () => {\n                    if (this.props.onExited) {\n                        this.props.onExited(this.node);\n                    }\n                });\n            });\n        });\n    }\n\n    cancelNextCallback() {\n        if (this.nextCallback !== null && this.nextCallback.cancel) {\n            this.nextCallback.cancel();\n            this.nextCallback = null;\n        }\n    }\n\n    safeSetState(nextState: State, callback: () => void) {\n        callback = this.setNextCallback(callback);\n        this.setState(nextState, callback);\n    }\n\n    setNextCallback(callback: () => void) {\n        let active = true;\n\n        this.nextCallback = () => {\n            if (active) {\n                active = false;\n                this.nextCallback = null;\n\n                callback();\n            }\n        };\n\n        (this.nextCallback as NextCallback).cancel = () => {\n            active = false;\n        };\n\n        return this.nextCallback;\n    }\n\n    onTransitionEnd(timeout: number, handler: () => void) {\n        this.setNextCallback(handler);\n        const doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n        if (!this.node || doesNotHaveTimeoutOrListener) {\n            setTimeout(this.nextCallback as NextCallback, 0);\n            return;\n        }\n\n        if (this.props.addEndListener) {\n            this.props.addEndListener(this.node, this.nextCallback as NextCallback);\n        }\n\n        if (timeout != null) {\n            setTimeout(this.nextCallback as NextCallback, timeout);\n        }\n    }\n\n    render() {\n        const { status } = this.state;\n\n        if (status === UNMOUNTED) {\n            return null;\n        }\n\n        const {\n            children,\n            // filter props for `Transition`\n            in: _in,\n            mountOnEnter: _mountOnEnter,\n            unmountOnExit: _unmountOnExit,\n            appear: _appear,\n            enter: _enter,\n            exit: _exit,\n            timeout: _timeout,\n            addEndListener: _addEndListener,\n            onEnter: _onEnter,\n            onEntering: _onEntering,\n            onEntered: _onEntered,\n            onExit: _onExit,\n            onExiting: _onExiting,\n            onExited: _onExited,\n            nodeRef: _nodeRef,\n            ...childProps\n        } = this.props;\n\n        return children(status, childProps);\n    }\n}\n\nfunction noop() {\n    //\n}\n\n(Transition as any).defaultProps = {\n    in: false,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    enter: true,\n    exit: true,\n\n    onEnter: noop,\n    onEntering: noop,\n    onEntered: noop,\n\n    onExit: noop,\n    onExiting: noop,\n    onExited: noop,\n};\n\nexport default Transition;\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\n\n/**\n * passes {value} to {ref}\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nfunction setRef<T>(\n    ref: React.MutableRefObject<T | null> | ((instance: T | null) => void) | null | undefined,\n    value: T | null\n): void {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\n\nexport default function useForkRef<Instance>(\n    refA: React.Ref<Instance> | null | undefined,\n    refB: React.Ref<Instance> | null | undefined\n): React.Ref<Instance> | null {\n    /**\n     * This will create a new function if the ref props change and are defined.\n     * This means react will call the old forkRef with `null` and the new forkRef\n     * with the ref. Cleanup naturally emerges from this behavior.\n     */\n    return React.useMemo(() => {\n        if (refA == null && refB == null) {\n            return null;\n        }\n        return (refValue) => {\n            setRef(refA, refValue);\n            setRef(refB, refValue);\n        };\n    }, [refA, refB]);\n}\n","import { TransitionDuration } from '../types';\n\ninterface ComponentProps {\n    style?: React.CSSProperties | undefined;\n    /**\n     * number: 400\n     * TransitionDuration: { enter: 200, exit: 400 }\n     */\n    timeout: number | TransitionDuration;\n    mode: 'enter' | 'exit';\n}\n\ninterface TransitionPropsReturnType {\n    duration: number;\n    easing: string | undefined;\n    delay: string | undefined;\n}\n\nexport default function getTransitionProps(props: ComponentProps): TransitionPropsReturnType {\n    const { timeout, style = {}, mode } = props;\n    return {\n        duration: typeof timeout === 'object' ? timeout[mode] || 0 : timeout,\n        easing: style.transitionTimingFunction,\n        delay: style.transitionDelay,\n    };\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nexport const defaultEasing = {\n    // This is the most common easing curve.\n    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    // Objects enter the screen at full velocity from off-screen and\n    // slowly decelerate to a resting point.\n    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n    // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n    // The sharp curve is used by objects that may return to the screen at any time.\n    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)',\n};\n\n/**\n * CSS hack to force a repaint\n */\nexport const reflow = (node: Element): void => {\n    // We have to do something with node.scrollTop.\n    // Otherwise it's removed from the compiled code by optimisers\n    // eslint-disable-next-line no-self-assign\n    node.scrollTop = node.scrollTop;\n};\n","import { defaultEasing } from './utils';\n\ninterface CreateTransitionOptions {\n    duration: string | number;\n    easing?: string;\n    delay?: string | number;\n}\n\nconst formatMs = (milliseconds: number) => `${Math.round(milliseconds)}ms`;\n\nexport default function createTransition(\n    props: string | string[] = ['all'],\n    options?: CreateTransitionOptions\n): string {\n    const { duration = 300, easing = defaultEasing.easeInOut, delay = 0 } = options || {};\n\n    const properties = Array.isArray(props) ? props : [props];\n\n    return properties\n        .map((animatedProp) => {\n            const formattedDuration = typeof duration === 'string' ? duration : formatMs(duration);\n            const formattedDelay = typeof delay === 'string' ? delay : formatMs(delay);\n            return `${animatedProp} ${formattedDuration} ${easing} ${formattedDelay}`;\n        })\n        .join(',');\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport TransitionComponent from '../Transition';\nimport useForkRef from '../useForkRef';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { defaultEasing, reflow } from '../utils';\nimport { SlideTransitionDirection, TransitionProps } from '../../types';\n\nfunction ownerDocument(node: Node | null | undefined): Document {\n    return (node && node.ownerDocument) || document;\n}\n\nfunction ownerWindow(node: Node | null): Window {\n    const doc = ownerDocument(node);\n    return doc.defaultView || window;\n}\n\n/**\n * Corresponds to 10 frames at 60 Hz.\n * A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.\n */\nfunction debounce(func: () => void, wait = 166) {\n    let timeout: ReturnType<typeof setTimeout>;\n    function debounced(...args: any[]) {\n        const later = () => {\n            // @ts-ignore\n            func.apply(this, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    }\n\n    debounced.clear = () => {\n        clearTimeout(timeout);\n    };\n\n    return debounced;\n}\n\n/**\n * Translate the node so it can't be seen on the screen.\n * Later, we're going to translate the node back to its original location with `none`.\n */\nfunction getTranslateValue(\n    direction: SlideTransitionDirection,\n    node: HTMLElement & { fakeTransform?: string }\n): string {\n    const rect = node.getBoundingClientRect();\n    const containerWindow = ownerWindow(node);\n    let transform;\n\n    if (node.fakeTransform) {\n        transform = node.fakeTransform;\n    } else {\n        const computedStyle = containerWindow.getComputedStyle(node);\n        transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n    }\n\n    let offsetX = 0;\n    let offsetY = 0;\n\n    if (transform && transform !== 'none' && typeof transform === 'string') {\n        const transformValues = transform.split('(')[1].split(')')[0].split(',');\n        offsetX = parseInt(transformValues[4], 10);\n        offsetY = parseInt(transformValues[5], 10);\n    }\n\n    switch (direction) {\n        case 'left':\n            return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n        case 'right':\n            return `translateX(-${rect.left + rect.width - offsetX}px)`;\n        case 'up':\n            return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n        default:\n            // down\n            return `translateY(-${rect.top + rect.height - offsetY}px)`;\n    }\n}\n\nfunction setTranslateValue(direction: SlideTransitionDirection, node: HTMLElement | null): void {\n    if (!node) return;\n    const transform = getTranslateValue(direction, node);\n    if (transform) {\n        node.style.webkitTransform = transform;\n        node.style.transform = transform;\n    }\n}\n\nconst Slide = React.forwardRef<unknown, TransitionProps>((props, ref) => {\n    const {\n        children,\n        direction = 'down',\n        in: inProp,\n        style,\n        timeout = 0,\n        onEnter,\n        onEntered,\n        onExit,\n        onExited,\n        ...other\n    } = props;\n\n    const nodeRef = React.useRef(null);\n    const handleRefIntermediary = useForkRef((children as any).ref, nodeRef);\n    const handleRef = useForkRef(handleRefIntermediary, ref);\n\n    const handleEnter: TransitionProps['onEnter'] = (node, isAppearing) => {\n        setTranslateValue(direction, node);\n        reflow(node);\n\n        if (onEnter) {\n            onEnter(node, isAppearing);\n        }\n    };\n\n    const handleEntering = (node: HTMLElement) => {\n        const easing = style?.transitionTimingFunction || defaultEasing.easeOut;\n        const transitionProps = getTransitionProps({\n            timeout,\n            mode: 'enter',\n            style: { ...style, transitionTimingFunction: easing },\n        });\n\n        node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n        node.style.transition = createTransition('transform', transitionProps);\n\n        node.style.webkitTransform = 'none';\n        node.style.transform = 'none';\n    };\n\n    const handleExit: TransitionProps['onExit'] = (node) => {\n        const easing = style?.transitionTimingFunction || defaultEasing.sharp;\n        const transitionProps = getTransitionProps({\n            timeout,\n            mode: 'exit',\n            style: { ...style, transitionTimingFunction: easing },\n        });\n\n        node.style.webkitTransition = createTransition('-webkit-transform', transitionProps);\n        node.style.transition = createTransition('transform', transitionProps);\n\n        setTranslateValue(direction, node);\n\n        if (onExit) {\n            onExit(node);\n        }\n    };\n\n    const handleExited: TransitionProps['onExited'] = (node) => {\n        // No need for transitions when the component is hidden\n        node.style.webkitTransition = '';\n        node.style.transition = '';\n\n        if (onExited) {\n            onExited(node);\n        }\n    };\n\n    const updatePosition = React.useCallback(() => {\n        if (nodeRef.current) {\n            setTranslateValue(direction, nodeRef.current);\n        }\n    }, [direction]);\n\n    React.useEffect(() => {\n        // Skip configuration where the position is screen size invariant.\n        if (inProp || direction === 'down' || direction === 'right') {\n            return undefined;\n        }\n\n        const handleResize = debounce(() => {\n            if (nodeRef.current) {\n                setTranslateValue(direction, nodeRef.current);\n            }\n        });\n\n        const containerWindow = ownerWindow(nodeRef.current);\n        containerWindow.addEventListener('resize', handleResize);\n        return () => {\n            handleResize.clear();\n            containerWindow.removeEventListener('resize', handleResize);\n        };\n    }, [direction, inProp]);\n\n    React.useEffect(() => {\n        if (!inProp) {\n            // We need to update the position of the drawer when the direction change and\n            // when it's hidden.\n            updatePosition();\n        }\n    }, [inProp, updatePosition]);\n\n    return (\n        <TransitionComponent\n            appear\n            nodeRef={nodeRef}\n            onEnter={handleEnter}\n            onEntered={onEntered}\n            onEntering={handleEntering}\n            onExit={handleExit}\n            onExited={handleExited}\n            in={inProp}\n            timeout={timeout}\n            {...other}\n        >\n            {(state, childProps) =>\n                React.cloneElement(children as any, {\n                    ref: handleRef,\n                    style: {\n                        visibility: state === 'exited' && !inProp ? 'hidden' : undefined,\n                        ...style,\n                        ...(children as any).props.style,\n                    },\n                    ...childProps,\n                })\n            }\n        </TransitionComponent>\n    );\n});\n\nSlide.displayName = 'Slide';\n\nexport default Slide;\n","import React from 'react';\n\nconst SvgIcon = (props: { children: JSX.Element }) => (\n    <svg\n        viewBox=\"0 0 24 24\"\n        focusable=\"false\"\n        style={{\n            fontSize: 20,\n            marginInlineEnd: 8,\n            userSelect: 'none',\n            width: '1em',\n            height: '1em',\n            display: 'inline-block',\n            fill: 'currentColor',\n            flexShrink: 0,\n        }}\n        {...props}\n    />\n);\n\nconst CheckIcon: React.FC = () => (\n    <SvgIcon>\n        <path\n            d=\"M12 2C6.5 2 2 6.5 2 12S6.5 22 12 22 22 17.5 22 12 17.5 2 12 2M10 17L5 12L6.41\n        10.59L10 14.17L17.59 6.58L19 8L10 17Z\"\n        />\n    </SvgIcon>\n);\n\nconst WarningIcon: React.FC = () => (\n    <SvgIcon>\n        <path d=\"M13,14H11V10H13M13,18H11V16H13M1,21H23L12,2L1,21Z\" />\n    </SvgIcon>\n);\n\nconst ErrorIcon: React.FC = () => (\n    <SvgIcon>\n        <path\n            d=\"M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,\n        6.47 6.47,2 12,2M15.59,7L12,10.59L8.41,7L7,8.41L10.59,12L7,15.59L8.41,17L12,\n        13.41L15.59,17L17,15.59L13.41,12L17,8.41L15.59,7Z\"\n        />\n    </SvgIcon>\n);\n\nconst InfoIcon: React.FC = () => (\n    <SvgIcon>\n        <path\n            d=\"M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,\n        0 22,12A10,10 0 0,0 12,2Z\"\n        />\n    </SvgIcon>\n);\n\nconst defaultIconVariants: Record<string, React.ReactNode> = {\n    default: undefined,\n    success: <CheckIcon />,\n    warning: <WarningIcon />,\n    error: <ErrorIcon />,\n    info: <InfoIcon />,\n};\n\nexport default defaultIconVariants;\n","import Slide from '../transitions/Slide';\nimport defaultIconVariants from '../utils/defaultIconVariants';\nimport { InternalSnack } from '../types';\n\nexport const defaults = {\n    maxSnack: 3,\n    persist: false,\n    hideIconVariant: false,\n    disableWindowBlurListener: false,\n    variant: 'default',\n    autoHideDuration: 5000,\n    iconVariant: defaultIconVariants,\n    anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n    TransitionComponent: Slide,\n    transitionDuration: {\n        enter: 225,\n        exit: 195,\n    },\n};\n\n/**\n * Derives the right autoHideDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getAutoHideDuration = (optionsDuration: any, propsDuration: any) => {\n    const isNumberOrNull = (numberish: number | null) => typeof numberish === 'number' || numberish === null;\n\n    if (isNumberOrNull(optionsDuration)) return optionsDuration;\n    if (isNumberOrNull(propsDuration)) return propsDuration;\n    return defaults.autoHideDuration;\n};\n\n/**\n * Derives the right transitionDuration taking into account the following\n * prority order: 1: Options, 2: Props, 3: default fallback\n */\nconst getTransitionDuration = (optionsDuration: any, propsDuration: any) => {\n    const is = (item: any, types: string[]) => types.some((t) => typeof item === t);\n\n    if (is(optionsDuration, ['string', 'number'])) {\n        return optionsDuration;\n    }\n\n    if (is(optionsDuration, ['object'])) {\n        return {\n            ...defaults.transitionDuration,\n            ...(is(propsDuration, ['object']) && propsDuration),\n            ...optionsDuration,\n        };\n    }\n\n    if (is(propsDuration, ['string', 'number'])) {\n        return propsDuration;\n    }\n\n    if (is(propsDuration, ['object'])) {\n        return {\n            ...defaults.transitionDuration,\n            ...propsDuration,\n        };\n    }\n\n    return defaults.transitionDuration;\n};\n\nexport const merge =\n    (options: any, props: any) =>\n    (name: keyof InternalSnack, shouldObjectMerge = false): any => {\n        if (shouldObjectMerge) {\n            return {\n                ...(defaults as any)[name],\n                ...props[name],\n                ...options[name],\n            };\n        }\n\n        if (name === 'autoHideDuration') {\n            return getAutoHideDuration(options.autoHideDuration, props.autoHideDuration);\n        }\n\n        if (name === 'transitionDuration') {\n            return getTransitionDuration(options.transitionDuration, props.transitionDuration);\n        }\n\n        return options[name] || props[name] || (defaults as any)[name];\n    };\n","import { css, CSSAttribute } from 'goober';\n\nexport function makeStyles<S extends { [key: string]: CSSAttribute }, K extends keyof S>(\n    styles: S\n): { [key in K]: string } {\n    return Object.entries(styles).reduce(\n        (acc, [key, value]) => ({\n            ...acc,\n            [key]: css(value),\n        }),\n        {} as { [key in K]: string }\n    );\n}\n\nexport const ComponentClasses = {\n    SnackbarContainer: 'notistack-SnackbarContainer',\n    Snackbar: 'notistack-Snackbar',\n    CollapseWrapper: 'notistack-CollapseWrapper',\n    MuiContent: 'notistack-MuiContent',\n    MuiContentVariant: (variant: string) => `notistack-MuiContent-${variant}`,\n};\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { reflow } from '../utils';\nimport TransitionComponent from '../Transition';\nimport useForkRef from '../useForkRef';\nimport { TransitionProps } from '../../types';\nimport getTransitionProps from '../getTransitionProps';\nimport createTransition from '../createTransition';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        height: 0,\n    },\n    entered: {\n        height: 'auto',\n    },\n});\n\nconst collapsedSize = '0px';\nconst timeout = 175;\n\ninterface CollapseProps {\n    children: JSX.Element;\n    in: boolean;\n    onExited: TransitionProps['onExited'];\n}\n\nconst Collapse = React.forwardRef<HTMLDivElement, CollapseProps>((props, ref) => {\n    const { children, in: inProp, onExited } = props;\n\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n\n    const nodeRef = React.useRef<HTMLDivElement>(null);\n    const handleRef = useForkRef(ref, nodeRef);\n\n    const getWrapperSize = () => (wrapperRef.current ? wrapperRef.current.clientHeight : 0);\n\n    const handleEnter: TransitionProps['onEnter'] = (node) => {\n        node.style.height = collapsedSize;\n    };\n\n    const handleEntering = (node: HTMLElement) => {\n        const wrapperSize = getWrapperSize();\n\n        const { duration: transitionDuration, easing } = getTransitionProps({\n            timeout,\n            mode: 'enter',\n        });\n\n        node.style.transitionDuration =\n            typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n\n        node.style.height = `${wrapperSize}px`;\n        node.style.transitionTimingFunction = easing || '';\n    };\n\n    const handleEntered: TransitionProps['onEntered'] = (node) => {\n        node.style.height = 'auto';\n    };\n\n    const handleExit: TransitionProps['onExit'] = (node) => {\n        node.style.height = `${getWrapperSize()}px`;\n    };\n\n    const handleExiting = (node: HTMLElement) => {\n        reflow(node);\n\n        const { duration: transitionDuration, easing } = getTransitionProps({\n            timeout,\n            mode: 'exit',\n        });\n\n        node.style.transitionDuration =\n            typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n        node.style.height = collapsedSize;\n        node.style.transitionTimingFunction = easing || '';\n    };\n\n    return (\n        <TransitionComponent\n            in={inProp}\n            unmountOnExit\n            onEnter={handleEnter}\n            onEntered={handleEntered}\n            onEntering={handleEntering}\n            onExit={handleExit}\n            onExited={onExited}\n            onExiting={handleExiting}\n            nodeRef={nodeRef}\n            timeout={timeout}\n        >\n            {(state, childProps) => (\n                <div\n                    ref={handleRef}\n                    className={clsx(classes.root, { [classes.entered]: state === 'entered' })}\n                    style={{\n                        pointerEvents: 'all',\n                        overflow: 'hidden',\n                        minHeight: collapsedSize,\n                        transition: createTransition('height'),\n                        ...(state === 'entered' && {\n                            overflow: 'visible',\n                        }),\n                        ...(state === 'exited' &&\n                            !inProp && {\n                                visibility: 'hidden',\n                            }),\n                    }}\n                    {...childProps}\n                >\n                    <div\n                        ref={wrapperRef}\n                        className={ComponentClasses.CollapseWrapper}\n                        // Hack to get children with a negative margin to not falsify the height computation.\n                        style={{ display: 'flex', width: '100%' }}\n                    >\n                        {children}\n                    </div>\n                </div>\n            )}\n        </TransitionComponent>\n    );\n});\n\nCollapse.displayName = 'Collapse';\n\nexport default Collapse;\n","import {\n    InternalSnack,\n    SlideTransitionDirection,\n    SnackbarOrigin,\n    SnackbarClassKey,\n    SnackbarProviderProps,\n    ClassNameMap,\n    ContainerClassKey,\n} from '../types';\nimport { originKeyExtractor } from '../utils';\n\nconst direction: Record<string, SlideTransitionDirection> = {\n    right: 'left',\n    left: 'right',\n    bottom: 'up',\n    top: 'down',\n};\n\nexport const getSlideDirection = (anchorOrigin: InternalSnack['anchorOrigin']): SlideTransitionDirection => {\n    if (anchorOrigin.horizontal !== 'center') {\n        return direction[anchorOrigin.horizontal];\n    }\n    return direction[anchorOrigin.vertical];\n};\n\n/** Tranforms classes name */\nexport const toSnackbarAnchorOrigin = (anchorOrigin: SnackbarOrigin): SnackbarClassKey =>\n    `anchorOrigin${originKeyExtractor(anchorOrigin)}` as SnackbarClassKey;\n\n/**\n * Omit SnackbarContainer class keys that are not needed for SnackbarItem\n */\nexport const keepSnackbarClassKeys = (\n    classes: SnackbarProviderProps['classes'] = {}\n): Partial<ClassNameMap<SnackbarClassKey>> => {\n    const containerClasses: Record<ContainerClassKey, true> = {\n        containerRoot: true,\n        containerAnchorOriginTopCenter: true,\n        containerAnchorOriginBottomCenter: true,\n        containerAnchorOriginTopRight: true,\n        containerAnchorOriginBottomRight: true,\n        containerAnchorOriginTopLeft: true,\n        containerAnchorOriginBottomLeft: true,\n    };\n    return (Object.keys(classes) as ContainerClassKey[])\n        .filter((key) => !containerClasses[key])\n        .reduce((obj, key) => ({ ...obj, [key]: classes[key] }), {});\n};\n","import { SnackbarKey } from 'src/types';\n\nconst noOp = () => {\n    /* */\n};\n\n/**\n * Credit to MUI team @ https://mui.com\n * Safe chained function.\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n */\nexport default function createChainedFunction<Args extends any[], This>(\n    funcs: Array<((this: This, ...args: Args) => any) | undefined>,\n    snackbarId?: SnackbarKey\n): (this: This, ...args: Args) => void {\n    // @ts-ignore\n    return funcs.reduce((acc, func) => {\n        if (func === null || func === undefined) {\n            return acc;\n        }\n\n        return function chainedFunction(...args) {\n            const argums = [...args] as any;\n            if (snackbarId && argums.indexOf(snackbarId) === -1) {\n                argums.push(snackbarId);\n            }\n            // @ts-ignore\n            acc.apply(this, argums);\n            func.apply(this, argums);\n        };\n    }, noOp);\n}\n","/**\n * Credit to MUI team @ https://mui.com\n * https://github.com/facebook/react/issues/14099#issuecomment-440013892\n */\nimport * as React from 'react';\n\nconst useEnhancedEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport default function useEventCallback<Args extends unknown[], Return>(\n    fn: (...args: Args) => Return\n): (...args: Args) => Return {\n    const ref = React.useRef(fn);\n    useEnhancedEffect(() => {\n        ref.current = fn;\n    });\n    return React.useCallback(\n        (...args: Args) =>\n            // @ts-expect-error hide `this`\n            (0, ref.current)(...args),\n        []\n    );\n}\n","/**\n * Credit to MUI team @ https://mui.com\n */\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport useEventCallback from '../utils/useEventCallback';\nimport { CloseReason, SharedProps, SnackbarKey } from '../types';\nimport { ComponentClasses } from '../utils/styles';\n\ninterface SnackbarProps extends Required<Pick<SharedProps, 'disableWindowBlurListener' | 'onClose'>> {\n    open: boolean;\n    id: SnackbarKey;\n    className: string;\n    children: JSX.Element;\n    autoHideDuration: number | null | undefined;\n    SnackbarProps: SharedProps['SnackbarProps'];\n}\n\nconst Snackbar = React.forwardRef<HTMLDivElement, SnackbarProps>((props, ref) => {\n    const {\n        children,\n        className,\n        autoHideDuration,\n        disableWindowBlurListener = false,\n        onClose,\n        id,\n        open,\n        SnackbarProps = {},\n    } = props;\n\n    const timerAutoHide = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const handleClose = useEventCallback((...args: [null, CloseReason, SnackbarKey]) => {\n        if (onClose) {\n            onClose(...args);\n        }\n    });\n\n    const setAutoHideTimer = useEventCallback((autoHideDurationParam?: number | null) => {\n        if (!onClose || autoHideDurationParam == null) {\n            return;\n        }\n\n        if (timerAutoHide.current) {\n            clearTimeout(timerAutoHide.current);\n        }\n        timerAutoHide.current = setTimeout(() => {\n            handleClose(null, 'timeout', id);\n        }, autoHideDurationParam);\n    });\n\n    React.useEffect(() => {\n        if (open) {\n            setAutoHideTimer(autoHideDuration);\n        }\n\n        return () => {\n            if (timerAutoHide.current) {\n                clearTimeout(timerAutoHide.current);\n            }\n        };\n    }, [open, autoHideDuration, setAutoHideTimer]);\n\n    /**\n     * Pause the timer when the user is interacting with the Snackbar\n     * or when the user hide the window.\n     */\n    const handlePause = () => {\n        if (timerAutoHide.current) {\n            clearTimeout(timerAutoHide.current);\n        }\n    };\n\n    /**\n     * Restart the timer when the user is no longer interacting with the Snackbar\n     * or when the window is shown back.\n     */\n    const handleResume = React.useCallback(() => {\n        if (autoHideDuration != null) {\n            setAutoHideTimer(autoHideDuration * 0.5);\n        }\n    }, [autoHideDuration, setAutoHideTimer]);\n\n    const handleMouseEnter: React.MouseEventHandler<HTMLDivElement> = (event) => {\n        if (SnackbarProps.onMouseEnter) {\n            SnackbarProps.onMouseEnter(event);\n        }\n        handlePause();\n    };\n\n    const handleMouseLeave: React.MouseEventHandler<HTMLDivElement> = (event) => {\n        if (SnackbarProps.onMouseLeave) {\n            SnackbarProps.onMouseLeave(event);\n        }\n        handleResume();\n    };\n\n    React.useEffect(() => {\n        if (!disableWindowBlurListener && open) {\n            window.addEventListener('focus', handleResume);\n            window.addEventListener('blur', handlePause);\n\n            return () => {\n                window.removeEventListener('focus', handleResume);\n                window.removeEventListener('blur', handlePause);\n            };\n        }\n\n        return undefined;\n    }, [disableWindowBlurListener, handleResume, open]);\n\n    return (\n        <div\n            ref={ref}\n            {...SnackbarProps}\n            className={clsx(ComponentClasses.Snackbar, className)}\n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n        >\n            {children}\n        </div>\n    );\n});\n\nSnackbar.displayName = 'Snackbar';\n\nexport default Snackbar;\n","import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport { SnackbarContentProps } from '../types';\nimport { breakpoints } from '../utils';\nimport { makeStyles } from '../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexGrow: 1,\n        [breakpoints.upSm]: {\n            flexGrow: 'initial',\n            minWidth: '288px',\n        },\n    },\n});\n\nconst SnackbarContent = forwardRef<HTMLDivElement, SnackbarContentProps>(({ className, ...props }, ref) => (\n    <div ref={ref} className={clsx(classes.root, className)} {...props} />\n));\n\nSnackbarContent.displayName = 'SnackbarContent';\n\nexport default SnackbarContent;\n","import React, { memo, forwardRef } from 'react';\nimport clsx from 'clsx';\nimport SnackbarContent from '../../SnackbarContent';\nimport { CustomContentProps } from '../../types';\nimport { ComponentClasses, makeStyles } from '../../utils/styles';\n\nconst classes = makeStyles({\n    root: {\n        backgroundColor: '#313131', // dark grey\n        fontSize: '0.875rem',\n        lineHeight: 1.43,\n        letterSpacing: '0.01071em',\n        color: '#fff',\n        alignItems: 'center',\n        padding: '6px 16px',\n        borderRadius: '4px',\n        boxShadow:\n            '0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)',\n    },\n    lessPadding: {\n        paddingLeft: `${8 * 2.5}px`,\n    },\n    default: {\n        backgroundColor: '#313131', // dark grey\n    },\n    success: {\n        backgroundColor: '#43a047', // green\n    },\n    error: {\n        backgroundColor: '#d32f2f', // dark red\n    },\n    warning: {\n        backgroundColor: '#ff9800', // amber\n    },\n    info: {\n        backgroundColor: '#2196f3', // nice blue\n    },\n    message: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: '8px 0',\n    },\n    action: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: 'auto',\n        paddingLeft: '16px',\n        marginRight: '-8px',\n    },\n});\n\nconst ariaDescribedby = 'notistack-snackbar';\n\nconst MaterialDesignContent = forwardRef<HTMLDivElement, CustomContentProps>((props, forwardedRef) => {\n    const {\n        id,\n        message,\n        action: componentOrFunctionAction,\n        iconVariant,\n        variant,\n        hideIconVariant,\n        style,\n        className,\n    } = props;\n\n    const icon = iconVariant[variant];\n\n    let action = componentOrFunctionAction;\n    if (typeof action === 'function') {\n        action = action(id);\n    }\n\n    return (\n        <SnackbarContent\n            ref={forwardedRef}\n            role=\"alert\"\n            aria-describedby={ariaDescribedby}\n            style={style}\n            className={clsx(\n                ComponentClasses.MuiContent,\n                ComponentClasses.MuiContentVariant(variant),\n                classes.root,\n                { [classes.lessPadding]: !hideIconVariant && icon },\n                classes[variant],\n                className\n            )}\n        >\n            <div id={ariaDescribedby} className={classes.message}>\n                {!hideIconVariant ? icon : null}\n                {message}\n            </div>\n            {action && <div className={classes.action}>{action}</div>}\n        </SnackbarContent>\n    );\n});\n\nMaterialDesignContent.displayName = 'MaterialDesignContent';\n\nexport default memo(MaterialDesignContent);\n","import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport clsx from 'clsx';\nimport Collapse from '../transitions/Collapse';\nimport { getSlideDirection, toSnackbarAnchorOrigin, keepSnackbarClassKeys } from './utils';\nimport {\n    TransitionHandlerProps,\n    SnackbarProviderProps,\n    CustomContentProps,\n    InternalSnack,\n    SharedProps,\n} from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Snackbar from './Snackbar';\nimport { makeStyles } from '../utils/styles';\nimport MaterialDesignContent from '../ui/MaterialDesignContent';\n\nconst styles = makeStyles({\n    wrappedRoot: {\n        width: '100%',\n        position: 'relative',\n        transform: 'translateX(0)',\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        minWidth: '288px',\n    },\n});\n\ninterface SnackbarItemProps extends Required<Pick<SnackbarProviderProps, 'onEntered' | 'onExited' | 'onClose'>> {\n    snack: InternalSnack;\n    classes: SnackbarProviderProps['classes'];\n    onEnter: SnackbarProviderProps['onEnter'];\n    onExit: SnackbarProviderProps['onExit'];\n    Component?: React.ComponentType<CustomContentProps>;\n}\n\nconst SnackbarItem: React.FC<SnackbarItemProps> = (props) => {\n    const timeout = useRef<ReturnType<typeof setTimeout>>();\n    const [collapsed, setCollapsed] = useState(true);\n\n    const handleClose: NonNullable<SharedProps['onClose']> = createChainedFunction([\n        props.snack.onClose,\n        props.onClose,\n    ]);\n\n    const handleEntered: TransitionHandlerProps['onEntered'] = () => {\n        if (props.snack.requestClose) {\n            handleClose(null, 'instructed', props.snack.id);\n        }\n    };\n\n    const handleExitedScreen = useCallback((): void => {\n        timeout.current = setTimeout(() => {\n            setCollapsed((col) => !col);\n        }, 125);\n    }, []);\n\n    useEffect(\n        () => (): void => {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n            }\n        },\n        []\n    );\n\n    const { snack, classes: allClasses, Component = MaterialDesignContent } = props;\n\n    const classes = useMemo(() => keepSnackbarClassKeys(allClasses), [allClasses]);\n\n    const {\n        open,\n        SnackbarProps,\n        TransitionComponent,\n        TransitionProps,\n        transitionDuration,\n        disableWindowBlurListener,\n        content: componentOrFunctionContent,\n        entered: ignoredEntered,\n        requestClose: ignoredRequestClose,\n        onEnter: ignoreOnEnter,\n        onEntered: ignoreOnEntered,\n        onExit: ignoreOnExit,\n        onExited: ignoreOnExited,\n        ...otherSnack\n    } = snack;\n\n    const transitionProps = {\n        direction: getSlideDirection(otherSnack.anchorOrigin),\n        timeout: transitionDuration,\n        ...TransitionProps,\n    };\n\n    let content = componentOrFunctionContent;\n    if (typeof content === 'function') {\n        content = content(otherSnack.id, otherSnack.message);\n    }\n\n    const callbacks: { [key in keyof TransitionHandlerProps]?: any } = (\n        ['onEnter', 'onEntered', 'onExit', 'onExited'] as (keyof TransitionHandlerProps)[]\n    ).reduce(\n        (acc, cbName) => ({\n            ...acc,\n            [cbName]: createChainedFunction([props.snack[cbName] as any, props[cbName] as any], otherSnack.id),\n        }),\n        {}\n    );\n\n    return (\n        <Collapse in={collapsed} onExited={callbacks.onExited}>\n            <Snackbar\n                open={open}\n                id={otherSnack.id}\n                disableWindowBlurListener={disableWindowBlurListener}\n                autoHideDuration={otherSnack.autoHideDuration}\n                className={clsx(\n                    styles.wrappedRoot,\n                    classes.root,\n                    classes[toSnackbarAnchorOrigin(otherSnack.anchorOrigin)]\n                )}\n                SnackbarProps={SnackbarProps}\n                onClose={handleClose}\n            >\n                <TransitionComponent\n                    {...transitionProps}\n                    appear\n                    in={open}\n                    onExit={callbacks.onExit}\n                    onExited={handleExitedScreen}\n                    onEnter={callbacks.onEnter}\n                    // order matters. first callbacks.onEntered to set entered: true,\n                    // then handleEntered to check if there's a request for closing\n                    onEntered={createChainedFunction([callbacks.onEntered, handleEntered], otherSnack.id)}\n                >\n                    {(content as React.ReactElement) || <Component {...otherSnack} />}\n                </TransitionComponent>\n            </Snackbar>\n        </Collapse>\n    );\n};\n\nexport default SnackbarItem;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport createTransition from '../transitions/createTransition';\nimport { makeStyles, ComponentClasses } from '../utils/styles';\nimport { breakpoints, originKeyExtractor } from '../utils';\nimport { ContainerClassKey, SnackbarProviderProps } from '../types';\n\nconst indents = {\n    view: { default: 20, dense: 4 },\n    snackbar: { default: 6, dense: 2 },\n};\n\nconst collapseWrapper = `.${ComponentClasses.CollapseWrapper}`;\n\nconst xsWidthMargin = 16;\n\nconst styles = makeStyles({\n    root: {\n        boxSizing: 'border-box',\n        display: 'flex',\n        maxHeight: '100%',\n        position: 'fixed',\n        zIndex: 1400,\n        height: 'auto',\n        width: 'auto',\n        transition: createTransition(['top', 'right', 'bottom', 'left', 'max-width'], {\n            duration: 300,\n            easing: 'ease',\n        }),\n        // container itself is invisible and should not block clicks, clicks should be passed to its children\n        // a pointerEvents: all is applied in the collapse component\n        pointerEvents: 'none',\n        [collapseWrapper]: {\n            padding: `${indents.snackbar.default}px 0px`,\n            transition: 'padding 300ms ease 0ms',\n        },\n        maxWidth: `calc(100% - ${indents.view.default * 2}px)`,\n        [breakpoints.downXs]: {\n            width: '100%',\n            maxWidth: `calc(100% - ${xsWidthMargin * 2}px)`,\n        },\n    },\n    rootDense: {\n        [collapseWrapper]: {\n            padding: `${indents.snackbar.dense}px 0px`,\n        },\n    },\n    top: {\n        top: `${indents.view.default - indents.snackbar.default}px`,\n        flexDirection: 'column',\n    },\n    bottom: {\n        bottom: `${indents.view.default - indents.snackbar.default}px`,\n        flexDirection: 'column-reverse',\n    },\n    left: {\n        left: `${indents.view.default}px`,\n        [breakpoints.upSm]: {\n            alignItems: 'flex-start',\n        },\n        [breakpoints.downXs]: {\n            left: `${xsWidthMargin}px`,\n        },\n    },\n    right: {\n        right: `${indents.view.default}px`,\n        [breakpoints.upSm]: {\n            alignItems: 'flex-end',\n        },\n        [breakpoints.downXs]: {\n            right: `${xsWidthMargin}px`,\n        },\n    },\n    center: {\n        left: '50%',\n        transform: 'translateX(-50%)',\n        [breakpoints.upSm]: {\n            alignItems: 'center',\n        },\n    },\n});\n\ninterface SnackbarContainerProps {\n    children: React.ReactNode;\n    dense: SnackbarProviderProps['dense'];\n    anchorOrigin: NonNullable<SnackbarProviderProps['anchorOrigin']>;\n    classes: SnackbarProviderProps['classes'];\n}\n\nconst SnackbarContainer: React.FC<SnackbarContainerProps> = (props) => {\n    const { classes = {}, anchorOrigin, dense, children } = props;\n\n    const combinedClassname = clsx(\n        ComponentClasses.SnackbarContainer,\n        styles[anchorOrigin.vertical],\n        styles[anchorOrigin.horizontal],\n        { [styles.rootDense]: dense },\n        styles.root, // root should come after others to override maxWidth\n        classes.containerRoot,\n        classes[`containerAnchorOrigin${originKeyExtractor(anchorOrigin)}` as ContainerClassKey]\n    );\n\n    return <div className={combinedClassname}>{children}</div>;\n};\n\nexport default memo(SnackbarContainer);\n","/* eslint-disable */\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst messages = {\n    NO_PERSIST_ALL:\n        \"Reached maxSnack while all enqueued snackbars have 'persist' flag. Notistack will dismiss the oldest snackbar anyway to allow other ones in the queue to be presented.\",\n};\n\nexport default (messageKey: keyof typeof messages): void => {\n    if (!__DEV__) return;\n\n    const message = messages[messageKey];\n    if (typeof console !== 'undefined') {\n        console.error(`WARNING - notistack: ${message}`);\n    }\n    try {\n        throw new Error(message);\n    } catch (x) {}\n};\n","import React, { Component, isValidElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport clsx from 'clsx';\nimport SnackbarContext from '../SnackbarContext';\nimport { originKeyExtractor, isDefined } from '../utils';\nimport { defaults, merge } from './merger';\nimport SnackbarItem from '../SnackbarItem';\nimport SnackbarContainer from '../SnackbarContainer';\nimport warning from '../utils/warning';\nimport {\n    SnackbarProviderProps,\n    SnackbarKey,\n    ProviderContext,\n    TransitionHandlerProps,\n    InternalSnack,\n    OptionsObject,\n    SharedProps,\n    SnackbarMessage,\n} from '../types';\nimport createChainedFunction from '../utils/createChainedFunction';\n\nconst isOptions = (\n    messageOrOptions: SnackbarMessage | (OptionsObject & { message?: SnackbarMessage })\n): messageOrOptions is OptionsObject & { message?: SnackbarMessage } => {\n    const isMessage = typeof messageOrOptions === 'string' || isValidElement(messageOrOptions);\n    return !isMessage;\n};\n\ntype Reducer = (state: State) => State;\ntype SnacksByPosition = { [key: string]: InternalSnack[] };\n\ninterface State {\n    snacks: InternalSnack[];\n    queue: InternalSnack[];\n    contextValue: ProviderContext;\n}\n\nexport let enqueueSnackbar: ProviderContext['enqueueSnackbar'];\nexport let closeSnackbar: ProviderContext['closeSnackbar'];\n\nclass SnackbarProvider extends Component<SnackbarProviderProps, State> {\n    constructor(props: SnackbarProviderProps) {\n        super(props);\n        enqueueSnackbar = this.enqueueSnackbar;\n        closeSnackbar = this.closeSnackbar;\n\n        this.state = {\n            snacks: [],\n            queue: [],\n            contextValue: {\n                enqueueSnackbar: this.enqueueSnackbar.bind(this),\n                closeSnackbar: this.closeSnackbar.bind(this),\n            },\n        };\n    }\n\n    get maxSnack(): number {\n        return this.props.maxSnack || defaults.maxSnack;\n    }\n\n    /**\n     * Adds a new snackbar to the queue to be presented.\n     * Returns generated or user defined key referencing the new snackbar or null\n     */\n    enqueueSnackbar = (\n        messageOrOptions: SnackbarMessage | (OptionsObject & { message?: SnackbarMessage }),\n        optsOrUndefined: OptionsObject = {}\n    ): SnackbarKey => {\n        if (messageOrOptions === undefined || messageOrOptions === null) {\n            throw new Error('enqueueSnackbar called with invalid argument');\n        }\n\n        const opts = isOptions(messageOrOptions) ? messageOrOptions : optsOrUndefined;\n\n        const message: SnackbarMessage | undefined = isOptions(messageOrOptions)\n            ? messageOrOptions.message\n            : messageOrOptions;\n\n        const { key, preventDuplicate, ...options } = opts;\n\n        const hasSpecifiedKey = isDefined(key);\n        const id = hasSpecifiedKey ? (key as SnackbarKey) : new Date().getTime() + Math.random();\n\n        const merger = merge(options, this.props);\n        const snack: InternalSnack = {\n            id,\n            ...options,\n            message,\n            open: true,\n            entered: false,\n            requestClose: false,\n            persist: merger('persist'),\n            action: merger('action'),\n            content: merger('content'),\n            variant: merger('variant'),\n            anchorOrigin: merger('anchorOrigin'),\n            disableWindowBlurListener: merger('disableWindowBlurListener'),\n            autoHideDuration: merger('autoHideDuration'),\n            hideIconVariant: merger('hideIconVariant'),\n            TransitionComponent: merger('TransitionComponent'),\n            transitionDuration: merger('transitionDuration'),\n            TransitionProps: merger('TransitionProps', true),\n            iconVariant: merger('iconVariant', true),\n            style: merger('style', true),\n            SnackbarProps: merger('SnackbarProps', true),\n            className: clsx(this.props.className, options.className),\n        };\n\n        if (snack.persist) {\n            snack.autoHideDuration = undefined;\n        }\n\n        this.setState((state) => {\n            if ((preventDuplicate === undefined && this.props.preventDuplicate) || preventDuplicate) {\n                const compareFunction = (item: InternalSnack): boolean =>\n                    hasSpecifiedKey ? item.id === id : item.message === message;\n\n                const inQueue = state.queue.findIndex(compareFunction) > -1;\n                const inView = state.snacks.findIndex(compareFunction) > -1;\n                if (inQueue || inView) {\n                    return state;\n                }\n            }\n\n            return this.handleDisplaySnack({\n                ...state,\n                queue: [...state.queue, snack],\n            });\n        });\n\n        return id;\n    };\n\n    /**\n     * Reducer: Display snack if there's space for it. Otherwise, immediately\n     * begin dismissing the oldest message to start showing the new one.\n     */\n    handleDisplaySnack: Reducer = (state) => {\n        const { snacks } = state;\n        if (snacks.length >= this.maxSnack) {\n            return this.handleDismissOldest(state);\n        }\n        return this.processQueue(state);\n    };\n\n    /**\n     * Reducer: Display items (notifications) in the queue if there's space for them.\n     */\n    processQueue: Reducer = (state) => {\n        const { queue, snacks } = state;\n        if (queue.length > 0) {\n            return {\n                ...state,\n                snacks: [...snacks, queue[0]],\n                queue: queue.slice(1, queue.length),\n            };\n        }\n        return state;\n    };\n\n    /**\n     * Reducer: Hide oldest snackbar on the screen because there exists a new one which we have to display.\n     * (ignoring the one with 'persist' flag. i.e. explicitly told by user not to get dismissed).\n     *\n     * Note 1: If there is already a message leaving the screen, no new messages are dismissed.\n     * Note 2: If the oldest message has not yet entered the screen, only a request to close the\n     *         snackbar is made. Once it entered the screen, it will be immediately dismissed.\n     */\n    handleDismissOldest: Reducer = (state) => {\n        if (state.snacks.some((item) => !item.open || item.requestClose)) {\n            return state;\n        }\n\n        let popped = false;\n        let ignore = false;\n\n        const persistentCount = state.snacks.reduce(\n            (acc, current) => acc + (current.open && current.persist ? 1 : 0),\n            0\n        );\n\n        if (persistentCount === this.maxSnack) {\n            warning('NO_PERSIST_ALL');\n            ignore = true;\n        }\n\n        const snacks = state.snacks.map((item) => {\n            if (!popped && (!item.persist || ignore)) {\n                popped = true;\n\n                if (!item.entered) {\n                    return {\n                        ...item,\n                        requestClose: true,\n                    };\n                }\n\n                if (item.onClose) {\n                    item.onClose(null, 'maxsnack', item.id);\n                }\n\n                if (this.props.onClose) {\n                    this.props.onClose(null, 'maxsnack', item.id);\n                }\n\n                return {\n                    ...item,\n                    open: false,\n                };\n            }\n\n            return { ...item };\n        });\n\n        return { ...state, snacks };\n    };\n\n    /**\n     * Set the entered state of the snackbar with the given key.\n     */\n    handleEnteredSnack: TransitionHandlerProps['onEntered'] = (node, isAppearing, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleEnteredSnack Cannot be called with undefined key');\n        }\n\n        this.setState(({ snacks }) => ({\n            snacks: snacks.map((item) => (item.id === key ? { ...item, entered: true } : { ...item })),\n        }));\n    };\n\n    /**\n     * Hide a snackbar after its timeout.\n     */\n    handleCloseSnack: NonNullable<SharedProps['onClose']> = (event, reason, key) => {\n        // should not use createChainedFunction for onClose.\n        // because this.closeSnackbar called this function\n        if (this.props.onClose) {\n            this.props.onClose(event, reason, key);\n        }\n\n        const shouldCloseAll = key === undefined;\n\n        this.setState(({ snacks, queue }) => ({\n            snacks: snacks.map((item) => {\n                if (!shouldCloseAll && item.id !== key) {\n                    return { ...item };\n                }\n\n                return item.entered ? { ...item, open: false } : { ...item, requestClose: true };\n            }),\n            queue: queue.filter((item) => item.id !== key),\n        }));\n    };\n\n    /**\n     * Close snackbar with the given key\n     */\n    closeSnackbar: ProviderContext['closeSnackbar'] = (key) => {\n        // call individual snackbar onClose callback passed through options parameter\n        const toBeClosed = this.state.snacks.find((item) => item.id === key);\n        if (isDefined(key) && toBeClosed && toBeClosed.onClose) {\n            toBeClosed.onClose(null, 'instructed', key);\n        }\n\n        this.handleCloseSnack(null, 'instructed', key);\n    };\n\n    /**\n     * When we set open attribute of a snackbar to false (i.e. after we hide a snackbar),\n     * it leaves the screen and immediately after leaving animation is done, this method\n     * gets called. We remove the hidden snackbar from state and then display notifications\n     * waiting in the queue (if any). If after this process the queue is not empty, the\n     * oldest message is dismissed.\n     */\n    handleExitedSnack: TransitionHandlerProps['onExited'] = (node, key) => {\n        if (!isDefined(key)) {\n            throw new Error('handleExitedSnack Cannot be called with undefined key');\n        }\n\n        this.setState((state) => {\n            const newState = this.processQueue({\n                ...state,\n                snacks: state.snacks.filter((item) => item.id !== key),\n            });\n\n            if (newState.queue.length === 0) {\n                return newState;\n            }\n\n            return this.handleDismissOldest(newState);\n        });\n    };\n\n    render(): JSX.Element {\n        const { contextValue } = this.state;\n        const { domRoot, children, dense = false, Components = {}, classes } = this.props;\n\n        const categ = this.state.snacks.reduce<SnacksByPosition>((acc, current) => {\n            const category = originKeyExtractor(current.anchorOrigin);\n            const existingOfCategory = acc[category] || [];\n            return {\n                ...acc,\n                [category]: [...existingOfCategory, current],\n            };\n        }, {});\n\n        const snackbars = Object.keys(categ).map((origin) => {\n            const snacks = categ[origin];\n            const [nomineeSnack] = snacks;\n            return (\n                <SnackbarContainer\n                    key={origin}\n                    dense={dense}\n                    anchorOrigin={nomineeSnack.anchorOrigin}\n                    classes={classes}\n                >\n                    {snacks.map((snack) => (\n                        <SnackbarItem\n                            key={snack.id}\n                            snack={snack}\n                            classes={classes}\n                            Component={Components[snack.variant]}\n                            onClose={this.handleCloseSnack}\n                            onEnter={this.props.onEnter}\n                            onExit={this.props.onExit}\n                            onExited={createChainedFunction([this.handleExitedSnack, this.props.onExited], snack.id)}\n                            onEntered={createChainedFunction([this.handleEnteredSnack, this.props.onEntered], snack.id)}\n                        />\n                    ))}\n                </SnackbarContainer>\n            );\n        });\n\n        return (\n            <SnackbarContext.Provider value={contextValue}>\n                {children}\n                {domRoot ? createPortal(snackbars, domRoot) : snackbars}\n            </SnackbarContext.Provider>\n        );\n    }\n}\n\nexport default SnackbarProvider;\n","import { useContext } from 'react';\nimport SnackbarContext from './SnackbarContext';\nimport { ProviderContext } from './types';\n\nexport default (): ProviderContext => useContext(SnackbarContext);\n"]},"metadata":{},"sourceType":"module"}