{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveProps from '@mui/utils/resolveProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction DefaultPropsProvider(_ref) {\n  let {\n    value,\n    children\n  } = _ref;\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\n    value: value,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.object\n} : void 0;\n\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n\n  if (!theme || !theme.components || !theme.components[name]) {\n    return props;\n  }\n\n  const config = theme.components[name];\n\n  if (config.defaultProps) {\n    // compatible with v5 signature\n    return resolveProps(config.defaultProps, props);\n  }\n\n  if (!config.styleOverrides && !config.variants) {\n    // v6 signature, no property 'defaultProps'\n    return resolveProps(config, props);\n  }\n\n  return props;\n}\n\nexport function useDefaultProps(_ref2) {\n  let {\n    props,\n    name\n  } = _ref2;\n  const ctx = React.useContext(PropsContext);\n  return getThemeProps({\n    props,\n    name,\n    theme: {\n      components: ctx\n    }\n  });\n}\nexport default DefaultPropsProvider;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/system/DefaultPropsProvider/DefaultPropsProvider.js"],"names":["React","PropTypes","resolveProps","jsx","_jsx","PropsContext","createContext","undefined","DefaultPropsProvider","value","children","Provider","process","env","NODE_ENV","propTypes","node","object","getThemeProps","params","theme","name","props","components","config","defaultProps","styleOverrides","variants","useDefaultProps","ctx","useContext"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,MAAMC,YAAY,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoBC,SAApB,CAAlC;;AACA,SAASC,oBAAT,OAGG;AAAA,MAH2B;AAC5BC,IAAAA,KAD4B;AAE5BC,IAAAA;AAF4B,GAG3B;AACD,SAAO,aAAaN,IAAI,CAACC,YAAY,CAACM,QAAd,EAAwB;AAC9CF,IAAAA,KAAK,EAAEA,KADuC;AAE9CC,IAAAA,QAAQ,EAAEA;AAFoC,GAAxB,CAAxB;AAID;;AACDE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,oBAAoB,CAACO;AAAU;AAA/B,EAAwD;AAC9F;AACA;AACA;AACA;;AACA;AACF;AACA;AACEL,EAAAA,QAAQ,EAAET,SAAS,CAACe,IAR0E;;AAS9F;AACF;AACA;AACEP,EAAAA,KAAK,EAAER,SAAS,CAACgB;AAZ6E,CAAhG,GAaI,KAAK,CAbT;;AAcA,SAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA;AAHI,MAIFH,MAJJ;;AAKA,MAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACG,UAAjB,IAA+B,CAACH,KAAK,CAACG,UAAN,CAAiBF,IAAjB,CAApC,EAA4D;AAC1D,WAAOC,KAAP;AACD;;AACD,QAAME,MAAM,GAAGJ,KAAK,CAACG,UAAN,CAAiBF,IAAjB,CAAf;;AACA,MAAIG,MAAM,CAACC,YAAX,EAAyB;AACvB;AACA,WAAOvB,YAAY,CAACsB,MAAM,CAACC,YAAR,EAAsBH,KAAtB,CAAnB;AACD;;AACD,MAAI,CAACE,MAAM,CAACE,cAAR,IAA0B,CAACF,MAAM,CAACG,QAAtC,EAAgD;AAC9C;AACA,WAAOzB,YAAY,CAACsB,MAAD,EAASF,KAAT,CAAnB;AACD;;AACD,SAAOA,KAAP;AACD;;AACD,OAAO,SAASM,eAAT,QAGJ;AAAA,MAH6B;AAC9BN,IAAAA,KAD8B;AAE9BD,IAAAA;AAF8B,GAG7B;AACD,QAAMQ,GAAG,GAAG7B,KAAK,CAAC8B,UAAN,CAAiBzB,YAAjB,CAAZ;AACA,SAAOa,aAAa,CAAC;AACnBI,IAAAA,KADmB;AAEnBD,IAAAA,IAFmB;AAGnBD,IAAAA,KAAK,EAAE;AACLG,MAAAA,UAAU,EAAEM;AADP;AAHY,GAAD,CAApB;AAOD;AACD,eAAerB,oBAAf","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport resolveProps from '@mui/utils/resolveProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PropsContext = /*#__PURE__*/React.createContext(undefined);\nfunction DefaultPropsProvider({\n  value,\n  children\n}) {\n  return /*#__PURE__*/_jsx(PropsContext.Provider, {\n    value: value,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? DefaultPropsProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  value: PropTypes.object\n} : void 0;\nfunction getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name]) {\n    return props;\n  }\n  const config = theme.components[name];\n  if (config.defaultProps) {\n    // compatible with v5 signature\n    return resolveProps(config.defaultProps, props);\n  }\n  if (!config.styleOverrides && !config.variants) {\n    // v6 signature, no property 'defaultProps'\n    return resolveProps(config, props);\n  }\n  return props;\n}\nexport function useDefaultProps({\n  props,\n  name\n}) {\n  const ctx = React.useContext(PropsContext);\n  return getThemeProps({\n    props,\n    name,\n    theme: {\n      components: ctx\n    }\n  });\n}\nexport default DefaultPropsProvider;"]},"metadata":{},"sourceType":"module"}