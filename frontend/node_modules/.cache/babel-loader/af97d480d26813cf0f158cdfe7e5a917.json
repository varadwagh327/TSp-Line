{"ast":null,"code":"'use client';\n\nvar _span;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    color: (theme.vars || theme).palette.action.active,\n    variants: [{\n      props: {\n        variant: 'filled'\n      },\n      style: {\n        [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n          marginTop: 16\n        }\n      }\n    }, {\n      props: {\n        position: 'start'\n      },\n      style: {\n        marginRight: 8\n      }\n    }, {\n      props: {\n        position: 'end'\n      },\n      style: {\n        marginLeft: 8\n      }\n    }, {\n      props: {\n        disablePointerEvents: true\n      },\n      style: {\n        pointerEvents: 'none'\n      }\n    }]\n  };\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = { ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/InputAdornment/InputAdornment.js"],"names":["_span","React","PropTypes","clsx","composeClasses","capitalize","Typography","FormControlContext","useFormControl","styled","memoTheme","useDefaultProps","inputAdornmentClasses","getInputAdornmentUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","ownerState","root","position","disablePointerEvents","variant","useUtilityClasses","classes","hiddenLabel","size","slots","InputAdornmentRoot","name","slot","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","positionStart","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","forwardRef","inProps","ref","children","className","component","disableTypography","variantProp","other","muiFormControl","process","env","NODE_ENV","console","error","Provider","value","as","Fragment","propTypes","node","object","string","elementType","bool","oneOf","isRequired","sx","oneOfType","arrayOf","func"],"mappings":"AAAA;;AAEA,IAAIA,KAAJ;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,kBAAP,MAA+B,sCAA/B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,OAAOC,qBAAP,IAAgCC,6BAAhC,QAAqE,4BAArE;AACA,SAASC,GAAG,IAAIC,IAAhB,EAAsBC,IAAI,IAAIC,KAA9B,QAA2C,mBAA3C;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,QAAM;AACJC,IAAAA;AADI,MAEFF,KAFJ;AAGA,SAAO,CAACC,MAAM,CAACE,IAAR,EAAcF,MAAM,CAAE,WAAUf,UAAU,CAACgB,UAAU,CAACE,QAAZ,CAAsB,EAA5C,CAApB,EAAoEF,UAAU,CAACG,oBAAX,KAAoC,IAApC,IAA4CJ,MAAM,CAACI,oBAAvH,EAA6IJ,MAAM,CAACC,UAAU,CAACI,OAAZ,CAAnJ,CAAP;AACD,CALD;;AAMA,MAAMC,iBAAiB,GAAGL,UAAU,IAAI;AACtC,QAAM;AACJM,IAAAA,OADI;AAEJH,IAAAA,oBAFI;AAGJI,IAAAA,WAHI;AAIJL,IAAAA,QAJI;AAKJM,IAAAA,IALI;AAMJJ,IAAAA;AANI,MAOFJ,UAPJ;AAQA,QAAMS,KAAK,GAAG;AACZR,IAAAA,IAAI,EAAE,CAAC,MAAD,EAASE,oBAAoB,IAAI,sBAAjC,EAAyDD,QAAQ,IAAK,WAAUlB,UAAU,CAACkB,QAAD,CAAW,EAArG,EAAwGE,OAAxG,EAAiHG,WAAW,IAAI,aAAhI,EAA+IC,IAAI,IAAK,OAAMxB,UAAU,CAACwB,IAAD,CAAO,EAA/K;AADM,GAAd;AAGA,SAAOzB,cAAc,CAAC0B,KAAD,EAAQjB,6BAAR,EAAuCc,OAAvC,CAArB;AACD,CAbD;;AAcA,MAAMI,kBAAkB,GAAGtB,MAAM,CAAC,KAAD,EAAQ;AACvCuB,EAAAA,IAAI,EAAE,mBADiC;AAEvCC,EAAAA,IAAI,EAAE,MAFiC;AAGvCf,EAAAA;AAHuC,CAAR,CAAN,CAIxBR,SAAS,CAAC;AAAA,MAAC;AACZwB,IAAAA;AADY,GAAD;AAAA,SAEN;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,SAAS,EAAE,KAFN;AAGLC,IAAAA,UAAU,EAAE,QAHP;AAILC,IAAAA,UAAU,EAAE,QAJP;AAKLC,IAAAA,KAAK,EAAE,CAACL,KAAK,CAACM,IAAN,IAAcN,KAAf,EAAsBO,OAAtB,CAA8BC,MAA9B,CAAqCC,MALvC;AAMLC,IAAAA,QAAQ,EAAE,CAAC;AACTzB,MAAAA,KAAK,EAAE;AACLM,QAAAA,OAAO,EAAE;AADJ,OADE;AAIToB,MAAAA,KAAK,EAAE;AACL,SAAE,KAAIjC,qBAAqB,CAACkC,aAAc,UAASlC,qBAAqB,CAACgB,WAAY,GAArF,GAA0F;AACxFmB,UAAAA,SAAS,EAAE;AAD6E;AADrF;AAJE,KAAD,EASP;AACD5B,MAAAA,KAAK,EAAE;AACLI,QAAAA,QAAQ,EAAE;AADL,OADN;AAIDsB,MAAAA,KAAK,EAAE;AACLG,QAAAA,WAAW,EAAE;AADR;AAJN,KATO,EAgBP;AACD7B,MAAAA,KAAK,EAAE;AACLI,QAAAA,QAAQ,EAAE;AADL,OADN;AAIDsB,MAAAA,KAAK,EAAE;AACLI,QAAAA,UAAU,EAAE;AADP;AAJN,KAhBO,EAuBP;AACD9B,MAAAA,KAAK,EAAE;AACLK,QAAAA,oBAAoB,EAAE;AADjB,OADN;AAIDqB,MAAAA,KAAK,EAAE;AACLK,QAAAA,aAAa,EAAE;AADV;AAJN,KAvBO;AANL,GAFM;AAAA,CAAD,CAJe,CAA3B;AA4CA,MAAMC,cAAc,GAAG,aAAalD,KAAK,CAACmD,UAAN,CAAiB,SAASD,cAAT,CAAwBE,OAAxB,EAAiCC,GAAjC,EAAsC;AACzF,QAAMnC,KAAK,GAAGR,eAAe,CAAC;AAC5BQ,IAAAA,KAAK,EAAEkC,OADqB;AAE5BrB,IAAAA,IAAI,EAAE;AAFsB,GAAD,CAA7B;AAIA,QAAM;AACJuB,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAAS,GAAG,KAHR;AAIJjC,IAAAA,oBAAoB,GAAG,KAJnB;AAKJkC,IAAAA,iBAAiB,GAAG,KALhB;AAMJnC,IAAAA,QANI;AAOJE,IAAAA,OAAO,EAAEkC,WAPL;AAQJ,OAAGC;AARC,MASFzC,KATJ;AAUA,QAAM0C,cAAc,GAAGrD,cAAc,MAAM,EAA3C;AACA,MAAIiB,OAAO,GAAGkC,WAAd;;AACA,MAAIA,WAAW,IAAIE,cAAc,CAACpC,OAAlC,EAA2C;AACzC,QAAIqC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIL,WAAW,KAAKE,cAAc,CAACpC,OAAnC,EAA4C;AAC1CwC,QAAAA,OAAO,CAACC,KAAR,CAAc,+DAA+D,iCAA7E;AACD;AACF;AACF;;AACD,MAAIL,cAAc,IAAI,CAACpC,OAAvB,EAAgC;AAC9BA,IAAAA,OAAO,GAAGoC,cAAc,CAACpC,OAAzB;AACD;;AACD,QAAMJ,UAAU,GAAG,EACjB,GAAGF,KADc;AAEjBS,IAAAA,WAAW,EAAEiC,cAAc,CAACjC,WAFX;AAGjBC,IAAAA,IAAI,EAAEgC,cAAc,CAAChC,IAHJ;AAIjBL,IAAAA,oBAJiB;AAKjBD,IAAAA,QALiB;AAMjBE,IAAAA;AANiB,GAAnB;AAQA,QAAME,OAAO,GAAGD,iBAAiB,CAACL,UAAD,CAAjC;AACA,SAAO,aAAaN,IAAI,CAACR,kBAAkB,CAAC4D,QAApB,EAA8B;AACpDC,IAAAA,KAAK,EAAE,IAD6C;AAEpDb,IAAAA,QAAQ,EAAE,aAAaxC,IAAI,CAACgB,kBAAD,EAAqB;AAC9CsC,MAAAA,EAAE,EAAEZ,SAD0C;AAE9CpC,MAAAA,UAAU,EAAEA,UAFkC;AAG9CmC,MAAAA,SAAS,EAAErD,IAAI,CAACwB,OAAO,CAACL,IAAT,EAAekC,SAAf,CAH+B;AAI9CF,MAAAA,GAAG,EAAEA,GAJyC;AAK9C,SAAGM,KAL2C;AAM9CL,MAAAA,QAAQ,EAAE,OAAOA,QAAP,KAAoB,QAApB,IAAgC,CAACG,iBAAjC,GAAqD,aAAa3C,IAAI,CAACT,UAAD,EAAa;AAC3FiC,QAAAA,KAAK,EAAE,eADoF;AAE3FgB,QAAAA,QAAQ,EAAEA;AAFiF,OAAb,CAAtE,GAGL,aAAatC,KAAK,CAAChB,KAAK,CAACqE,QAAP,EAAiB;AACtCf,QAAAA,QAAQ,EAAE,CAAChC,QAAQ,KAAK,OAAb;AAAwB;AAAmFvB,QAAAA,KAAK,KAAKA,KAAK,GAAG,aAAae,IAAI,CAAC,MAAD,EAAS;AAChKyC,UAAAA,SAAS,EAAE,aADqJ;AAEhKD,UAAAA,QAAQ,EAAE;AAFsJ,SAAT,CAA9B,CAAhH,GAGJ,IAHG,EAGGA,QAHH;AAD4B,OAAjB;AATuB,KAArB;AAFyB,GAA9B,CAAxB;AAmBD,CAvDmC,CAApC;AAwDAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,cAAc,CAACoB;AAAU;AAAzB,EAAkD;AACxF;AACA;AACA;AACA;;AACA;AACF;AACA;AACEhB,EAAAA,QAAQ,EAAErD,SAAS,CAACsE,IARoE;;AASxF;AACF;AACA;AACE7C,EAAAA,OAAO,EAAEzB,SAAS,CAACuE,MAZqE;;AAaxF;AACF;AACA;AACEjB,EAAAA,SAAS,EAAEtD,SAAS,CAACwE,MAhBmE;;AAiBxF;AACF;AACA;AACA;AACEjB,EAAAA,SAAS,EAAEvD,SAAS,CAACyE,WArBmE;;AAsBxF;AACF;AACA;AACA;AACA;AACEnD,EAAAA,oBAAoB,EAAEtB,SAAS,CAAC0E,IA3BwD;;AA4BxF;AACF;AACA;AACA;AACElB,EAAAA,iBAAiB,EAAExD,SAAS,CAAC0E,IAhC2D;;AAiCxF;AACF;AACA;AACErD,EAAAA,QAAQ,EAAErB,SAAS,CAAC2E,KAAV,CAAgB,CAAC,KAAD,EAAQ,OAAR,CAAhB,EAAkCC,UApC4C;;AAqCxF;AACF;AACA;AACEC,EAAAA,EAAE,EAAE7E,SAAS,CAAC8E,SAAV,CAAoB,CAAC9E,SAAS,CAAC+E,OAAV,CAAkB/E,SAAS,CAAC8E,SAAV,CAAoB,CAAC9E,SAAS,CAACgF,IAAX,EAAiBhF,SAAS,CAACuE,MAA3B,EAAmCvE,SAAS,CAAC0E,IAA7C,CAApB,CAAlB,CAAD,EAA6F1E,SAAS,CAACgF,IAAvG,EAA6GhF,SAAS,CAACuE,MAAvH,CAApB,CAxCoF;;AAyCxF;AACF;AACA;AACA;AACA;AACEhD,EAAAA,OAAO,EAAEvB,SAAS,CAAC2E,KAAV,CAAgB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,CAAhB;AA9C+E,CAA1F,GA+CI,KAAK,CA/CT;AAgDA,eAAe1B,cAAf","sourcesContent":["'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"]},"metadata":{},"sourceType":"module"}