{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport LastPageIconDefault from \"../internal/svg-icons/LastPage.js\";\nimport FirstPageIconDefault from \"../internal/svg-icons/FirstPage.js\";\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    disabled = false,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  const FirstButton = slots.firstButton ?? IconButton;\n  const LastButton = slots.lastButton ?? IconButton;\n  const NextButton = slots.nextButton ?? IconButton;\n  const PreviousButton = slots.previousButton ?? IconButton;\n  const FirstButtonIcon = slots.firstButtonIcon ?? FirstPageIconDefault;\n  const LastButtonIcon = slots.lastButtonIcon ?? LastPageIconDefault;\n  const NextButtonIcon = slots.nextButtonIcon ?? KeyboardArrowRight;\n  const PreviousButtonIcon = slots.previousButtonIcon ?? KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...other,\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, {\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      ...firstButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, { ...slotProps.lastButtonIcon\n      }) : /*#__PURE__*/_jsx(FirstButtonIcon, { ...slotProps.firstButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(PreviousButtonSlot, {\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page),\n      ...(previousButtonSlotProps ?? backIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, { ...slotProps.nextButtonIcon\n      }) : /*#__PURE__*/_jsx(PreviousButtonIcon, { ...slotProps.previousButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(NextButtonSlot, {\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page),\n      ...(nextButtonSlotProps ?? nextIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, { ...slotProps.previousButtonIcon\n      }) : /*#__PURE__*/_jsx(NextButtonIcon, { ...slotProps.nextButtonIcon\n      })\n    }), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, {\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      ...lastButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, { ...slotProps.firstButtonIcon\n      }) : /*#__PURE__*/_jsx(LastButtonIcon, { ...slotProps.lastButtonIcon\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/TablePagination/TablePaginationActions.js"],"names":["React","PropTypes","useRtl","KeyboardArrowLeft","KeyboardArrowRight","IconButton","LastPageIconDefault","FirstPageIconDefault","jsx","_jsx","jsxs","_jsxs","TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","disabled","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","slots","slotProps","other","isRtl","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","FirstButton","firstButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","LastButtonIcon","lastButtonIcon","NextButtonIcon","nextButtonIcon","PreviousButtonIcon","previousButtonIcon","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","children","onClick","title","color","process","env","NODE_ENV","propTypes","object","number","isRequired","bool","func","shape","elementType"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport LastPageIconDefault from \"../internal/svg-icons/LastPage.js\";\nimport FirstPageIconDefault from \"../internal/svg-icons/FirstPage.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    disabled = false,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = slots.firstButton ?? IconButton;\n  const LastButton = slots.lastButton ?? IconButton;\n  const NextButton = slots.nextButton ?? IconButton;\n  const PreviousButton = slots.previousButton ?? IconButton;\n  const FirstButtonIcon = slots.firstButtonIcon ?? FirstPageIconDefault;\n  const LastButtonIcon = slots.lastButtonIcon ?? LastPageIconDefault;\n  const NextButtonIcon = slots.nextButtonIcon ?? KeyboardArrowRight;\n  const PreviousButtonIcon = slots.previousButtonIcon ?? KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...other,\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, {\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      ...firstButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      }) : /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(PreviousButtonSlot, {\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page),\n      ...(previousButtonSlotProps ?? backIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      }) : /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(NextButtonSlot, {\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page),\n      ...(nextButtonSlotProps ?? nextIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      }) : /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      })\n    }), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, {\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      ...lastButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      }) : /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;"]},"metadata":{},"sourceType":"module"}