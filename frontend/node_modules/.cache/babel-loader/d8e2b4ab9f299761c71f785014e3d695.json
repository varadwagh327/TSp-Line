{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\n\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\n\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\n\n\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, inputRef);\n  const heightRef = React.useRef(null);\n  const shadowRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input); // If input's width is shrunk and it's not visible, don't sync height.\n\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth); // The height of the inner content\n\n    const innerHeight = inputShallow.scrollHeight; // Measure height of a textarea with a single row\n\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight; // The height of the outer content\n\n    let outerHeight = innerHeight;\n\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n\n    outerHeight = Math.max(outerHeight, singleRowHeight); // Take the box sizing into account for applying this value as a style.\n\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const syncHeight = React.useCallback(() => {\n    const textareaStyles = calculateTextareaStyles();\n\n    if (isEmpty(textareaStyles)) {\n      return;\n    }\n\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    const input = inputRef.current;\n\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      input.style.height = `${outerHeightStyle}px`;\n    }\n\n    input.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  useEnhancedEffect(() => {\n    const handleResize = () => {\n      syncHeight();\n    }; // Workaround a \"ResizeObserver loop completed with undelivered notifications\" error\n    // in test.\n    // Note that we might need to use this logic in production per https://github.com/WICG/resize-observer/issues/38\n    // Also see https://github.com/mui/mui-x/issues/8733\n\n\n    let rAF;\n\n    const rAFHandleResize = () => {\n      cancelAnimationFrame(rAF);\n      rAF = requestAnimationFrame(() => {\n        handleResize();\n      });\n    };\n\n    const debounceHandleResize = debounce(handleResize);\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    containerWindow.addEventListener('resize', debounceHandleResize);\n    let resizeObserver;\n\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(process.env.NODE_ENV === 'test' ? rAFHandleResize : handleResize);\n      resizeObserver.observe(input);\n    }\n\n    return () => {\n      debounceHandleResize.clear();\n      cancelAnimationFrame(rAF);\n      containerWindow.removeEventListener('resize', debounceHandleResize);\n\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n\n    if (onChange) {\n      onChange(event);\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: { ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/TextareaAutosize/TextareaAutosize.js"],"names":["React","PropTypes","unstable_debounce","debounce","unstable_useForkRef","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","unstable_ownerWindow","ownerWindow","jsx","_jsx","jsxs","_jsxs","getStyleValue","value","parseInt","styles","shadow","visibility","position","overflow","height","top","left","transform","isEmpty","obj","undefined","Object","keys","length","outerHeightStyle","overflowing","TextareaAutosize","forwardRef","props","forwardedRef","onChange","maxRows","minRows","style","other","current","isControlled","useRef","inputRef","handleRef","heightRef","shadowRef","calculateTextareaStyles","useCallback","input","containerWindow","computedStyle","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","syncHeight","textareaStyles","handleResize","rAF","rAFHandleResize","cancelAnimationFrame","requestAnimationFrame","debounceHandleResize","addEventListener","resizeObserver","ResizeObserver","process","env","NODE_ENV","observe","clear","removeEventListener","disconnect","handleChange","event","Fragment","children","ref","rows","className","readOnly","tabIndex","propTypes","string","oneOfType","number","func","object","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflowing;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/material-ui/api/textarea-autosize/)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n    onChange,\n    maxRows,\n    minRows = 1,\n    style,\n    value,\n    ...other\n  } = props;\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, inputRef);\n  const heightRef = React.useRef(null);\n  const shadowRef = React.useRef(null);\n  const calculateTextareaStyles = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0,\n        overflowing: false\n      };\n    }\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = inputShallow.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflowing = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflowing\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const syncHeight = React.useCallback(() => {\n    const textareaStyles = calculateTextareaStyles();\n    if (isEmpty(textareaStyles)) {\n      return;\n    }\n    const outerHeightStyle = textareaStyles.outerHeightStyle;\n    const input = inputRef.current;\n    if (heightRef.current !== outerHeightStyle) {\n      heightRef.current = outerHeightStyle;\n      input.style.height = `${outerHeightStyle}px`;\n    }\n    input.style.overflow = textareaStyles.overflowing ? 'hidden' : '';\n  }, [calculateTextareaStyles]);\n  useEnhancedEffect(() => {\n    const handleResize = () => {\n      syncHeight();\n    };\n    // Workaround a \"ResizeObserver loop completed with undelivered notifications\" error\n    // in test.\n    // Note that we might need to use this logic in production per https://github.com/WICG/resize-observer/issues/38\n    // Also see https://github.com/mui/mui-x/issues/8733\n    let rAF;\n    const rAFHandleResize = () => {\n      cancelAnimationFrame(rAF);\n      rAF = requestAnimationFrame(() => {\n        handleResize();\n      });\n    };\n    const debounceHandleResize = debounce(handleResize);\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    containerWindow.addEventListener('resize', debounceHandleResize);\n    let resizeObserver;\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(process.env.NODE_ENV === 'test' ? rAFHandleResize : handleResize);\n      resizeObserver.observe(input);\n    }\n    return () => {\n      debounceHandleResize.clear();\n      cancelAnimationFrame(rAF);\n      containerWindow.removeEventListener('resize', debounceHandleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  }, [calculateTextareaStyles, syncHeight]);\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  const handleChange = event => {\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", {\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: style,\n      ...other\n    }), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: {\n        ...styles.shadow,\n        ...style,\n        paddingTop: 0,\n        paddingBottom: 0\n      }\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;"]},"metadata":{},"sourceType":"module"}