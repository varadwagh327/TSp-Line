{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemAvatarUtilityClass } from \"./listItemAvatarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\n\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})({\n  minWidth: 56,\n  flexShrink: 0,\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n});\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = { ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/ListItemAvatar/ListItemAvatar.js"],"names":["React","PropTypes","clsx","composeClasses","ListContext","styled","useDefaultProps","getListItemAvatarUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","alignItems","classes","slots","root","ListItemAvatarRoot","name","slot","overridesResolver","props","styles","alignItemsFlexStart","minWidth","flexShrink","variants","style","marginTop","ListItemAvatar","forwardRef","inProps","ref","className","other","context","useContext","process","env","NODE_ENV","propTypes","children","node","object","string","sx","oneOfType","arrayOf","func","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemAvatarUtilityClass } from \"./listItemAvatarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemAvatarUtilityClass, classes);\n};\nconst ListItemAvatarRoot = styled('div', {\n  name: 'MuiListItemAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})({\n  minWidth: 56,\n  flexShrink: 0,\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n});\n\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\nconst ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemAvatar'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemAvatarRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `Avatar`.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemAvatar;"]},"metadata":{},"sourceType":"module"}