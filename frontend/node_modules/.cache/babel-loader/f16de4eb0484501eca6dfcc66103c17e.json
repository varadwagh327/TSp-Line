{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssAnimation API](https://mui.com/base-ui/react-transitions/components-api/#css-animation)\n */\n\nfunction CssAnimation(props) {\n  const {\n    children,\n    className,\n    enterAnimationName,\n    enterClassName,\n    exitAnimationName,\n    exitClassName,\n    ...other\n  } = props;\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const hasExited = React.useRef(true);\n  React.useEffect(() => {\n    if (requestedEnter && hasExited.current) {\n      hasExited.current = false;\n    }\n  }, [requestedEnter]);\n  const handleAnimationEnd = React.useCallback(event => {\n    if (event.animationName === exitAnimationName) {\n      onExited();\n      hasExited.current = true;\n    } else if (event.animationName === enterAnimationName) {\n      hasExited.current = false;\n    }\n  }, [onExited, exitAnimationName, enterAnimationName]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    onAnimationEnd: handleAnimationEnd,\n    className: clsx(className, requestedEnter ? enterClassName : exitClassName),\n    ...other,\n    children: children\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? CssAnimation.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterAnimationName: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitAnimationName: PropTypes.string,\n  exitClassName: PropTypes.string\n} : void 0;\nexport { CssAnimation };","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/Transitions/CssAnimation.js"],"names":["React","PropTypes","clsx","useTransitionStateManager","jsx","_jsx","CssAnimation","props","children","className","enterAnimationName","enterClassName","exitAnimationName","exitClassName","other","requestedEnter","onExited","hasExited","useRef","useEffect","current","handleAnimationEnd","useCallback","event","animationName","onAnimationEnd","process","env","NODE_ENV","propTypes","node","string"],"mappings":"AAAA;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,yBAAT,QAA0C,kBAA1C;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,kBAHI;AAIJC,IAAAA,cAJI;AAKJC,IAAAA,iBALI;AAMJC,IAAAA,aANI;AAOJ,OAAGC;AAPC,MAQFP,KARJ;AASA,QAAM;AACJQ,IAAAA,cADI;AAEJC,IAAAA;AAFI,MAGFb,yBAAyB,EAH7B;AAIA,QAAMc,SAAS,GAAGjB,KAAK,CAACkB,MAAN,CAAa,IAAb,CAAlB;AACAlB,EAAAA,KAAK,CAACmB,SAAN,CAAgB,MAAM;AACpB,QAAIJ,cAAc,IAAIE,SAAS,CAACG,OAAhC,EAAyC;AACvCH,MAAAA,SAAS,CAACG,OAAV,GAAoB,KAApB;AACD;AACF,GAJD,EAIG,CAACL,cAAD,CAJH;AAKA,QAAMM,kBAAkB,GAAGrB,KAAK,CAACsB,WAAN,CAAkBC,KAAK,IAAI;AACpD,QAAIA,KAAK,CAACC,aAAN,KAAwBZ,iBAA5B,EAA+C;AAC7CI,MAAAA,QAAQ;AACRC,MAAAA,SAAS,CAACG,OAAV,GAAoB,IAApB;AACD,KAHD,MAGO,IAAIG,KAAK,CAACC,aAAN,KAAwBd,kBAA5B,EAAgD;AACrDO,MAAAA,SAAS,CAACG,OAAV,GAAoB,KAApB;AACD;AACF,GAP0B,EAOxB,CAACJ,QAAD,EAAWJ,iBAAX,EAA8BF,kBAA9B,CAPwB,CAA3B;AAQA,SAAO,aAAaL,IAAI,CAAC,KAAD,EAAQ;AAC9BoB,IAAAA,cAAc,EAAEJ,kBADc;AAE9BZ,IAAAA,SAAS,EAAEP,IAAI,CAACO,SAAD,EAAYM,cAAc,GAAGJ,cAAH,GAAoBE,aAA9C,CAFe;AAG9B,OAAGC,KAH2B;AAI9BN,IAAAA,QAAQ,EAAEA;AAJoB,GAAR,CAAxB;AAMD;;AACDkB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCtB,YAAY,CAACuB,SAAb,GAAyB;AAC/DrB,EAAAA,QAAQ,EAAEP,SAAS,CAAC6B,IAD2C;AAE/DrB,EAAAA,SAAS,EAAER,SAAS,CAAC8B,MAF0C;AAG/DrB,EAAAA,kBAAkB,EAAET,SAAS,CAAC8B,MAHiC;AAI/DpB,EAAAA,cAAc,EAAEV,SAAS,CAAC8B,MAJqC;AAK/DnB,EAAAA,iBAAiB,EAAEX,SAAS,CAAC8B,MALkC;AAM/DlB,EAAAA,aAAa,EAAEZ,SAAS,CAAC8B;AANsC,CAAjE,GAOI,KAAK,CAPT;AAQA,SAASzB,YAAT","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useTransitionStateManager } from '../useTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n *\n * Demos:\n *\n * - [Transitions](https://mui.com/base-ui/react-transitions/)\n *\n * API:\n *\n * - [CssAnimation API](https://mui.com/base-ui/react-transitions/components-api/#css-animation)\n */\nfunction CssAnimation(props) {\n  const {\n    children,\n    className,\n    enterAnimationName,\n    enterClassName,\n    exitAnimationName,\n    exitClassName,\n    ...other\n  } = props;\n  const {\n    requestedEnter,\n    onExited\n  } = useTransitionStateManager();\n  const hasExited = React.useRef(true);\n  React.useEffect(() => {\n    if (requestedEnter && hasExited.current) {\n      hasExited.current = false;\n    }\n  }, [requestedEnter]);\n  const handleAnimationEnd = React.useCallback(event => {\n    if (event.animationName === exitAnimationName) {\n      onExited();\n      hasExited.current = true;\n    } else if (event.animationName === enterAnimationName) {\n      hasExited.current = false;\n    }\n  }, [onExited, exitAnimationName, enterAnimationName]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    onAnimationEnd: handleAnimationEnd,\n    className: clsx(className, requestedEnter ? enterClassName : exitClassName),\n    ...other,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssAnimation.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  enterAnimationName: PropTypes.string,\n  enterClassName: PropTypes.string,\n  exitAnimationName: PropTypes.string,\n  exitClassName: PropTypes.string\n} : void 0;\nexport { CssAnimation };"]},"metadata":{},"sourceType":"module"}