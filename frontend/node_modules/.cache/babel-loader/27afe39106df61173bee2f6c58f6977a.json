{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType, refType } from '@mui/utils';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { useMenu } from '../useMenu';\nimport { MenuProvider } from '../useMenu/MenuProvider';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Unstable_Popup as Popup } from '../Unstable_Popup';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListActionTypes } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction useUtilityClasses(ownerState) {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', open && 'expanded'],\n    listbox: ['listbox', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuUtilityClass));\n}\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Menu API](https://mui.com/base-ui/react-menu/components-api/#menu)\n */\n\n\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(props, forwardedRef) {\n  const {\n    actions,\n    anchor: anchorProp,\n    children,\n    onItemsChange,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const {\n    contextValue,\n    getListboxProps,\n    dispatch,\n    open,\n    triggerElement\n  } = useMenu({\n    onItemsChange,\n    componentName: 'Menu'\n  });\n  const anchor = anchorProp ?? triggerElement;\n  React.useImperativeHandle(actions, () => ({\n    dispatch,\n    resetHighlight: () => dispatch({\n      type: ListActionTypes.resetHighlight,\n      event: null\n    })\n  }), [dispatch]);\n  const ownerState = { ...props,\n    open\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root ?? 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef,\n      role: undefined\n    },\n    className: classes.root,\n    ownerState\n  });\n  const Listbox = slots.listbox ?? 'ul';\n  const listboxProps = useSlotProps({\n    elementType: Listbox,\n    getSlotProps: getListboxProps,\n    externalSlotProps: slotProps.listbox,\n    className: classes.listbox,\n    ownerState\n  });\n\n  if (open === true && anchor == null) {\n    return /*#__PURE__*/_jsx(Root, { ...rootProps,\n      children: /*#__PURE__*/_jsx(Listbox, { ...listboxProps,\n        children: /*#__PURE__*/_jsx(MenuProvider, {\n          value: contextValue,\n          children: children\n        })\n      })\n    });\n  }\n\n  return /*#__PURE__*/_jsx(Popup, {\n    keepMounted: true,\n    ...rootProps,\n    open: open,\n    anchor: anchor,\n    slots: {\n      root: Root\n    },\n    children: /*#__PURE__*/_jsx(Listbox, { ...listboxProps,\n      children: /*#__PURE__*/_jsx(MenuProvider, {\n        value: contextValue,\n        children: children\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * A ref with imperative actions that can be performed on the menu.\n   */\n  actions: refType,\n\n  /**\n   * The element based on which the menu is positioned.\n   */\n  anchor: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.object, PropTypes.func]),\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Function called when the items displayed in the menu change.\n   */\n  onItemsChange: PropTypes.func,\n\n  /**\n   * The props used for each slot inside the Menu.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the Menu.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Menu };","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/Menu/Menu.js"],"names":["React","PropTypes","HTMLElementType","refType","getMenuUtilityClass","useMenu","MenuProvider","unstable_composeClasses","composeClasses","Unstable_Popup","Popup","useSlotProps","useClassNamesOverride","ListActionTypes","jsx","_jsx","useUtilityClasses","ownerState","open","slots","root","listbox","Menu","forwardRef","props","forwardedRef","actions","anchor","anchorProp","children","onItemsChange","slotProps","other","contextValue","getListboxProps","dispatch","triggerElement","componentName","useImperativeHandle","resetHighlight","type","event","classes","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","ref","role","undefined","className","Listbox","listboxProps","getSlotProps","value","keepMounted","process","env","NODE_ENV","propTypes","oneOfType","object","func","node","string","shape"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType, refType } from '@mui/utils';\nimport { getMenuUtilityClass } from './menuClasses';\nimport { useMenu } from '../useMenu';\nimport { MenuProvider } from '../useMenu/MenuProvider';\nimport { unstable_composeClasses as composeClasses } from '../composeClasses';\nimport { Unstable_Popup as Popup } from '../Unstable_Popup';\nimport { useSlotProps } from '../utils/useSlotProps';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { ListActionTypes } from '../useList';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction useUtilityClasses(ownerState) {\n  const {\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', open && 'expanded'],\n    listbox: ['listbox', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuUtilityClass));\n}\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [Menu API](https://mui.com/base-ui/react-menu/components-api/#menu)\n */\nconst Menu = /*#__PURE__*/React.forwardRef(function Menu(props, forwardedRef) {\n  const {\n    actions,\n    anchor: anchorProp,\n    children,\n    onItemsChange,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const {\n    contextValue,\n    getListboxProps,\n    dispatch,\n    open,\n    triggerElement\n  } = useMenu({\n    onItemsChange,\n    componentName: 'Menu'\n  });\n  const anchor = anchorProp ?? triggerElement;\n  React.useImperativeHandle(actions, () => ({\n    dispatch,\n    resetHighlight: () => dispatch({\n      type: ListActionTypes.resetHighlight,\n      event: null\n    })\n  }), [dispatch]);\n  const ownerState = {\n    ...props,\n    open\n  };\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root ?? 'div';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: slotProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref: forwardedRef,\n      role: undefined\n    },\n    className: classes.root,\n    ownerState\n  });\n  const Listbox = slots.listbox ?? 'ul';\n  const listboxProps = useSlotProps({\n    elementType: Listbox,\n    getSlotProps: getListboxProps,\n    externalSlotProps: slotProps.listbox,\n    className: classes.listbox,\n    ownerState\n  });\n  if (open === true && anchor == null) {\n    return /*#__PURE__*/_jsx(Root, {\n      ...rootProps,\n      children: /*#__PURE__*/_jsx(Listbox, {\n        ...listboxProps,\n        children: /*#__PURE__*/_jsx(MenuProvider, {\n          value: contextValue,\n          children: children\n        })\n      })\n    });\n  }\n  return /*#__PURE__*/_jsx(Popup, {\n    keepMounted: true,\n    ...rootProps,\n    open: open,\n    anchor: anchor,\n    slots: {\n      root: Root\n    },\n    children: /*#__PURE__*/_jsx(Listbox, {\n      ...listboxProps,\n      children: /*#__PURE__*/_jsx(MenuProvider, {\n        value: contextValue,\n        children: children\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Menu.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A ref with imperative actions that can be performed on the menu.\n   */\n  actions: refType,\n  /**\n   * The element based on which the menu is positioned.\n   */\n  anchor: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.object, PropTypes.func]),\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Function called when the items displayed in the menu change.\n   */\n  onItemsChange: PropTypes.func,\n  /**\n   * The props used for each slot inside the Menu.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    listbox: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Menu.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    listbox: PropTypes.elementType,\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport { Menu };"]},"metadata":{},"sourceType":"module"}