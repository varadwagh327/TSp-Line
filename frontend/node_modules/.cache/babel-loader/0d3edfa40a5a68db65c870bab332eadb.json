{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTimeout from '@mui/utils/useTimeout';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { duration } from \"../styles/createTransitions.js\";\nimport { getTransitionProps } from \"../transitions/utils.js\";\nimport { useForkRef } from \"../utils/index.js\";\nimport { getCollapseUtilityClass } from \"./collapseClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\n\nconst CollapseRoot = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    height: 0,\n    overflow: 'hidden',\n    transition: theme.transitions.create('height'),\n    variants: [{\n      props: {\n        orientation: 'horizontal'\n      },\n      style: {\n        height: 'auto',\n        width: 0,\n        transition: theme.transitions.create('width')\n      }\n    }, {\n      props: {\n        state: 'entered'\n      },\n      style: {\n        height: 'auto',\n        overflow: 'visible'\n      }\n    }, {\n      props: {\n        state: 'entered',\n        orientation: 'horizontal'\n      },\n      style: {\n        width: 'auto'\n      }\n    }, {\n      props: _ref2 => {\n        let {\n          ownerState\n        } = _ref2;\n        return ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px';\n      },\n      style: {\n        visibility: 'hidden'\n      }\n    }]\n  };\n}));\nconst CollapseWrapper = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\nconst CollapseWrapperInner = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})({\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/material-ui/react-stepper/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n  const {\n    addEndListener,\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    orientation,\n    collapsedSize: collapsedSizeProp\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const timer = useTimeout();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.start(autoTransitionDuration.current || 0, next);\n    }\n\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(TransitionComponent, {\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout,\n    ...other,\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, {\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: {\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize,\n        ...style\n      },\n      ref: handleRef,\n      ...childProps,\n      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`\n      // that might have been forwarded from the Transition component.\n      ownerState: { ...ownerState,\n        state\n      },\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        ownerState: { ...ownerState,\n          state\n        },\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          ownerState: { ...ownerState,\n            state\n          },\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\n\nif (Collapse) {\n  Collapse.muiSupportAuto = true;\n}\n\nexport default Collapse;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Collapse/Collapse.js"],"names":["React","clsx","PropTypes","Transition","useTimeout","elementTypeAcceptingRef","composeClasses","styled","useTheme","memoTheme","useDefaultProps","duration","getTransitionProps","useForkRef","getCollapseUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","orientation","classes","slots","root","entered","hidden","wrapper","wrapperInner","CollapseRoot","name","slot","overridesResolver","props","styles","state","in","collapsedSize","theme","height","overflow","transition","transitions","create","variants","style","width","visibility","CollapseWrapper","display","CollapseWrapperInner","Collapse","forwardRef","inProps","ref","addEndListener","children","className","collapsedSizeProp","component","easing","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","standard","TransitionComponent","other","timer","wrapperRef","useRef","autoTransitionDuration","isHorizontal","size","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","current","undefined","getWrapperSize","handleEnter","isAppearing","position","handleEntering","wrapperSize","transitionDuration","transitionTimingFunction","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","handleAddEndListener","next","start","childProps","as","process","env","NODE_ENV","propTypes","func","object","string","oneOfType","number","shape","enter","exit","bool","oneOf","sx","arrayOf","appear","muiSupportAuto"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport useTimeout from '@mui/utils/useTimeout';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { duration } from \"../styles/createTransitions.js\";\nimport { getTransitionProps } from \"../transitions/utils.js\";\nimport { useForkRef } from \"../utils/index.js\";\nimport { getCollapseUtilityClass } from \"./collapseClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    orientation,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `${orientation}`],\n    entered: ['entered'],\n    hidden: ['hidden'],\n    wrapper: ['wrapper', `${orientation}`],\n    wrapperInner: ['wrapperInner', `${orientation}`]\n  };\n  return composeClasses(slots, getCollapseUtilityClass, classes);\n};\nconst CollapseRoot = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.orientation], ownerState.state === 'entered' && styles.entered, ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px' && styles.hidden];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  height: 0,\n  overflow: 'hidden',\n  transition: theme.transitions.create('height'),\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      height: 'auto',\n      width: 0,\n      transition: theme.transitions.create('width')\n    }\n  }, {\n    props: {\n      state: 'entered'\n    },\n    style: {\n      height: 'auto',\n      overflow: 'visible'\n    }\n  }, {\n    props: {\n      state: 'entered',\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.state === 'exited' && !ownerState.in && ownerState.collapsedSize === '0px',\n    style: {\n      visibility: 'hidden'\n    }\n  }]\n})));\nconst CollapseWrapper = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => styles.wrapper\n})({\n  // Hack to get children with a negative margin to not falsify the height computation.\n  display: 'flex',\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\nconst CollapseWrapperInner = styled('div', {\n  name: 'MuiCollapse',\n  slot: 'WrapperInner',\n  overridesResolver: (props, styles) => styles.wrapperInner\n})({\n  width: '100%',\n  variants: [{\n    props: {\n      orientation: 'horizontal'\n    },\n    style: {\n      width: 'auto',\n      height: '100%'\n    }\n  }]\n});\n\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/material-ui/react-stepper/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCollapse'\n  });\n  const {\n    addEndListener,\n    children,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    orientation,\n    collapsedSize: collapsedSizeProp\n  };\n  const classes = useUtilityClasses(ownerState);\n  const theme = useTheme();\n  const timer = useTimeout();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation === 'horizontal';\n  const size = isHorizontal ? 'width' : 'height';\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current;\n\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n    node.style[size] = collapsedSize;\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'enter'\n    });\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = `${wrapperSize}px`;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration,\n      easing: transitionTimingFunction\n    } = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: 'exit'\n    });\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n    node.style[size] = collapsedSize;\n    node.style.transitionTimingFunction = transitionTimingFunction;\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n  const handleAddEndListener = next => {\n    if (timeout === 'auto') {\n      timer.start(autoTransitionDuration.current || 0, next);\n    }\n    if (addEndListener) {\n      // Old call signature before `react-transition-group` implemented `nodeRef`\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return /*#__PURE__*/_jsx(TransitionComponent, {\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout,\n    ...other,\n    children: (state, childProps) => /*#__PURE__*/_jsx(CollapseRoot, {\n      as: component,\n      className: clsx(classes.root, className, {\n        'entered': classes.entered,\n        'exited': !inProp && collapsedSize === '0px' && classes.hidden\n      }[state]),\n      style: {\n        [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize,\n        ...style\n      },\n      ref: handleRef,\n      ...childProps,\n      // `ownerState` is set after `childProps` to override any existing `ownerState` property in `childProps`\n      // that might have been forwarded from the Transition component.\n      ownerState: {\n        ...ownerState,\n        state\n      },\n      children: /*#__PURE__*/_jsx(CollapseWrapper, {\n        ownerState: {\n          ...ownerState,\n          state\n        },\n        className: classes.wrapper,\n        ref: wrapperRef,\n        children: /*#__PURE__*/_jsx(CollapseWrapperInner, {\n          ownerState: {\n            ...ownerState,\n            state\n          },\n          className: classes.wrapperInner,\n          children: children\n        })\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: PropTypes.func,\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: PropTypes.oneOfType([PropTypes.shape({\n    enter: PropTypes.string,\n    exit: PropTypes.string\n  }), PropTypes.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n  /**\n   * The transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nif (Collapse) {\n  Collapse.muiSupportAuto = true;\n}\nexport default Collapse;"]},"metadata":{},"sourceType":"module"}