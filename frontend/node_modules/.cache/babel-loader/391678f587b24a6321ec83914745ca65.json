{"ast":null,"code":"/**\n * Combines the two get*Props functions from Base UI hooks into one.\n * Useful when a hook uses two other hooks behind the scenes\n * (such as useSelect that depends on useList and useButton for its root slot).\n *\n * The resulting function will return the combined props.\n * They are merged from left to right, similarly to how Object.assign works.\n *\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\n * so its event handlers can call the previous handlers and act depending on its result.\n *\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\n */\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\n  return function getCombinedProps() {\n    let external = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const firstResult = { ...external,\n      ...getFirstProps(external)\n    };\n    const result = { ...firstResult,\n      ...getSecondProps(firstResult)\n    };\n    return result;\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/utils/combineHooksSlotProps.js"],"names":["combineHooksSlotProps","getFirstProps","getSecondProps","getCombinedProps","external","firstResult","result"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,qBAAT,CAA+BC,aAA/B,EAA8CC,cAA9C,EAA8D;AACnE,SAAO,SAASC,gBAAT,GAAyC;AAAA,QAAfC,QAAe,uEAAJ,EAAI;AAC9C,UAAMC,WAAW,GAAG,EAClB,GAAGD,QADe;AAElB,SAAGH,aAAa,CAACG,QAAD;AAFE,KAApB;AAIA,UAAME,MAAM,GAAG,EACb,GAAGD,WADU;AAEb,SAAGH,cAAc,CAACG,WAAD;AAFJ,KAAf;AAIA,WAAOC,MAAP;AACD,GAVD;AAWD","sourcesContent":["/**\n * Combines the two get*Props functions from Base UI hooks into one.\n * Useful when a hook uses two other hooks behind the scenes\n * (such as useSelect that depends on useList and useButton for its root slot).\n *\n * The resulting function will return the combined props.\n * They are merged from left to right, similarly to how Object.assign works.\n *\n * The getSecondProps function will receive the result of the getFirstProps function as its argument,\n * so its event handlers can call the previous handlers and act depending on its result.\n *\n * @param getFirstProps - A getter function that returns the props for the first slot. It receives the external event handlers as its argument.\n * @param getSecondProps - A getter function that returns the props for the second slot. It receives the result of the getFirstProps function as its argument.\n */\nexport function combineHooksSlotProps(getFirstProps, getSecondProps) {\n  return function getCombinedProps(external = {}) {\n    const firstResult = {\n      ...external,\n      ...getFirstProps(external)\n    };\n    const result = {\n      ...firstResult,\n      ...getSecondProps(firstResult)\n    };\n    return result;\n  };\n}"]},"metadata":{},"sourceType":"module"}