{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport MoreHorizIcon from \"../internal/svg-icons/MoreHoriz.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'flex',\n    marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n    marginRight: `calc(${theme.spacing(1)} * 0.5)`,\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700]\n    } : {\n      backgroundColor: theme.palette.grey[700],\n      color: theme.palette.grey[100]\n    }),\n    borderRadius: 2,\n    '&:hover, &:focus': { ...(theme.palette.mode === 'light' ? {\n        backgroundColor: theme.palette.grey[200]\n      } : {\n        backgroundColor: theme.palette.grey[600]\n      })\n    },\n    '&:active': {\n      boxShadow: theme.shadows[0],\n      ...(theme.palette.mode === 'light' ? {\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      } : {\n        backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n      })\n    }\n  };\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const {\n    slots = {},\n    slotProps = {},\n    ...otherProps\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, {\n      focusRipple: true,\n      ...otherProps,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        as: slots.CollapsedIcon,\n        ownerState: ownerState,\n        ...slotProps.collapsedIcon\n      })\n    })\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js"],"names":["React","PropTypes","emphasize","styled","memoTheme","MoreHorizIcon","ButtonBase","jsx","_jsx","BreadcrumbCollapsedButton","theme","display","marginLeft","spacing","marginRight","palette","mode","backgroundColor","grey","color","borderRadius","boxShadow","shadows","BreadcrumbCollapsedIcon","width","height","BreadcrumbCollapsed","props","slots","slotProps","otherProps","ownerState","children","focusRipple","as","CollapsedIcon","collapsedIcon","process","env","NODE_ENV","propTypes","shape","oneOfType","func","object","elementType","sx"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport MoreHorizIcon from \"../internal/svg-icons/MoreHoriz.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`,\n  ...(theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.grey[700]\n  } : {\n    backgroundColor: theme.palette.grey[700],\n    color: theme.palette.grey[100]\n  }),\n  borderRadius: 2,\n  '&:hover, &:focus': {\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: theme.palette.grey[200]\n    } : {\n      backgroundColor: theme.palette.grey[600]\n    })\n  },\n  '&:active': {\n    boxShadow: theme.shadows[0],\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n    } : {\n      backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n    })\n  }\n})));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n    slots = {},\n    slotProps = {},\n    ...otherProps\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, {\n      focusRipple: true,\n      ...otherProps,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        as: slots.CollapsedIcon,\n        ownerState: ownerState,\n        ...slotProps.collapsedIcon\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;"]},"metadata":{},"sourceType":"module"}