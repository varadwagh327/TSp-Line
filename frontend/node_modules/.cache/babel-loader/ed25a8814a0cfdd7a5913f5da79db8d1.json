{"ast":null,"code":"import { clamp } from '@mui/utils';\nexport function clampStepwise(val) {\n  let min = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MIN_SAFE_INTEGER;\n  let max = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_SAFE_INTEGER;\n  let stepProp = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : NaN;\n\n  if (Number.isNaN(stepProp)) {\n    return clamp(val, min, max);\n  }\n\n  const step = stepProp || 1;\n  const remainder = val % step;\n  const positivity = Math.sign(remainder);\n\n  if (Math.abs(remainder) > step / 2) {\n    return clamp(val + positivity * (step - Math.abs(remainder)), min, max);\n  }\n\n  return clamp(val - positivity * Math.abs(remainder), min, max);\n}\nexport function isNumber(val) {\n  return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/unstable_useNumberInput/utils.js"],"names":["clamp","clampStepwise","val","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","stepProp","NaN","isNaN","step","remainder","positivity","Math","sign","abs","isNumber","isFinite"],"mappings":"AAAA,SAASA,KAAT,QAAsB,YAAtB;AACA,OAAO,SAASC,aAAT,CAAuBC,GAAvB,EAA0G;AAAA,MAA9EC,GAA8E,uEAAxEC,MAAM,CAACC,gBAAiE;AAAA,MAA/CC,GAA+C,uEAAzCF,MAAM,CAACG,gBAAkC;AAAA,MAAhBC,QAAgB,uEAALC,GAAK;;AAC/G,MAAIL,MAAM,CAACM,KAAP,CAAaF,QAAb,CAAJ,EAA4B;AAC1B,WAAOR,KAAK,CAACE,GAAD,EAAMC,GAAN,EAAWG,GAAX,CAAZ;AACD;;AACD,QAAMK,IAAI,GAAGH,QAAQ,IAAI,CAAzB;AACA,QAAMI,SAAS,GAAGV,GAAG,GAAGS,IAAxB;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUH,SAAV,CAAnB;;AACA,MAAIE,IAAI,CAACE,GAAL,CAASJ,SAAT,IAAsBD,IAAI,GAAG,CAAjC,EAAoC;AAClC,WAAOX,KAAK,CAACE,GAAG,GAAGW,UAAU,IAAIF,IAAI,GAAGG,IAAI,CAACE,GAAL,CAASJ,SAAT,CAAX,CAAjB,EAAkDT,GAAlD,EAAuDG,GAAvD,CAAZ;AACD;;AACD,SAAON,KAAK,CAACE,GAAG,GAAGW,UAAU,GAAGC,IAAI,CAACE,GAAL,CAASJ,SAAT,CAApB,EAAyCT,GAAzC,EAA8CG,GAA9C,CAAZ;AACD;AACD,OAAO,SAASW,QAAT,CAAkBf,GAAlB,EAAuB;AAC5B,SAAO,OAAOA,GAAP,KAAe,QAAf,IAA2B,CAACE,MAAM,CAACM,KAAP,CAAaR,GAAb,CAA5B,IAAiDE,MAAM,CAACc,QAAP,CAAgBhB,GAAhB,CAAxD;AACD","sourcesContent":["import { clamp } from '@mui/utils';\nexport function clampStepwise(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER, stepProp = NaN) {\n  if (Number.isNaN(stepProp)) {\n    return clamp(val, min, max);\n  }\n  const step = stepProp || 1;\n  const remainder = val % step;\n  const positivity = Math.sign(remainder);\n  if (Math.abs(remainder) > step / 2) {\n    return clamp(val + positivity * (step - Math.abs(remainder)), min, max);\n  }\n  return clamp(val - positivity * Math.abs(remainder), min, max);\n}\nexport function isNumber(val) {\n  return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\n}"]},"metadata":{},"sourceType":"module"}