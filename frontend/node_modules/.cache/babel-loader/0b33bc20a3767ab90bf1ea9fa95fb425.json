{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible, visuallyHidden, clamp } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\nimport areArraysEqual from \"../utils/areArraysEqual.js\";\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\n\nfunction asc(a, b) {\n  return a - b;\n}\n\nfunction findClosest(values, currentValue) {\n  const {\n    index: closestIndex\n  } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n\n    return acc;\n  }, null) ?? {};\n  return closestIndex;\n}\n\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  } // The event is MouseEvent\n\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction setValueIndex(_ref) {\n  let {\n    values,\n    newValue,\n    index\n  } = _ref;\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\n\nfunction focusThumb(_ref2) {\n  let {\n    sliderRef,\n    activeIndex,\n    setActive\n  } = _ref2;\n  const doc = ownerDocument(sliderRef.current);\n\n  if (!sliderRef.current?.contains(doc.activeElement) || Number(doc?.activeElement?.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current?.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\n\nfunction areValuesEqual(newValue, oldValue) {\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\n    return newValue === oldValue;\n  }\n\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\n    return areArraysEqual(newValue, oldValue);\n  }\n\n  return false;\n}\n\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x; // TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\n\nlet cachedSupportsTouchActionNone;\n\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\n */\n\n\nexport function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    rootRef: ref,\n    scale = Identity,\n    step = 1,\n    shiftStep = 10,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(undefined); // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue ?? min,\n    name: 'Slider'\n  });\n\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event; // @ts-ignore The nativeEvent is function, not object\n\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => value == null ? min : clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef(null);\n  const handleRef = useForkRef(ref, sliderRef);\n\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n\n    if (isFocusVisible(event.target)) {\n      setFocusedThumbIndex(index);\n    }\n\n    setOpen(index);\n    otherHandlers?.onFocus?.(event);\n  };\n\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusedThumbIndex(-1);\n    }\n\n    setOpen(-1);\n    otherHandlers?.onBlur?.(event);\n  };\n\n  const changeValue = (event, valueInput) => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n    let newValue = valueInput;\n\n    if (marks && step == null) {\n      const maxMarksValue = marksValues[marksValues.length - 1];\n\n      if (newValue > maxMarksValue) {\n        newValue = maxMarksValue;\n      } else if (newValue < marksValues[0]) {\n        newValue = marksValues[0];\n      } else {\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n      }\n    }\n\n    newValue = clamp(newValue, min, max);\n\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index; // Potentially swap the index if needed.\n\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(event, newValue, index);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n\n  const createHandleHiddenInputKeyDown = otherHandlers => event => {\n    // The Shift + Up/Down keyboard shortcuts for moving the slider makes sense to be supported\n    // only if the step is defined. If the step is null, this means tha the marks are used for specifying the valid values.\n    if (step !== null) {\n      const index = Number(event.currentTarget.getAttribute('data-index'));\n      const value = values[index];\n      let newValue = null;\n\n      if ((event.key === 'ArrowLeft' || event.key === 'ArrowDown') && event.shiftKey || event.key === 'PageDown') {\n        newValue = Math.max(value - shiftStep, min);\n      } else if ((event.key === 'ArrowRight' || event.key === 'ArrowUp') && event.shiftKey || event.key === 'PageUp') {\n        newValue = Math.min(value + shiftStep, max);\n      }\n\n      if (newValue !== null) {\n        changeValue(event, newValue);\n        event.preventDefault();\n      }\n    }\n\n    otherHandlers?.onKeyDown?.(event);\n  };\n\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/p/sandbox/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      document.activeElement?.blur();\n    }\n  }, [disabled]);\n\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    otherHandlers.onChange?.(event); // @ts-ignore\n\n    changeValue(event, event.target.valueAsNumber);\n  };\n\n  const previousIndex = React.useRef(undefined);\n  let axis = orientation;\n\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n\n  const getFingerNewValue = _ref3 => {\n    let {\n      finger,\n      move = false\n    } = _ref3;\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n\n    if (axis.startsWith('vertical')) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n\n    if (axis.includes('-reverse')) {\n      percent = 1 - percent;\n    }\n\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      } // Bound the new value to the thumb's neighbours.\n\n\n      if (disableSwap) {\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      }); // Potentially swap the index if needed.\n\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (!finger) {\n      return;\n    }\n\n    moveCount.current += 1; // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n\n    if (!finger) {\n      return;\n    }\n\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n\n    touchId.current = undefined; // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    } // If touch-action: none; is not supported we need to prevent the scroll manually.\n\n\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n\n    const touch = nativeEvent.changedTouches[0];\n\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n\n    const finger = trackFinger(nativeEvent, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('touchend', handleTouchEnd, {\n      passive: true\n    });\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n\n  const createHandleMouseDown = otherHandlers => event => {\n    otherHandlers.onMouseDown?.(event);\n\n    if (disabled) {\n      return;\n    }\n\n    if (event.defaultPrevented) {\n      return;\n    } // Only handle left clicks\n\n\n    if (event.button !== 0) {\n      return;\n    } // Avoid text selection\n\n\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = { ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return { ...externalProps,\n      ref: handleRef,\n      ...mergedEventHandlers\n    };\n  };\n\n  const createHandleMouseOver = otherHandlers => event => {\n    otherHandlers.onMouseOver?.(event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n\n  const createHandleMouseLeave = otherHandlers => event => {\n    otherHandlers.onMouseLeave?.(event);\n    setOpen(-1);\n  };\n\n  const getThumbProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(externalHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(externalHandlers || {})\n    };\n    return { ...externalProps,\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n  };\n\n  const getThumbStyle = index => {\n    return {\n      // So the non active thumb doesn't show its label on hover.\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\n    };\n  };\n\n  const getHiddenInputProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(externalHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(externalHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(externalHandlers || {}),\n      onKeyDown: createHandleHiddenInputKeyDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = { ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: parameters.step === null && parameters.marks ? 'any' : parameters.step ?? undefined,\n      disabled,\n      ...externalProps,\n      ...mergedEventHandlers,\n      style: { ...visuallyHidden,\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      }\n    };\n  };\n\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    rootRef: handleRef,\n    trackLeap,\n    trackOffset,\n    values,\n    getThumbStyle\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Slider/useSlider.js"],"names":["React","unstable_ownerDocument","ownerDocument","unstable_useControlled","useControlled","unstable_useEnhancedEffect","useEnhancedEffect","unstable_useEventCallback","useEventCallback","unstable_useForkRef","useForkRef","unstable_isFocusVisible","isFocusVisible","visuallyHidden","clamp","extractEventHandlers","areArraysEqual","INTENTIONAL_DRAG_COUNT_THRESHOLD","asc","a","b","findClosest","values","currentValue","index","closestIndex","reduce","acc","value","distance","Math","abs","trackFinger","event","touchId","current","undefined","changedTouches","touchEvent","i","length","touch","identifier","x","clientX","y","clientY","valueToPercent","min","max","percentToValue","percent","getDecimalPrecision","num","parts","toExponential","split","matissaDecimalPart","parseInt","decimalPart","toString","roundValueToStep","step","nearest","round","Number","toFixed","setValueIndex","newValue","output","slice","sort","focusThumb","sliderRef","activeIndex","setActive","doc","contains","activeElement","getAttribute","querySelector","focus","areValuesEqual","oldValue","axisProps","horizontal","offset","left","leap","width","right","vertical","bottom","height","Identity","cachedSupportsTouchActionNone","doesSupportTouchActionNone","CSS","supports","useSlider","parameters","ariaLabelledby","defaultValue","disabled","disableSwap","isRtl","marks","marksProp","name","onChange","onChangeCommitted","orientation","rootRef","ref","scale","shiftStep","tabIndex","valueProp","useRef","active","useState","open","setOpen","dragging","setDragging","moveCount","valueDerived","setValueState","controlled","default","handleChange","thumbIndex","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","range","Array","isArray","map","floor","_","marksValues","mark","focusedThumbIndex","setFocusedThumbIndex","handleRef","createHandleHiddenInputFocus","otherHandlers","currentTarget","target","onFocus","createHandleHiddenInputBlur","onBlur","changeValue","valueInput","marksIndex","indexOf","maxMarksValue","Infinity","previousValue","createHandleHiddenInputKeyDown","key","shiftKey","preventDefault","onKeyDown","document","blur","createHandleHiddenInputChange","valueAsNumber","previousIndex","axis","getFingerNewValue","finger","move","slider","getBoundingClientRect","startsWith","includes","handleTouchMove","buttons","handleTouchEnd","stopListening","handleTouchStart","addEventListener","passive","useCallback","removeEventListener","useEffect","createHandleMouseDown","onMouseDown","defaultPrevented","button","trackOffset","trackLeap","getRootProps","externalProps","externalHandlers","ownEventHandlers","mergedEventHandlers","createHandleMouseOver","onMouseOver","createHandleMouseLeave","onMouseLeave","getThumbProps","getThumbStyle","pointerEvents","getHiddenInputProps","style","direction"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useControlled as useControlled, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible, visuallyHidden, clamp } from '@mui/utils';\nimport extractEventHandlers from '@mui/utils/extractEventHandlers';\nimport areArraysEqual from \"../utils/areArraysEqual.js\";\nconst INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;\nfunction asc(a, b) {\n  return a - b;\n}\nfunction findClosest(values, currentValue) {\n  const {\n    index: closestIndex\n  } = values.reduce((acc, value, index) => {\n    const distance = Math.abs(currentValue - value);\n    if (acc === null || distance < acc.distance || distance === acc.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return acc;\n  }, null) ?? {};\n  return closestIndex;\n}\nfunction trackFinger(event, touchId) {\n  // The event is TouchEvent\n  if (touchId.current !== undefined && event.changedTouches) {\n    const touchEvent = event;\n    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {\n      const touch = touchEvent.changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n\n  // The event is MouseEvent\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nexport function valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\nfunction getDecimalPrecision(num) {\n  // This handles the case when num is very small (0.00000001), js will turn this into 1e-8.\n  // When num is bigger than 1 or less than -1 it won't get converted to this notation so it's fine.\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split('e-');\n    const matissaDecimalPart = parts[0].split('.')[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\nfunction roundValueToStep(value, step, min) {\n  const nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\nfunction setValueIndex({\n  values,\n  newValue,\n  index\n}) {\n  const output = values.slice();\n  output[index] = newValue;\n  return output.sort(asc);\n}\nfunction focusThumb({\n  sliderRef,\n  activeIndex,\n  setActive\n}) {\n  const doc = ownerDocument(sliderRef.current);\n  if (!sliderRef.current?.contains(doc.activeElement) || Number(doc?.activeElement?.getAttribute('data-index')) !== activeIndex) {\n    sliderRef.current?.querySelector(`[type=\"range\"][data-index=\"${activeIndex}\"]`).focus();\n  }\n  if (setActive) {\n    setActive(activeIndex);\n  }\n}\nfunction areValuesEqual(newValue, oldValue) {\n  if (typeof newValue === 'number' && typeof oldValue === 'number') {\n    return newValue === oldValue;\n  }\n  if (typeof newValue === 'object' && typeof oldValue === 'object') {\n    return areArraysEqual(newValue, oldValue);\n  }\n  return false;\n}\nconst axisProps = {\n  horizontal: {\n    offset: percent => ({\n      left: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  'horizontal-reverse': {\n    offset: percent => ({\n      right: `${percent}%`\n    }),\n    leap: percent => ({\n      width: `${percent}%`\n    })\n  },\n  vertical: {\n    offset: percent => ({\n      bottom: `${percent}%`\n    }),\n    leap: percent => ({\n      height: `${percent}%`\n    })\n  }\n};\nexport const Identity = x => x;\n\n// TODO: remove support for Safari < 13.\n// https://caniuse.com/#search=touch-action\n//\n// Safari, on iOS, supports touch action since v13.\n// Over 80% of the iOS phones are compatible\n// in August 2020.\n// Utilizing the CSS.supports method to check if touch-action is supported.\n// Since CSS.supports is supported on all but Edge@12 and IE and touch-action\n// is supported on both Edge@12 and IE if CSS.supports is not available that means that\n// touch-action will be supported\nlet cachedSupportsTouchActionNone;\nfunction doesSupportTouchActionNone() {\n  if (cachedSupportsTouchActionNone === undefined) {\n    if (typeof CSS !== 'undefined' && typeof CSS.supports === 'function') {\n      cachedSupportsTouchActionNone = CSS.supports('touch-action', 'none');\n    } else {\n      cachedSupportsTouchActionNone = true;\n    }\n  }\n  return cachedSupportsTouchActionNone;\n}\n/**\n *\n * Demos:\n *\n * - [Slider](https://mui.com/base-ui/react-slider/#hook)\n *\n * API:\n *\n * - [useSlider API](https://mui.com/base-ui/react-slider/hooks-api/#use-slider)\n */\nexport function useSlider(parameters) {\n  const {\n    'aria-labelledby': ariaLabelledby,\n    defaultValue,\n    disabled = false,\n    disableSwap = false,\n    isRtl = false,\n    marks: marksProp = false,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onChangeCommitted,\n    orientation = 'horizontal',\n    rootRef: ref,\n    scale = Identity,\n    step = 1,\n    shiftStep = 10,\n    tabIndex,\n    value: valueProp\n  } = parameters;\n  const touchId = React.useRef(undefined);\n  // We can't use the :active browser pseudo-classes.\n  // - The active state isn't triggered when clicking on the rail.\n  // - The active state isn't transferred when inversing a range slider.\n  const [active, setActive] = React.useState(-1);\n  const [open, setOpen] = React.useState(-1);\n  const [dragging, setDragging] = React.useState(false);\n  const moveCount = React.useRef(0);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue ?? min,\n    name: 'Slider'\n  });\n  const handleChange = onChange && ((event, value, thumbIndex) => {\n    // Redefine target to allow name and value to be read.\n    // This allows seamless integration with the most popular form libraries.\n    // https://github.com/mui/material-ui/issues/13485#issuecomment-676048492\n    // Clone the event to not override `target` of the original event.\n    const nativeEvent = event.nativeEvent || event;\n    // @ts-ignore The nativeEvent is function, not object\n    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n    Object.defineProperty(clonedEvent, 'target', {\n      writable: true,\n      value: {\n        value,\n        name\n      }\n    });\n    onChange(clonedEvent, value, thumbIndex);\n  });\n  const range = Array.isArray(valueDerived);\n  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];\n  values = values.map(value => value == null ? min : clamp(value, min, max));\n  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_, index) => ({\n    value: min + step * index\n  })) : marksProp || [];\n  const marksValues = marks.map(mark => mark.value);\n  const [focusedThumbIndex, setFocusedThumbIndex] = React.useState(-1);\n  const sliderRef = React.useRef(null);\n  const handleRef = useForkRef(ref, sliderRef);\n  const createHandleHiddenInputFocus = otherHandlers => event => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    if (isFocusVisible(event.target)) {\n      setFocusedThumbIndex(index);\n    }\n    setOpen(index);\n    otherHandlers?.onFocus?.(event);\n  };\n  const createHandleHiddenInputBlur = otherHandlers => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusedThumbIndex(-1);\n    }\n    setOpen(-1);\n    otherHandlers?.onBlur?.(event);\n  };\n  const changeValue = (event, valueInput) => {\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    const value = values[index];\n    const marksIndex = marksValues.indexOf(value);\n    let newValue = valueInput;\n    if (marks && step == null) {\n      const maxMarksValue = marksValues[marksValues.length - 1];\n      if (newValue > maxMarksValue) {\n        newValue = maxMarksValue;\n      } else if (newValue < marksValues[0]) {\n        newValue = marksValues[0];\n      } else {\n        newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];\n      }\n    }\n    newValue = clamp(newValue, min, max);\n    if (range) {\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index\n      });\n      let activeIndex = index;\n\n      // Potentially swap the index if needed.\n      if (!disableSwap) {\n        activeIndex = newValue.indexOf(previousValue);\n      }\n      focusThumb({\n        sliderRef,\n        activeIndex\n      });\n    }\n    setValueState(newValue);\n    setFocusedThumbIndex(index);\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(event, newValue, index);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(event, newValue);\n    }\n  };\n  const createHandleHiddenInputKeyDown = otherHandlers => event => {\n    // The Shift + Up/Down keyboard shortcuts for moving the slider makes sense to be supported\n    // only if the step is defined. If the step is null, this means tha the marks are used for specifying the valid values.\n    if (step !== null) {\n      const index = Number(event.currentTarget.getAttribute('data-index'));\n      const value = values[index];\n      let newValue = null;\n      if ((event.key === 'ArrowLeft' || event.key === 'ArrowDown') && event.shiftKey || event.key === 'PageDown') {\n        newValue = Math.max(value - shiftStep, min);\n      } else if ((event.key === 'ArrowRight' || event.key === 'ArrowUp') && event.shiftKey || event.key === 'PageUp') {\n        newValue = Math.min(value + shiftStep, max);\n      }\n      if (newValue !== null) {\n        changeValue(event, newValue);\n        event.preventDefault();\n      }\n    }\n    otherHandlers?.onKeyDown?.(event);\n  };\n  useEnhancedEffect(() => {\n    if (disabled && sliderRef.current.contains(document.activeElement)) {\n      // This is necessary because Firefox and Safari will keep focus\n      // on a disabled element:\n      // https://codesandbox.io/p/sandbox/mui-pr-22247-forked-h151h?file=/src/App.js\n      // @ts-ignore\n      document.activeElement?.blur();\n    }\n  }, [disabled]);\n  if (disabled && active !== -1) {\n    setActive(-1);\n  }\n  if (disabled && focusedThumbIndex !== -1) {\n    setFocusedThumbIndex(-1);\n  }\n  const createHandleHiddenInputChange = otherHandlers => event => {\n    otherHandlers.onChange?.(event);\n    // @ts-ignore\n    changeValue(event, event.target.valueAsNumber);\n  };\n  const previousIndex = React.useRef(undefined);\n  let axis = orientation;\n  if (isRtl && orientation === 'horizontal') {\n    axis += '-reverse';\n  }\n  const getFingerNewValue = ({\n    finger,\n    move = false\n  }) => {\n    const {\n      current: slider\n    } = sliderRef;\n    const {\n      width,\n      height,\n      bottom,\n      left\n    } = slider.getBoundingClientRect();\n    let percent;\n    if (axis.startsWith('vertical')) {\n      percent = (bottom - finger.y) / height;\n    } else {\n      percent = (finger.x - left) / width;\n    }\n    if (axis.includes('-reverse')) {\n      percent = 1 - percent;\n    }\n    let newValue;\n    newValue = percentToValue(percent, min, max);\n    if (step) {\n      newValue = roundValueToStep(newValue, step, min);\n    } else {\n      const closestIndex = findClosest(marksValues, newValue);\n      newValue = marksValues[closestIndex];\n    }\n    newValue = clamp(newValue, min, max);\n    let activeIndex = 0;\n    if (range) {\n      if (!move) {\n        activeIndex = findClosest(values, newValue);\n      } else {\n        activeIndex = previousIndex.current;\n      }\n\n      // Bound the new value to the thumb's neighbours.\n      if (disableSwap) {\n        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);\n      }\n      const previousValue = newValue;\n      newValue = setValueIndex({\n        values,\n        newValue,\n        index: activeIndex\n      });\n\n      // Potentially swap the index if needed.\n      if (!(disableSwap && move)) {\n        activeIndex = newValue.indexOf(previousValue);\n        previousIndex.current = activeIndex;\n      }\n    }\n    return {\n      newValue,\n      activeIndex\n    };\n  };\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    if (!finger) {\n      return;\n    }\n    moveCount.current += 1;\n\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    // @ts-ignore buttons doesn't not exists on touch event\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    const {\n      newValue,\n      activeIndex\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    focusThumb({\n      sliderRef,\n      activeIndex,\n      setActive\n    });\n    setValueState(newValue);\n    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {\n      setDragging(true);\n    }\n    if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n      handleChange(nativeEvent, newValue, activeIndex);\n    }\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId);\n    setDragging(false);\n    if (!finger) {\n      return;\n    }\n    const {\n      newValue\n    } = getFingerNewValue({\n      finger,\n      move: true\n    });\n    setActive(-1);\n    if (nativeEvent.type === 'touchend') {\n      setOpen(-1);\n    }\n    if (onChangeCommitted) {\n      onChangeCommitted(nativeEvent, newValue);\n    }\n    touchId.current = undefined;\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n  });\n  const handleTouchStart = useEventCallback(nativeEvent => {\n    if (disabled) {\n      return;\n    }\n    // If touch-action: none; is not supported we need to prevent the scroll manually.\n    if (!doesSupportTouchActionNone()) {\n      nativeEvent.preventDefault();\n    }\n    const touch = nativeEvent.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const finger = trackFinger(nativeEvent, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(nativeEvent, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('touchmove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('touchend', handleTouchEnd, {\n      passive: true\n    });\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(sliderRef.current);\n    doc.removeEventListener('mousemove', handleTouchMove);\n    doc.removeEventListener('mouseup', handleTouchEnd);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n  }, [handleTouchEnd, handleTouchMove]);\n  React.useEffect(() => {\n    const {\n      current: slider\n    } = sliderRef;\n    slider.addEventListener('touchstart', handleTouchStart, {\n      passive: doesSupportTouchActionNone()\n    });\n    return () => {\n      slider.removeEventListener('touchstart', handleTouchStart);\n      stopListening();\n    };\n  }, [stopListening, handleTouchStart]);\n  React.useEffect(() => {\n    if (disabled) {\n      stopListening();\n    }\n  }, [disabled, stopListening]);\n  const createHandleMouseDown = otherHandlers => event => {\n    otherHandlers.onMouseDown?.(event);\n    if (disabled) {\n      return;\n    }\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    const finger = trackFinger(event, touchId);\n    if (finger !== false) {\n      const {\n        newValue,\n        activeIndex\n      } = getFingerNewValue({\n        finger\n      });\n      focusThumb({\n        sliderRef,\n        activeIndex,\n        setActive\n      });\n      setValueState(newValue);\n      if (handleChange && !areValuesEqual(newValue, valueDerived)) {\n        handleChange(event, newValue, activeIndex);\n      }\n    }\n    moveCount.current = 0;\n    const doc = ownerDocument(sliderRef.current);\n    doc.addEventListener('mousemove', handleTouchMove, {\n      passive: true\n    });\n    doc.addEventListener('mouseup', handleTouchEnd);\n  };\n  const trackOffset = valueToPercent(range ? values[0] : min, min, max);\n  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;\n  const getRootProps = (externalProps = {}) => {\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onMouseDown: createHandleMouseDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      ...externalProps,\n      ref: handleRef,\n      ...mergedEventHandlers\n    };\n  };\n  const createHandleMouseOver = otherHandlers => event => {\n    otherHandlers.onMouseOver?.(event);\n    const index = Number(event.currentTarget.getAttribute('data-index'));\n    setOpen(index);\n  };\n  const createHandleMouseLeave = otherHandlers => event => {\n    otherHandlers.onMouseLeave?.(event);\n    setOpen(-1);\n  };\n  const getThumbProps = (externalProps = {}) => {\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onMouseOver: createHandleMouseOver(externalHandlers || {}),\n      onMouseLeave: createHandleMouseLeave(externalHandlers || {})\n    };\n    return {\n      ...externalProps,\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n  };\n  const getThumbStyle = index => {\n    return {\n      // So the non active thumb doesn't show its label on hover.\n      pointerEvents: active !== -1 && active !== index ? 'none' : undefined\n    };\n  };\n  const getHiddenInputProps = (externalProps = {}) => {\n    const externalHandlers = extractEventHandlers(externalProps);\n    const ownEventHandlers = {\n      onChange: createHandleHiddenInputChange(externalHandlers || {}),\n      onFocus: createHandleHiddenInputFocus(externalHandlers || {}),\n      onBlur: createHandleHiddenInputBlur(externalHandlers || {}),\n      onKeyDown: createHandleHiddenInputKeyDown(externalHandlers || {})\n    };\n    const mergedEventHandlers = {\n      ...externalHandlers,\n      ...ownEventHandlers\n    };\n    return {\n      tabIndex,\n      'aria-labelledby': ariaLabelledby,\n      'aria-orientation': orientation,\n      'aria-valuemax': scale(max),\n      'aria-valuemin': scale(min),\n      name,\n      type: 'range',\n      min: parameters.min,\n      max: parameters.max,\n      step: parameters.step === null && parameters.marks ? 'any' : parameters.step ?? undefined,\n      disabled,\n      ...externalProps,\n      ...mergedEventHandlers,\n      style: {\n        ...visuallyHidden,\n        direction: isRtl ? 'rtl' : 'ltr',\n        // So that VoiceOver's focus indicator matches the thumb's dimensions\n        width: '100%',\n        height: '100%'\n      }\n    };\n  };\n  return {\n    active,\n    axis: axis,\n    axisProps,\n    dragging,\n    focusedThumbIndex,\n    getHiddenInputProps,\n    getRootProps,\n    getThumbProps,\n    marks: marks,\n    open,\n    range,\n    rootRef: handleRef,\n    trackLeap,\n    trackOffset,\n    values,\n    getThumbStyle\n  };\n}"]},"metadata":{},"sourceType":"module"}