{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getIconUtilityClass } from \"./iconClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\n\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    userSelect: 'none',\n    width: '1em',\n    height: '1em',\n    // Chrome fix for https://issues.chromium.org/issues/41375697\n    // To remove at some point.\n    overflow: 'hidden',\n    display: 'inline-block',\n    // allow overflow hidden to take action\n    textAlign: 'center',\n    // support non-square icon\n    flexShrink: 0,\n    variants: [{\n      props: {\n        fontSize: 'inherit'\n      },\n      style: {\n        fontSize: 'inherit'\n      }\n    }, {\n      props: {\n        fontSize: 'small'\n      },\n      style: {\n        fontSize: theme.typography.pxToRem(20)\n      }\n    }, {\n      props: {\n        fontSize: 'medium'\n      },\n      style: {\n        fontSize: theme.typography.pxToRem(24)\n      }\n    }, {\n      props: {\n        fontSize: 'large'\n      },\n      style: {\n        fontSize: theme.typography.pxToRem(36)\n      }\n    }, {\n      props: {\n        color: 'action'\n      },\n      style: {\n        color: (theme.vars || theme).palette.action.active\n      }\n    }, {\n      props: {\n        color: 'disabled'\n      },\n      style: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }, {\n      props: {\n        color: 'inherit'\n      },\n      style: {\n        color: undefined\n      }\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(_ref2 => {\n      let [color] = _ref2;\n      return {\n        props: {\n          color\n        },\n        style: {\n          color: (theme.vars || theme).palette[color].main\n        }\n      };\n    })]\n  };\n}));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n    baseClassName = 'material-icons',\n    className,\n    color = 'inherit',\n    component: Component = 'span',\n    fontSize = 'medium',\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, {\n    as: Component,\n    className: clsx(baseClassName, // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\nif (Icon) {\n  Icon.muiName = 'Icon';\n}\n\nexport default Icon;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Icon/Icon.js"],"names":["React","PropTypes","clsx","composeClasses","capitalize","styled","memoTheme","createSimplePaletteValueFilter","useDefaultProps","getIconUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","color","fontSize","classes","slots","root","IconRoot","name","slot","overridesResolver","props","styles","theme","userSelect","width","height","overflow","display","textAlign","flexShrink","variants","style","typography","pxToRem","vars","palette","action","active","disabled","undefined","Object","entries","filter","map","main","Icon","forwardRef","inProps","ref","baseClassName","className","component","Component","other","as","process","env","NODE_ENV","propTypes","string","children","node","object","oneOfType","oneOf","elementType","sx","arrayOf","func","bool","muiName"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getIconUtilityClass } from \"./iconClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    fontSize,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'inherit' && `color${capitalize(color)}`, `fontSize${capitalize(fontSize)}`]\n  };\n  return composeClasses(slots, getIconUtilityClass, classes);\n};\nconst IconRoot = styled('span', {\n  name: 'MuiIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'inherit' && styles[`color${capitalize(ownerState.color)}`], styles[`fontSize${capitalize(ownerState.fontSize)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  userSelect: 'none',\n  width: '1em',\n  height: '1em',\n  // Chrome fix for https://issues.chromium.org/issues/41375697\n  // To remove at some point.\n  overflow: 'hidden',\n  display: 'inline-block',\n  // allow overflow hidden to take action\n  textAlign: 'center',\n  // support non-square icon\n  flexShrink: 0,\n  variants: [{\n    props: {\n      fontSize: 'inherit'\n    },\n    style: {\n      fontSize: 'inherit'\n    }\n  }, {\n    props: {\n      fontSize: 'small'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(20)\n    }\n  }, {\n    props: {\n      fontSize: 'medium'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(24)\n    }\n  }, {\n    props: {\n      fontSize: 'large'\n    },\n    style: {\n      fontSize: theme.typography.pxToRem(36)\n    }\n  }, {\n    props: {\n      color: 'action'\n    },\n    style: {\n      color: (theme.vars || theme).palette.action.active\n    }\n  }, {\n    props: {\n      color: 'disabled'\n    },\n    style: {\n      color: (theme.vars || theme).palette.action.disabled\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      color: undefined\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst Icon = /*#__PURE__*/React.forwardRef(function Icon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiIcon'\n  });\n  const {\n    baseClassName = 'material-icons',\n    className,\n    color = 'inherit',\n    component: Component = 'span',\n    fontSize = 'medium',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    baseClassName,\n    color,\n    component: Component,\n    fontSize\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(IconRoot, {\n    as: Component,\n    className: clsx(baseClassName,\n    // Prevent the translation of the text content.\n    // The font relies on the exact text content to render the icon.\n    'notranslate', classes.root, className),\n    ownerState: ownerState,\n    \"aria-hidden\": true,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Icon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The base class applied to the icon. Defaults to 'material-icons', but can be changed to any\n   * other base class that suits the icon font you're using (for example material-icons-rounded, fas, etc).\n   * @default 'material-icons'\n   */\n  baseClassName: PropTypes.string,\n  /**\n   * The name of the icon font ligature.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'inherit'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'action', 'disabled', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   * @default 'medium'\n   */\n  fontSize: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'large', 'medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nif (Icon) {\n  Icon.muiName = 'Icon';\n}\nexport default Icon;"]},"metadata":{},"sourceType":"module"}