{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    margin: 0,\n    variants: [{\n      props: {\n        variant: 'inherit'\n      },\n      style: {\n        // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n        font: 'inherit',\n        lineHeight: 'inherit',\n        letterSpacing: 'inherit'\n      }\n    }, ...Object.entries(theme.typography).filter(_ref2 => {\n      let [variant, value] = _ref2;\n      return variant !== 'inherit' && value && typeof value === 'object';\n    }).map(_ref3 => {\n      let [variant, value] = _ref3;\n      return {\n        props: {\n          variant\n        },\n        style: value\n      };\n    }), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(_ref4 => {\n      let [color] = _ref4;\n      return {\n        props: {\n          color\n        },\n        style: {\n          color: (theme.vars || theme).palette[color].main\n        }\n      };\n    }), ...Object.entries(theme.palette?.text || {}).filter(_ref5 => {\n      let [, value] = _ref5;\n      return typeof value === 'string';\n    }).map(_ref6 => {\n      let [color] = _ref6;\n      return {\n        props: {\n          color: `text${capitalize(color)}`\n        },\n        style: {\n          color: (theme.vars || theme).palette.text[color]\n        }\n      };\n    }), {\n      props: _ref7 => {\n        let {\n          ownerState\n        } = _ref7;\n        return ownerState.align !== 'inherit';\n      },\n      style: {\n        textAlign: 'var(--Typography-textAlign)'\n      }\n    }, {\n      props: _ref8 => {\n        let {\n          ownerState\n        } = _ref8;\n        return ownerState.noWrap;\n      },\n      style: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n      }\n    }, {\n      props: _ref9 => {\n        let {\n          ownerState\n        } = _ref9;\n        return ownerState.gutterBottom;\n      },\n      style: {\n        marginBottom: '0.35em'\n      }\n    }, {\n      props: _ref10 => {\n        let {\n          ownerState\n        } = _ref10;\n        return ownerState.paragraph;\n      },\n      style: {\n        marginBottom: 16\n      }\n    }]\n  };\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color]; // TODO: Remove `extendSxProp` in v7\n\n  const props = extendSxProp({ ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: { ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Typography/Typography.js"],"names":["React","PropTypes","clsx","composeClasses","styled","internal_createExtendSxProp","memoTheme","useDefaultProps","capitalize","createSimplePaletteValueFilter","getTypographyUtilityClass","jsx","_jsx","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","extendSxProp","useUtilityClasses","ownerState","align","gutterBottom","noWrap","paragraph","variant","classes","slots","root","TypographyRoot","name","slot","overridesResolver","props","styles","theme","margin","variants","style","font","lineHeight","letterSpacing","Object","entries","typography","filter","value","map","palette","color","vars","main","text","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","Typography","forwardRef","inProps","ref","themeProps","isSxColor","className","component","variantMapping","other","Component","as","process","env","NODE_ENV","propTypes","oneOf","children","node","object","string","oneOfType","elementType","bool","sx","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled, internal_createExtendSxProp } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getTypographyUtilityClass } from \"./typographyClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst extendSxProp = internal_createExtendSxProp();\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  variants: [{\n    props: {\n      variant: 'inherit'\n    },\n    style: {\n      // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n      font: 'inherit',\n      lineHeight: 'inherit',\n      letterSpacing: 'inherit'\n    }\n  }, ...Object.entries(theme.typography).filter(([variant, value]) => variant !== 'inherit' && value && typeof value === 'object').map(([variant, value]) => ({\n    props: {\n      variant\n    },\n    style: value\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  })), ...Object.entries(theme.palette?.text || {}).filter(([, value]) => typeof value === 'string').map(([color]) => ({\n    props: {\n      color: `text${capitalize(color)}`\n    },\n    style: {\n      color: (theme.vars || theme).palette.text[color]\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.align !== 'inherit',\n    style: {\n      textAlign: 'var(--Typography-textAlign)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.noWrap,\n    style: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.gutterBottom,\n    style: {\n      marginBottom: '0.35em'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.paragraph,\n    style: {\n      marginBottom: 16\n    }\n  }]\n})));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const {\n    color,\n    ...themeProps\n  } = useDefaultProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const isSxColor = !v6Colors[color];\n  // TODO: Remove `extendSxProp` in v7\n  const props = extendSxProp({\n    ...themeProps,\n    ...(isSxColor && {\n      color\n    })\n  });\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  };\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, {\n    as: Component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    style: {\n      ...(align !== 'inherit' && {\n        '--Typography-textAlign': align\n      }),\n      ...other.style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   * @deprecated Use the `component` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"]},"metadata":{},"sourceType":"module"}