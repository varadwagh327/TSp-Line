{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return { ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    color: (theme.vars || theme).palette.text.secondary,\n    variants: [{\n      props: {\n        color: 'default',\n        disableRipple: false\n      },\n      style: {\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n        }\n      }\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(_ref2 => {\n      let [color] = _ref2;\n      return {\n        props: {\n          color,\n          disableRipple: false\n        },\n        style: {\n          '&:hover': {\n            backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n          }\n        }\n      };\n    }), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(_ref3 => {\n      let [color] = _ref3;\n      return {\n        props: {\n          color\n        },\n        style: {\n          [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n            color: (theme.vars || theme).palette[color].main\n          },\n          [`&.${checkboxClasses.disabled}`]: {\n            color: (theme.vars || theme).palette.action.disabled\n          }\n        }\n      };\n    }), {\n      // Should be last to override other colors\n      props: {\n        disableRipple: false\n      },\n      style: {\n        // Reset on touch devices, it doesn't add specificity\n        '&:hover': {\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      }\n    }]\n  };\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = { ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Checkbox/Checkbox.js"],"names":["React","PropTypes","clsx","refType","composeClasses","alpha","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","IndeterminateCheckBoxIcon","capitalize","rootShouldForwardProp","checkboxClasses","getCheckboxUtilityClass","styled","memoTheme","createSimplePaletteValueFilter","useDefaultProps","jsx","_jsx","useUtilityClasses","ownerState","classes","indeterminate","color","size","slots","root","composedClasses","CheckboxRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","theme","vars","palette","text","secondary","variants","disableRipple","style","backgroundColor","action","activeChannel","hoverOpacity","active","Object","entries","filter","map","mainChannel","main","checked","disabled","defaultCheckedIcon","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","inProps","ref","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","className","other","type","cloneElement","fontSize","process","env","NODE_ENV","propTypes","bool","node","object","string","oneOfType","oneOf","defaultChecked","id","inputRef","onChange","func","required","sx","arrayOf","value","any"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}