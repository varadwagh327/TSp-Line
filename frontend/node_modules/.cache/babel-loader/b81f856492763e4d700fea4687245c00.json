{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\"; // TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    } // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n\n\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n\n    const queryList = matchMedia(query);\n\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n} // See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\n\n\nconst safeReact = { ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\n\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\n\nexport default function useMediaQuery(queryInput) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const theme = useTheme(); // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n\n  return match;\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/system/useMediaQuery/useMediaQuery.js"],"names":["React","useEnhancedEffect","getThemeProps","useTheme","useMediaQueryOld","query","defaultMatches","matchMedia","ssrMatchMedia","noSsr","match","setMatch","useState","matches","undefined","queryList","updateMatch","addEventListener","removeEventListener","safeReact","maybeReactUseSyncExternalStore","useSyncExternalStore","useMediaQueryNew","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","getSnapshot","subscribe","mediaQueryList","notify","useMediaQuery","queryInput","options","theme","supportMatchMedia","window","name","props","process","env","NODE_ENV","console","error","join","replace","useMediaQueryImplementation","useDebugValue"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { getThemeProps } from \"../useThemeProps/index.js\";\nimport useTheme from \"../useThemeWithoutDefault/index.js\";\n// TODO React 17: Remove `useMediaQueryOld` once React 17 support is removed\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      setMatch(queryList.matches);\n    };\n    updateMatch();\n    queryList.addEventListener('change', updateMatch);\n    return () => {\n      queryList.removeEventListener('change', updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// See https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379 for why\nconst safeReact = {\n  ...React\n};\nconst maybeReactUseSyncExternalStore = safeReact.useSyncExternalStore;\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      mediaQueryList.addEventListener('change', notify);\n      return () => {\n        mediaQueryList.removeEventListener('change', notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}"]},"metadata":{},"sourceType":"module"}