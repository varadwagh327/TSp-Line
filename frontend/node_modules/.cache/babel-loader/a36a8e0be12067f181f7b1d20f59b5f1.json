{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport FormLabel, { formLabelClasses } from \"../FormLabel/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getInputLabelUtilityClasses } from \"./inputLabelClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size && size !== 'normal' && `size${capitalize(size)}`, variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return { ...classes,\n    // forward the focused, disabled, etc. classes to the FormLabel\n    ...composedClasses\n  };\n};\n\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, ownerState.focused && styles.focused, styles[ownerState.variant]];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    display: 'block',\n    transformOrigin: 'top left',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    maxWidth: '100%',\n    variants: [{\n      props: _ref2 => {\n        let {\n          ownerState\n        } = _ref2;\n        return ownerState.formControl;\n      },\n      style: {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        // slight alteration to spec spacing to match visual spec result\n        transform: 'translate(0, 20px) scale(1)'\n      }\n    }, {\n      props: {\n        size: 'small'\n      },\n      style: {\n        // Compensation for the `Input.inputSizeSmall` style.\n        transform: 'translate(0, 17px) scale(1)'\n      }\n    }, {\n      props: _ref3 => {\n        let {\n          ownerState\n        } = _ref3;\n        return ownerState.shrink;\n      },\n      style: {\n        transform: 'translate(0, -1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n        maxWidth: '133%'\n      }\n    }, {\n      props: _ref4 => {\n        let {\n          ownerState\n        } = _ref4;\n        return !ownerState.disableAnimation;\n      },\n      style: {\n        transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n          duration: theme.transitions.duration.shorter,\n          easing: theme.transitions.easing.easeOut\n        })\n      }\n    }, {\n      props: {\n        variant: 'filled'\n      },\n      style: {\n        // Chrome's autofill feature gives the input field a yellow background.\n        // Since the input field is behind the label in the HTML tree,\n        // the input field is drawn last and hides the label with an opaque background color.\n        // zIndex: 1 will raise the label above opaque background-colors of input.\n        zIndex: 1,\n        pointerEvents: 'none',\n        transform: 'translate(12px, 16px) scale(1)',\n        maxWidth: 'calc(100% - 24px)'\n      }\n    }, {\n      props: {\n        variant: 'filled',\n        size: 'small'\n      },\n      style: {\n        transform: 'translate(12px, 13px) scale(1)'\n      }\n    }, {\n      props: _ref5 => {\n        let {\n          variant,\n          ownerState\n        } = _ref5;\n        return variant === 'filled' && ownerState.shrink;\n      },\n      style: {\n        userSelect: 'none',\n        pointerEvents: 'auto',\n        transform: 'translate(12px, 7px) scale(0.75)',\n        maxWidth: 'calc(133% - 24px)'\n      }\n    }, {\n      props: _ref6 => {\n        let {\n          variant,\n          ownerState,\n          size\n        } = _ref6;\n        return variant === 'filled' && ownerState.shrink && size === 'small';\n      },\n      style: {\n        transform: 'translate(12px, 4px) scale(0.75)'\n      }\n    }, {\n      props: {\n        variant: 'outlined'\n      },\n      style: {\n        // see comment above on filled.zIndex\n        zIndex: 1,\n        pointerEvents: 'none',\n        transform: 'translate(14px, 16px) scale(1)',\n        maxWidth: 'calc(100% - 24px)'\n      }\n    }, {\n      props: {\n        variant: 'outlined',\n        size: 'small'\n      },\n      style: {\n        transform: 'translate(14px, 9px) scale(1)'\n      }\n    }, {\n      props: _ref7 => {\n        let {\n          variant,\n          ownerState\n        } = _ref7;\n        return variant === 'outlined' && ownerState.shrink;\n      },\n      style: {\n        userSelect: 'none',\n        pointerEvents: 'auto',\n        // Theoretically, we should have (8+5)*2/0.75 = 34px\n        // but it feels a better when it bleeds a bit on the left, so 32px.\n        maxWidth: 'calc(133% - 32px)',\n        transform: 'translate(14px, -9px) scale(0.75)'\n      }\n    }]\n  };\n}));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n    disableAnimation = false,\n    margin,\n    shrink: shrinkProp,\n    variant,\n    className,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required', 'focused']\n  });\n  const ownerState = { ...props,\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required,\n    focused: fcs.focused\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, {\n    \"data-shrink\": shrink,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/InputLabel/InputLabel.js"],"names":["React","PropTypes","composeClasses","clsx","formControlState","useFormControl","FormLabel","formLabelClasses","capitalize","rootShouldForwardProp","styled","memoTheme","useDefaultProps","getInputLabelUtilityClasses","jsx","_jsx","useUtilityClasses","ownerState","classes","formControl","size","shrink","disableAnimation","variant","required","slots","root","asterisk","composedClasses","InputLabelRoot","shouldForwardProp","prop","name","slot","overridesResolver","props","styles","sizeSmall","animated","focused","theme","display","transformOrigin","whiteSpace","overflow","textOverflow","maxWidth","variants","style","position","left","top","transform","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","userSelect","InputLabel","forwardRef","inProps","ref","margin","shrinkProp","className","other","muiFormControl","filled","adornedStart","fcs","states","process","env","NODE_ENV","propTypes","children","node","object","string","color","oneOfType","oneOf","bool","disabled","error","sx","arrayOf","func"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport FormLabel, { formLabelClasses } from \"../FormLabel/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getInputLabelUtilityClasses } from \"./inputLabelClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    formControl,\n    size,\n    shrink,\n    disableAnimation,\n    variant,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', formControl && 'formControl', !disableAnimation && 'animated', shrink && 'shrink', size && size !== 'normal' && `size${capitalize(size)}`, variant],\n    asterisk: [required && 'asterisk']\n  };\n  const composedClasses = composeClasses(slots, getInputLabelUtilityClasses, classes);\n  return {\n    ...classes,\n    // forward the focused, disabled, etc. classes to the FormLabel\n    ...composedClasses\n  };\n};\nconst InputLabelRoot = styled(FormLabel, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiInputLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formLabelClasses.asterisk}`]: styles.asterisk\n    }, styles.root, ownerState.formControl && styles.formControl, ownerState.size === 'small' && styles.sizeSmall, ownerState.shrink && styles.shrink, !ownerState.disableAnimation && styles.animated, ownerState.focused && styles.focused, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'block',\n  transformOrigin: 'top left',\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  maxWidth: '100%',\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.formControl,\n    style: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 20px) scale(1)'\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      // Compensation for the `Input.inputSizeSmall` style.\n      transform: 'translate(0, 17px) scale(1)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.shrink,\n    style: {\n      transform: 'translate(0, -1.5px) scale(0.75)',\n      transformOrigin: 'top left',\n      maxWidth: '133%'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.disableAnimation,\n    style: {\n      transition: theme.transitions.create(['color', 'transform', 'max-width'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    }\n  }, {\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 16px) scale(1)',\n      maxWidth: 'calc(100% - 24px)'\n    }\n  }, {\n    props: {\n      variant: 'filled',\n      size: 'small'\n    },\n    style: {\n      transform: 'translate(12px, 13px) scale(1)'\n    }\n  }, {\n    props: ({\n      variant,\n      ownerState\n    }) => variant === 'filled' && ownerState.shrink,\n    style: {\n      userSelect: 'none',\n      pointerEvents: 'auto',\n      transform: 'translate(12px, 7px) scale(0.75)',\n      maxWidth: 'calc(133% - 24px)'\n    }\n  }, {\n    props: ({\n      variant,\n      ownerState,\n      size\n    }) => variant === 'filled' && ownerState.shrink && size === 'small',\n    style: {\n      transform: 'translate(12px, 4px) scale(0.75)'\n    }\n  }, {\n    props: {\n      variant: 'outlined'\n    },\n    style: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 16px) scale(1)',\n      maxWidth: 'calc(100% - 24px)'\n    }\n  }, {\n    props: {\n      variant: 'outlined',\n      size: 'small'\n    },\n    style: {\n      transform: 'translate(14px, 9px) scale(1)'\n    }\n  }, {\n    props: ({\n      variant,\n      ownerState\n    }) => variant === 'outlined' && ownerState.shrink,\n    style: {\n      userSelect: 'none',\n      pointerEvents: 'auto',\n      // Theoretically, we should have (8+5)*2/0.75 = 34px\n      // but it feels a better when it bleeds a bit on the left, so 32px.\n      maxWidth: 'calc(133% - 32px)',\n      transform: 'translate(14px, -9px) scale(0.75)'\n    }\n  }]\n})));\nconst InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiInputLabel',\n    props: inProps\n  });\n  const {\n    disableAnimation = false,\n    margin,\n    shrink: shrinkProp,\n    variant,\n    className,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  let shrink = shrinkProp;\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['size', 'variant', 'required', 'focused']\n  });\n  const ownerState = {\n    ...props,\n    disableAnimation,\n    formControl: muiFormControl,\n    shrink,\n    size: fcs.size,\n    variant: fcs.variant,\n    required: fcs.required,\n    focused: fcs.focused\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(InputLabelRoot, {\n    \"data-shrink\": shrink,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other,\n    ownerState: ownerState,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the transition animation is disabled.\n   * @default false\n   */\n  disableAnimation: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the `input` of this label is focused.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n  /**\n   * if `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'normal'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['normal', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputLabel;"]},"metadata":{},"sourceType":"module"}