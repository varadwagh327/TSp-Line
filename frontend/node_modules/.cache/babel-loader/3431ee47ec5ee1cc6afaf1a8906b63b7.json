{"ast":null,"code":"import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport deepmerge from '@mui/utils/deepmerge';\nimport { unstable_createGetCssVar as systemCreateGetCssVar, createSpacing } from '@mui/system';\nimport { createUnarySpacing } from '@mui/system/spacing';\nimport { prepareCssVars, prepareTypographyVars, createGetColorSchemeSelector } from '@mui/system/cssVars';\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, hslToRgb } from '@mui/system/colorManipulator';\nimport createThemeNoVars from \"./createThemeNoVars.js\";\nimport createColorScheme, { getOpacity, getOverlays } from \"./createColorScheme.js\";\nimport defaultShouldSkipGeneratingVar from \"./shouldSkipGeneratingVar.js\";\nimport defaultGetSelector from \"./createGetSelector.js\";\nimport { stringifyTheme } from \"./stringifyTheme.js\";\n\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\n\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\n\nfunction toRgb(color) {\n  if (!color || !color.startsWith('hsl')) {\n    return color;\n  }\n\n  return hslToRgb(color);\n}\n\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(toRgb(obj[key]), `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, for example \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\n\nfunction getSpacingVal(spacingInput) {\n  if (typeof spacingInput === 'number') {\n    return `${spacingInput}px`;\n  }\n\n  if (typeof spacingInput === 'string' || typeof spacingInput === 'function' || Array.isArray(spacingInput)) {\n    return spacingInput;\n  }\n\n  return '8px';\n}\n\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {// ignore error\n  }\n\n  return undefined;\n};\n\nexport const createGetCssVar = function () {\n  let cssVarPrefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'mui';\n  return systemCreateGetCssVar(cssVarPrefix);\n};\n\nfunction attachColorScheme(colorSchemes, scheme, restTheme, colorScheme) {\n  if (!scheme) {\n    return undefined;\n  }\n\n  scheme = scheme === true ? {} : scheme;\n  const mode = colorScheme === 'dark' ? 'dark' : 'light';\n\n  if (!restTheme) {\n    colorSchemes[colorScheme] = createColorScheme({ ...scheme,\n      palette: {\n        mode,\n        ...scheme?.palette\n      }\n    });\n    return undefined;\n  }\n\n  const {\n    palette,\n    ...muiTheme\n  } = createThemeNoVars({ ...restTheme,\n    palette: {\n      mode,\n      ...scheme?.palette\n    }\n  });\n  colorSchemes[colorScheme] = { ...scheme,\n    palette,\n    opacity: { ...getOpacity(mode),\n      ...scheme?.opacity\n    },\n    overlays: scheme?.overlays || getOverlays(mode)\n  };\n  return muiTheme;\n}\n/**\n * A default `createThemeWithVars` comes with a single color scheme, either `light` or `dark` based on the `defaultColorScheme`.\n * This is better suited for apps that only need a single color scheme.\n *\n * To enable built-in `light` and `dark` color schemes, either:\n * 1. provide a `colorSchemeSelector` to define how the color schemes will change.\n * 2. provide `colorSchemes.dark` will set `colorSchemeSelector: 'media'` by default.\n */\n\n\nexport default function createThemeWithVars() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    colorSchemes: colorSchemesInput = {\n      light: true\n    },\n    defaultColorScheme: defaultColorSchemeInput,\n    disableCssColorScheme = false,\n    cssVarPrefix = 'mui',\n    shouldSkipGeneratingVar = defaultShouldSkipGeneratingVar,\n    colorSchemeSelector: selector = colorSchemesInput.light && colorSchemesInput.dark ? 'media' : undefined,\n    rootSelector = ':root',\n    ...input\n  } = options;\n  const firstColorScheme = Object.keys(colorSchemesInput)[0];\n  const defaultColorScheme = defaultColorSchemeInput || (colorSchemesInput.light && firstColorScheme !== 'light' ? 'light' : firstColorScheme);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    [defaultColorScheme]: defaultSchemeInput,\n    light: builtInLight,\n    dark: builtInDark,\n    ...customColorSchemes\n  } = colorSchemesInput;\n  const colorSchemes = { ...customColorSchemes\n  };\n  let defaultScheme = defaultSchemeInput; // For built-in light and dark color schemes, ensure that the value is valid if they are the default color scheme.\n\n  if (defaultColorScheme === 'dark' && !('dark' in colorSchemesInput) || defaultColorScheme === 'light' && !('light' in colorSchemesInput)) {\n    defaultScheme = true;\n  }\n\n  if (!defaultScheme) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`colorSchemes.${defaultColorScheme}\\` option is either missing or invalid.` : _formatMuiErrorMessage(21, defaultColorScheme));\n  } // Create the palette for the default color scheme, either `light`, `dark`, or custom color scheme.\n\n\n  const muiTheme = attachColorScheme(colorSchemes, defaultScheme, input, defaultColorScheme);\n\n  if (builtInLight && !colorSchemes.light) {\n    attachColorScheme(colorSchemes, builtInLight, undefined, 'light');\n  }\n\n  if (builtInDark && !colorSchemes.dark) {\n    attachColorScheme(colorSchemes, builtInDark, undefined, 'dark');\n  }\n\n  let theme = {\n    defaultColorScheme,\n    ...muiTheme,\n    cssVarPrefix,\n    colorSchemeSelector: selector,\n    rootSelector,\n    getCssVar,\n    colorSchemes,\n    font: { ...prepareTypographyVars(muiTheme.typography),\n      ...muiTheme.font\n    },\n    spacing: getSpacingVal(input.spacing)\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    }; // attach black & white channels to common node\n\n\n    if (palette.mode === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    }\n\n    if (palette.mode === 'dark') {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    } // assign component variables\n\n\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n\n    if (palette.mode === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n\n    if (palette.mode === 'dark') {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    } // MUI X - DataGrid needs this token.\n\n\n    setColorChannel(palette.background, 'default'); // added for consistency with the `background.default` token\n\n    setColorChannel(palette.background, 'paper');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color]; // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(toRgb(colors.main)));\n        }\n\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(toRgb(colors.light)));\n        }\n\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(toRgb(colors.dark)));\n        }\n\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(toRgb(colors.contrastText)));\n        }\n\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    disableCssColorScheme,\n    shouldSkipGeneratingVar,\n    getSelector: defaultGetSelector(theme)\n  };\n  const {\n    vars,\n    generateThemeVars,\n    generateStyleSheets\n  } = prepareCssVars(theme, parserConfig);\n  theme.vars = vars;\n  Object.entries(theme.colorSchemes[theme.defaultColorScheme]).forEach(_ref => {\n    let [key, value] = _ref;\n    theme[key] = value;\n  });\n  theme.generateThemeVars = generateThemeVars;\n  theme.generateStyleSheets = generateStyleSheets;\n\n  theme.generateSpacing = function generateSpacing() {\n    return createSpacing(input.spacing, createUnarySpacing(this));\n  };\n\n  theme.getColorSchemeSelector = createGetColorSchemeSelector(selector);\n  theme.spacing = theme.generateSpacing();\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = { ...defaultSxConfig,\n    ...input?.unstable_sxConfig\n  };\n\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n\n  theme.toRuntimeSource = stringifyTheme; // for Pigment CSS integration\n\n  return theme;\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/styles/createThemeWithVars.js"],"names":["_formatMuiErrorMessage","deepmerge","unstable_createGetCssVar","systemCreateGetCssVar","createSpacing","createUnarySpacing","prepareCssVars","prepareTypographyVars","createGetColorSchemeSelector","styleFunctionSx","unstable_defaultSxConfig","defaultSxConfig","private_safeColorChannel","safeColorChannel","private_safeAlpha","safeAlpha","private_safeDarken","safeDarken","private_safeLighten","safeLighten","private_safeEmphasize","safeEmphasize","hslToRgb","createThemeNoVars","createColorScheme","getOpacity","getOverlays","defaultShouldSkipGeneratingVar","defaultGetSelector","stringifyTheme","assignNode","obj","keys","forEach","k","setColor","key","defaultValue","toRgb","color","startsWith","setColorChannel","getSpacingVal","spacingInput","Array","isArray","silent","fn","error","undefined","createGetCssVar","cssVarPrefix","attachColorScheme","colorSchemes","scheme","restTheme","colorScheme","mode","palette","muiTheme","opacity","overlays","createThemeWithVars","options","colorSchemesInput","light","defaultColorScheme","defaultColorSchemeInput","disableCssColorScheme","shouldSkipGeneratingVar","colorSchemeSelector","selector","dark","rootSelector","input","firstColorScheme","Object","getCssVar","defaultSchemeInput","builtInLight","builtInDark","customColorSchemes","defaultScheme","Error","process","env","NODE_ENV","theme","font","typography","spacing","setCssVarColor","cssVar","tokens","split","colorToken","common","Alert","info","success","warning","getContrastText","main","AppBar","Avatar","Button","Chip","FilledInput","LinearProgress","primary","secondary","Skeleton","Slider","snackbarContentBackground","background","default","SnackbarContent","SpeedDialAction","paper","StepConnector","StepContent","Switch","TableCell","divider","Tooltip","grey","colors","contrastText","active","selected","args","reduce","acc","argument","parserConfig","prefix","getSelector","vars","generateThemeVars","generateStyleSheets","entries","value","generateSpacing","getColorSchemeSelector","unstable_sxConfig","unstable_sx","sx","props","toRuntimeSource"],"mappings":"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","sourcesContent":["import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\nimport deepmerge from '@mui/utils/deepmerge';\nimport { unstable_createGetCssVar as systemCreateGetCssVar, createSpacing } from '@mui/system';\nimport { createUnarySpacing } from '@mui/system/spacing';\nimport { prepareCssVars, prepareTypographyVars, createGetColorSchemeSelector } from '@mui/system/cssVars';\nimport styleFunctionSx, { unstable_defaultSxConfig as defaultSxConfig } from '@mui/system/styleFunctionSx';\nimport { private_safeColorChannel as safeColorChannel, private_safeAlpha as safeAlpha, private_safeDarken as safeDarken, private_safeLighten as safeLighten, private_safeEmphasize as safeEmphasize, hslToRgb } from '@mui/system/colorManipulator';\nimport createThemeNoVars from \"./createThemeNoVars.js\";\nimport createColorScheme, { getOpacity, getOverlays } from \"./createColorScheme.js\";\nimport defaultShouldSkipGeneratingVar from \"./shouldSkipGeneratingVar.js\";\nimport defaultGetSelector from \"./createGetSelector.js\";\nimport { stringifyTheme } from \"./stringifyTheme.js\";\nfunction assignNode(obj, keys) {\n  keys.forEach(k => {\n    if (!obj[k]) {\n      obj[k] = {};\n    }\n  });\n}\nfunction setColor(obj, key, defaultValue) {\n  if (!obj[key] && defaultValue) {\n    obj[key] = defaultValue;\n  }\n}\nfunction toRgb(color) {\n  if (!color || !color.startsWith('hsl')) {\n    return color;\n  }\n  return hslToRgb(color);\n}\nfunction setColorChannel(obj, key) {\n  if (!(`${key}Channel` in obj)) {\n    // custom channel token is not provided, generate one.\n    // if channel token can't be generated, show a warning.\n    obj[`${key}Channel`] = safeColorChannel(toRgb(obj[key]), `MUI: Can't create \\`palette.${key}Channel\\` because \\`palette.${key}\\` is not one of these formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` + '\\n' + `To suppress this warning, you need to explicitly provide the \\`palette.${key}Channel\\` as a string (in rgb format, for example \"12 12 12\") or undefined if you want to remove the channel token.`);\n  }\n}\nfunction getSpacingVal(spacingInput) {\n  if (typeof spacingInput === 'number') {\n    return `${spacingInput}px`;\n  }\n  if (typeof spacingInput === 'string' || typeof spacingInput === 'function' || Array.isArray(spacingInput)) {\n    return spacingInput;\n  }\n  return '8px';\n}\nconst silent = fn => {\n  try {\n    return fn();\n  } catch (error) {\n    // ignore error\n  }\n  return undefined;\n};\nexport const createGetCssVar = (cssVarPrefix = 'mui') => systemCreateGetCssVar(cssVarPrefix);\nfunction attachColorScheme(colorSchemes, scheme, restTheme, colorScheme) {\n  if (!scheme) {\n    return undefined;\n  }\n  scheme = scheme === true ? {} : scheme;\n  const mode = colorScheme === 'dark' ? 'dark' : 'light';\n  if (!restTheme) {\n    colorSchemes[colorScheme] = createColorScheme({\n      ...scheme,\n      palette: {\n        mode,\n        ...scheme?.palette\n      }\n    });\n    return undefined;\n  }\n  const {\n    palette,\n    ...muiTheme\n  } = createThemeNoVars({\n    ...restTheme,\n    palette: {\n      mode,\n      ...scheme?.palette\n    }\n  });\n  colorSchemes[colorScheme] = {\n    ...scheme,\n    palette,\n    opacity: {\n      ...getOpacity(mode),\n      ...scheme?.opacity\n    },\n    overlays: scheme?.overlays || getOverlays(mode)\n  };\n  return muiTheme;\n}\n\n/**\n * A default `createThemeWithVars` comes with a single color scheme, either `light` or `dark` based on the `defaultColorScheme`.\n * This is better suited for apps that only need a single color scheme.\n *\n * To enable built-in `light` and `dark` color schemes, either:\n * 1. provide a `colorSchemeSelector` to define how the color schemes will change.\n * 2. provide `colorSchemes.dark` will set `colorSchemeSelector: 'media'` by default.\n */\nexport default function createThemeWithVars(options = {}, ...args) {\n  const {\n    colorSchemes: colorSchemesInput = {\n      light: true\n    },\n    defaultColorScheme: defaultColorSchemeInput,\n    disableCssColorScheme = false,\n    cssVarPrefix = 'mui',\n    shouldSkipGeneratingVar = defaultShouldSkipGeneratingVar,\n    colorSchemeSelector: selector = colorSchemesInput.light && colorSchemesInput.dark ? 'media' : undefined,\n    rootSelector = ':root',\n    ...input\n  } = options;\n  const firstColorScheme = Object.keys(colorSchemesInput)[0];\n  const defaultColorScheme = defaultColorSchemeInput || (colorSchemesInput.light && firstColorScheme !== 'light' ? 'light' : firstColorScheme);\n  const getCssVar = createGetCssVar(cssVarPrefix);\n  const {\n    [defaultColorScheme]: defaultSchemeInput,\n    light: builtInLight,\n    dark: builtInDark,\n    ...customColorSchemes\n  } = colorSchemesInput;\n  const colorSchemes = {\n    ...customColorSchemes\n  };\n  let defaultScheme = defaultSchemeInput;\n\n  // For built-in light and dark color schemes, ensure that the value is valid if they are the default color scheme.\n  if (defaultColorScheme === 'dark' && !('dark' in colorSchemesInput) || defaultColorScheme === 'light' && !('light' in colorSchemesInput)) {\n    defaultScheme = true;\n  }\n  if (!defaultScheme) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: The \\`colorSchemes.${defaultColorScheme}\\` option is either missing or invalid.` : _formatMuiErrorMessage(21, defaultColorScheme));\n  }\n\n  // Create the palette for the default color scheme, either `light`, `dark`, or custom color scheme.\n  const muiTheme = attachColorScheme(colorSchemes, defaultScheme, input, defaultColorScheme);\n  if (builtInLight && !colorSchemes.light) {\n    attachColorScheme(colorSchemes, builtInLight, undefined, 'light');\n  }\n  if (builtInDark && !colorSchemes.dark) {\n    attachColorScheme(colorSchemes, builtInDark, undefined, 'dark');\n  }\n  let theme = {\n    defaultColorScheme,\n    ...muiTheme,\n    cssVarPrefix,\n    colorSchemeSelector: selector,\n    rootSelector,\n    getCssVar,\n    colorSchemes,\n    font: {\n      ...prepareTypographyVars(muiTheme.typography),\n      ...muiTheme.font\n    },\n    spacing: getSpacingVal(input.spacing)\n  };\n  Object.keys(theme.colorSchemes).forEach(key => {\n    const palette = theme.colorSchemes[key].palette;\n    const setCssVarColor = cssVar => {\n      const tokens = cssVar.split('-');\n      const color = tokens[1];\n      const colorToken = tokens[2];\n      return getCssVar(cssVar, palette[color][colorToken]);\n    };\n\n    // attach black & white channels to common node\n    if (palette.mode === 'light') {\n      setColor(palette.common, 'background', '#fff');\n      setColor(palette.common, 'onBackground', '#000');\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.common, 'background', '#000');\n      setColor(palette.common, 'onBackground', '#fff');\n    }\n\n    // assign component variables\n    assignNode(palette, ['Alert', 'AppBar', 'Avatar', 'Button', 'Chip', 'FilledInput', 'LinearProgress', 'Skeleton', 'Slider', 'SnackbarContent', 'SpeedDialAction', 'StepConnector', 'StepContent', 'Switch', 'TableCell', 'Tooltip']);\n    if (palette.mode === 'light') {\n      setColor(palette.Alert, 'errorColor', safeDarken(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeDarken(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeDarken(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeDarken(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-main'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.main)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.main)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.main)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.main)));\n      setColor(palette.Alert, 'errorStandardBg', safeLighten(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeLighten(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeLighten(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeLighten(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-100'));\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-400'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-300'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-A100'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-400'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-700'));\n      setColor(palette.FilledInput, 'bg', 'rgba(0, 0, 0, 0.06)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(0, 0, 0, 0.09)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(0, 0, 0, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.LinearProgress, 'secondaryBg', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.LinearProgress, 'errorBg', safeLighten(palette.error.main, 0.62));\n      setColor(palette.LinearProgress, 'infoBg', safeLighten(palette.info.main, 0.62));\n      setColor(palette.LinearProgress, 'successBg', safeLighten(palette.success.main, 0.62));\n      setColor(palette.LinearProgress, 'warningBg', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.11)`);\n      setColor(palette.Slider, 'primaryTrack', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Slider, 'secondaryTrack', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Slider, 'errorTrack', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Slider, 'infoTrack', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Slider, 'successTrack', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Slider, 'warningTrack', safeLighten(palette.warning.main, 0.62));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.8);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-400'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-common-white'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-100'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeLighten(palette.primary.main, 0.62));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeLighten(palette.secondary.main, 0.62));\n      setColor(palette.Switch, 'errorDisabledColor', safeLighten(palette.error.main, 0.62));\n      setColor(palette.Switch, 'infoDisabledColor', safeLighten(palette.info.main, 0.62));\n      setColor(palette.Switch, 'successDisabledColor', safeLighten(palette.success.main, 0.62));\n      setColor(palette.Switch, 'warningDisabledColor', safeLighten(palette.warning.main, 0.62));\n      setColor(palette.TableCell, 'border', safeLighten(safeAlpha(palette.divider, 1), 0.88));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n    if (palette.mode === 'dark') {\n      setColor(palette.Alert, 'errorColor', safeLighten(palette.error.light, 0.6));\n      setColor(palette.Alert, 'infoColor', safeLighten(palette.info.light, 0.6));\n      setColor(palette.Alert, 'successColor', safeLighten(palette.success.light, 0.6));\n      setColor(palette.Alert, 'warningColor', safeLighten(palette.warning.light, 0.6));\n      setColor(palette.Alert, 'errorFilledBg', setCssVarColor('palette-error-dark'));\n      setColor(palette.Alert, 'infoFilledBg', setCssVarColor('palette-info-dark'));\n      setColor(palette.Alert, 'successFilledBg', setCssVarColor('palette-success-dark'));\n      setColor(palette.Alert, 'warningFilledBg', setCssVarColor('palette-warning-dark'));\n      setColor(palette.Alert, 'errorFilledColor', silent(() => palette.getContrastText(palette.error.dark)));\n      setColor(palette.Alert, 'infoFilledColor', silent(() => palette.getContrastText(palette.info.dark)));\n      setColor(palette.Alert, 'successFilledColor', silent(() => palette.getContrastText(palette.success.dark)));\n      setColor(palette.Alert, 'warningFilledColor', silent(() => palette.getContrastText(palette.warning.dark)));\n      setColor(palette.Alert, 'errorStandardBg', safeDarken(palette.error.light, 0.9));\n      setColor(palette.Alert, 'infoStandardBg', safeDarken(palette.info.light, 0.9));\n      setColor(palette.Alert, 'successStandardBg', safeDarken(palette.success.light, 0.9));\n      setColor(palette.Alert, 'warningStandardBg', safeDarken(palette.warning.light, 0.9));\n      setColor(palette.Alert, 'errorIconColor', setCssVarColor('palette-error-main'));\n      setColor(palette.Alert, 'infoIconColor', setCssVarColor('palette-info-main'));\n      setColor(palette.Alert, 'successIconColor', setCssVarColor('palette-success-main'));\n      setColor(palette.Alert, 'warningIconColor', setCssVarColor('palette-warning-main'));\n      setColor(palette.AppBar, 'defaultBg', setCssVarColor('palette-grey-900'));\n      setColor(palette.AppBar, 'darkBg', setCssVarColor('palette-background-paper')); // specific for dark mode\n      setColor(palette.AppBar, 'darkColor', setCssVarColor('palette-text-primary')); // specific for dark mode\n      setColor(palette.Avatar, 'defaultBg', setCssVarColor('palette-grey-600'));\n      setColor(palette.Button, 'inheritContainedBg', setCssVarColor('palette-grey-800'));\n      setColor(palette.Button, 'inheritContainedHoverBg', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultBorder', setCssVarColor('palette-grey-700'));\n      setColor(palette.Chip, 'defaultAvatarColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Chip, 'defaultIconColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.FilledInput, 'bg', 'rgba(255, 255, 255, 0.09)');\n      setColor(palette.FilledInput, 'hoverBg', 'rgba(255, 255, 255, 0.13)');\n      setColor(palette.FilledInput, 'disabledBg', 'rgba(255, 255, 255, 0.12)');\n      setColor(palette.LinearProgress, 'primaryBg', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.LinearProgress, 'secondaryBg', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.LinearProgress, 'errorBg', safeDarken(palette.error.main, 0.5));\n      setColor(palette.LinearProgress, 'infoBg', safeDarken(palette.info.main, 0.5));\n      setColor(palette.LinearProgress, 'successBg', safeDarken(palette.success.main, 0.5));\n      setColor(palette.LinearProgress, 'warningBg', safeDarken(palette.warning.main, 0.5));\n      setColor(palette.Skeleton, 'bg', `rgba(${setCssVarColor('palette-text-primaryChannel')} / 0.13)`);\n      setColor(palette.Slider, 'primaryTrack', safeDarken(palette.primary.main, 0.5));\n      setColor(palette.Slider, 'secondaryTrack', safeDarken(palette.secondary.main, 0.5));\n      setColor(palette.Slider, 'errorTrack', safeDarken(palette.error.main, 0.5));\n      setColor(palette.Slider, 'infoTrack', safeDarken(palette.info.main, 0.5));\n      setColor(palette.Slider, 'successTrack', safeDarken(palette.success.main, 0.5));\n      setColor(palette.Slider, 'warningTrack', safeDarken(palette.warning.main, 0.5));\n      const snackbarContentBackground = safeEmphasize(palette.background.default, 0.98);\n      setColor(palette.SnackbarContent, 'bg', snackbarContentBackground);\n      setColor(palette.SnackbarContent, 'color', silent(() => palette.getContrastText(snackbarContentBackground)));\n      setColor(palette.SpeedDialAction, 'fabHoverBg', safeEmphasize(palette.background.paper, 0.15));\n      setColor(palette.StepConnector, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.StepContent, 'border', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'defaultColor', setCssVarColor('palette-grey-300'));\n      setColor(palette.Switch, 'defaultDisabledColor', setCssVarColor('palette-grey-600'));\n      setColor(palette.Switch, 'primaryDisabledColor', safeDarken(palette.primary.main, 0.55));\n      setColor(palette.Switch, 'secondaryDisabledColor', safeDarken(palette.secondary.main, 0.55));\n      setColor(palette.Switch, 'errorDisabledColor', safeDarken(palette.error.main, 0.55));\n      setColor(palette.Switch, 'infoDisabledColor', safeDarken(palette.info.main, 0.55));\n      setColor(palette.Switch, 'successDisabledColor', safeDarken(palette.success.main, 0.55));\n      setColor(palette.Switch, 'warningDisabledColor', safeDarken(palette.warning.main, 0.55));\n      setColor(palette.TableCell, 'border', safeDarken(safeAlpha(palette.divider, 1), 0.68));\n      setColor(palette.Tooltip, 'bg', safeAlpha(palette.grey[700], 0.92));\n    }\n\n    // MUI X - DataGrid needs this token.\n    setColorChannel(palette.background, 'default');\n\n    // added for consistency with the `background.default` token\n    setColorChannel(palette.background, 'paper');\n    setColorChannel(palette.common, 'background');\n    setColorChannel(palette.common, 'onBackground');\n    setColorChannel(palette, 'divider');\n    Object.keys(palette).forEach(color => {\n      const colors = palette[color];\n\n      // The default palettes (primary, secondary, error, info, success, and warning) errors are handled by the above `createTheme(...)`.\n\n      if (colors && typeof colors === 'object') {\n        // Silent the error for custom palettes.\n        if (colors.main) {\n          setColor(palette[color], 'mainChannel', safeColorChannel(toRgb(colors.main)));\n        }\n        if (colors.light) {\n          setColor(palette[color], 'lightChannel', safeColorChannel(toRgb(colors.light)));\n        }\n        if (colors.dark) {\n          setColor(palette[color], 'darkChannel', safeColorChannel(toRgb(colors.dark)));\n        }\n        if (colors.contrastText) {\n          setColor(palette[color], 'contrastTextChannel', safeColorChannel(toRgb(colors.contrastText)));\n        }\n        if (color === 'text') {\n          // Text colors: text.primary, text.secondary\n          setColorChannel(palette[color], 'primary');\n          setColorChannel(palette[color], 'secondary');\n        }\n        if (color === 'action') {\n          // Action colors: action.active, action.selected\n          if (colors.active) {\n            setColorChannel(palette[color], 'active');\n          }\n          if (colors.selected) {\n            setColorChannel(palette[color], 'selected');\n          }\n        }\n      }\n    });\n  });\n  theme = args.reduce((acc, argument) => deepmerge(acc, argument), theme);\n  const parserConfig = {\n    prefix: cssVarPrefix,\n    disableCssColorScheme,\n    shouldSkipGeneratingVar,\n    getSelector: defaultGetSelector(theme)\n  };\n  const {\n    vars,\n    generateThemeVars,\n    generateStyleSheets\n  } = prepareCssVars(theme, parserConfig);\n  theme.vars = vars;\n  Object.entries(theme.colorSchemes[theme.defaultColorScheme]).forEach(([key, value]) => {\n    theme[key] = value;\n  });\n  theme.generateThemeVars = generateThemeVars;\n  theme.generateStyleSheets = generateStyleSheets;\n  theme.generateSpacing = function generateSpacing() {\n    return createSpacing(input.spacing, createUnarySpacing(this));\n  };\n  theme.getColorSchemeSelector = createGetColorSchemeSelector(selector);\n  theme.spacing = theme.generateSpacing();\n  theme.shouldSkipGeneratingVar = shouldSkipGeneratingVar;\n  theme.unstable_sxConfig = {\n    ...defaultSxConfig,\n    ...input?.unstable_sxConfig\n  };\n  theme.unstable_sx = function sx(props) {\n    return styleFunctionSx({\n      sx: props,\n      theme: this\n    });\n  };\n  theme.toRuntimeSource = stringifyTheme; // for Pigment CSS integration\n\n  return theme;\n}"]},"metadata":{},"sourceType":"module"}