{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { useTabsContext } from '../Tabs';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../useCompound';\nimport { useList } from '../useList';\nimport { tabsListReducer } from './tabsListReducer';\n/**\n *\n * Demos:\n *\n * - [Tabs](https://next.mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://next.mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\n */\n\nfunction useTabsList(parameters) {\n  const {\n    rootRef: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    return subitems.get(tabValue)?.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    if (tabValue == null) {\n      return null;\n    }\n\n    return subitems.get(tabValue)?.ref.current ?? null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n\n  const handleChange = React.useCallback((event, newValue) => {\n    onSelected(event, newValue[0] ?? null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => subitems.get(item)?.disabled ?? false, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    },\n    rootRef: mergedRootRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    rootRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    } // when a value changes externally, the highlighted value should be synced to it\n\n\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n\n  const getRootProps = function () {\n    let externalProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return { ...externalProps,\n      ...getListboxRootProps(externalProps),\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    };\n  };\n\n  const contextValue = React.useMemo(() => ({ ...compoundComponentContextValue,\n    ...listContextValue\n  }), [compoundComponentContextValue, listContextValue]);\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    highlightedValue,\n    isRtl,\n    orientation,\n    rootRef: mergedRootRef,\n    selectedValue: selectedValues[0] ?? null\n  };\n}\n\nexport { useTabsList };","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/useTabsList/useTabsList.js"],"names":["React","useTabsContext","TabsListActionTypes","useCompoundParent","useList","tabsListReducer","useTabsList","parameters","rootRef","externalRef","direction","onSelected","orientation","value","registerTabIdLookup","selectionFollowsFocus","subitems","contextValue","compoundComponentContextValue","tabIdLookup","useCallback","tabValue","get","id","subitemKeys","useMemo","Array","from","keys","getTabElement","ref","current","isRtl","listOrientation","handleChange","event","newValue","controlledProps","undefined","selectedValues","isItemDisabled","item","disabled","listContextValue","dispatch","getRootProps","getListboxRootProps","state","highlightedValue","mergedRootRef","disabledItemsFocusable","focusManagement","getItemDomElement","items","onChange","reducerActionContext","selectionMode","stateReducer","useEffect","type","valueChange","externalProps","role","selectedValue"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { useTabsContext } from '../Tabs';\nimport { TabsListActionTypes } from './useTabsList.types';\nimport { useCompoundParent } from '../useCompound';\nimport { useList } from '../useList';\nimport { tabsListReducer } from './tabsListReducer';\n\n/**\n *\n * Demos:\n *\n * - [Tabs](https://next.mui.com/base-ui/react-tabs/#hooks)\n *\n * API:\n *\n * - [useTabsList API](https://next.mui.com/base-ui/react-tabs/hooks-api/#use-tabs-list)\n */\nfunction useTabsList(parameters) {\n  const {\n    rootRef: externalRef\n  } = parameters;\n  const {\n    direction = 'ltr',\n    onSelected,\n    orientation = 'horizontal',\n    value,\n    registerTabIdLookup,\n    selectionFollowsFocus\n  } = useTabsContext();\n  const {\n    subitems,\n    contextValue: compoundComponentContextValue\n  } = useCompoundParent();\n  const tabIdLookup = React.useCallback(tabValue => {\n    return subitems.get(tabValue)?.id;\n  }, [subitems]);\n  registerTabIdLookup(tabIdLookup);\n  const subitemKeys = React.useMemo(() => Array.from(subitems.keys()), [subitems]);\n  const getTabElement = React.useCallback(tabValue => {\n    if (tabValue == null) {\n      return null;\n    }\n    return subitems.get(tabValue)?.ref.current ?? null;\n  }, [subitems]);\n  const isRtl = direction === 'rtl';\n  let listOrientation;\n  if (orientation === 'vertical') {\n    listOrientation = 'vertical';\n  } else {\n    listOrientation = isRtl ? 'horizontal-rtl' : 'horizontal-ltr';\n  }\n  const handleChange = React.useCallback((event, newValue) => {\n    onSelected(event, newValue[0] ?? null);\n  }, [onSelected]);\n  const controlledProps = React.useMemo(() => {\n    if (value === undefined) {\n      return {};\n    }\n    return value != null ? {\n      selectedValues: [value]\n    } : {\n      selectedValues: []\n    };\n  }, [value]);\n  const isItemDisabled = React.useCallback(item => subitems.get(item)?.disabled ?? false, [subitems]);\n  const {\n    contextValue: listContextValue,\n    dispatch,\n    getRootProps: getListboxRootProps,\n    state: {\n      highlightedValue,\n      selectedValues\n    },\n    rootRef: mergedRootRef\n  } = useList({\n    controlledProps,\n    disabledItemsFocusable: !selectionFollowsFocus,\n    focusManagement: 'DOM',\n    getItemDomElement: getTabElement,\n    isItemDisabled,\n    items: subitemKeys,\n    rootRef: externalRef,\n    onChange: handleChange,\n    orientation: listOrientation,\n    reducerActionContext: React.useMemo(() => ({\n      selectionFollowsFocus: selectionFollowsFocus || false\n    }), [selectionFollowsFocus]),\n    selectionMode: 'single',\n    stateReducer: tabsListReducer\n  });\n  React.useEffect(() => {\n    if (value === undefined) {\n      return;\n    }\n\n    // when a value changes externally, the highlighted value should be synced to it\n    if (value != null) {\n      dispatch({\n        type: TabsListActionTypes.valueChange,\n        value\n      });\n    }\n  }, [dispatch, value]);\n  const getRootProps = (externalProps = {}) => {\n    return {\n      ...externalProps,\n      ...getListboxRootProps(externalProps),\n      'aria-orientation': orientation === 'vertical' ? 'vertical' : undefined,\n      role: 'tablist'\n    };\n  };\n  const contextValue = React.useMemo(() => ({\n    ...compoundComponentContextValue,\n    ...listContextValue\n  }), [compoundComponentContextValue, listContextValue]);\n  return {\n    contextValue,\n    dispatch,\n    getRootProps,\n    highlightedValue,\n    isRtl,\n    orientation,\n    rootRef: mergedRootRef,\n    selectedValue: selectedValues[0] ?? null\n  };\n}\nexport { useTabsList };"]},"metadata":{},"sourceType":"module"}