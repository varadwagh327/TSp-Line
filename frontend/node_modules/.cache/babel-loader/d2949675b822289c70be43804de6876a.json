{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\n\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    variants: [{\n      props: props => !props.square,\n      style: {\n        borderRadius: 0,\n        '&:first-of-type': {\n          borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n          borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n        },\n        '&:last-of-type': {\n          borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n          borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n          // Fix a rendering issue on Edge\n          '@supports (-ms-ime-align: auto)': {\n            borderBottomLeftRadius: 0,\n            borderBottomRightRadius: 0\n          }\n        }\n      }\n    }, {\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionClasses.expanded}`]: {\n          margin: '16px 0'\n        }\n      }\n    }]\n  };\n}));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading',\n  overridesResolver: (props, styles) => styles.heading\n})({\n  all: 'unset'\n});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = { ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, { ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Accordion/Accordion.js"],"names":["React","isFragment","PropTypes","clsx","chainPropTypes","composeClasses","styled","memoTheme","useDefaultProps","Collapse","Paper","AccordionContext","useControlled","useSlot","accordionClasses","getAccordionUtilityClass","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","square","expanded","disabled","disableGutters","slots","root","heading","region","AccordionRoot","name","slot","overridesResolver","props","styles","rounded","gutters","theme","transition","duration","transitions","shortest","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","vars","palette","divider","display","marginTop","marginBottom","action","disabledBackground","variants","style","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","margin","AccordionHeading","all","Accordion","forwardRef","inProps","ref","children","childrenProp","className","defaultExpanded","expandedProp","onChange","slotProps","TransitionComponent","TransitionComponentProp","TransitionProps","TransitionPropsProp","other","setExpandedState","controlled","default","state","handleChange","useCallback","event","summary","Children","toArray","contextValue","useMemo","toggle","backwardCompatibleSlots","backwardCompatibleSlotProps","externalForwardedProps","AccordionHeadingSlot","accordionProps","elementType","TransitionSlot","transitionProps","Provider","value","in","timeout","id","role","process","env","NODE_ENV","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","oneOfType","sx","arrayOf"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading',\n  overridesResolver: (props, styles) => styles.heading\n})({\n  all: 'unset'\n});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;"]},"metadata":{},"sourceType":"module"}