{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible } from '@mui/utils';\n/**\n * The basic building block for creating custom switches.\n *\n * Demos:\n *\n * - [Switch](https://next.mui.com/base-ui/react-switch/#hook)\n *\n * API:\n *\n * - [useSwitch API](https://next.mui.com/base-ui/react-switch/hooks-api/#use-switch)\n */\n\nexport function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n\n  const createHandleInputChange = otherProps => event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    setCheckedState(event.target.checked);\n    onChange?.(event);\n    otherProps.onChange?.(event);\n  };\n\n  const [focusVisible, setFocusVisible] = React.useState(false);\n\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n\n  const inputRef = React.useRef(null);\n\n  const createHandleFocus = otherProps => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n      onFocusVisible?.(event);\n    }\n\n    onFocus?.(event);\n    otherProps.onFocus?.(event);\n  };\n\n  const createHandleBlur = otherProps => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n\n    onBlur?.(event);\n    otherProps.onBlur?.(event);\n  };\n\n  const handleInputRef = useForkRef(inputRef);\n\n  const getInputProps = function () {\n    let otherProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      readOnly,\n      ref: handleInputRef,\n      required,\n      type: 'checkbox',\n      role: 'switch',\n      'aria-checked': checkedProp,\n      ...otherProps,\n      onChange: createHandleInputChange(otherProps),\n      onFocus: createHandleFocus(otherProps),\n      onBlur: createHandleBlur(otherProps)\n    };\n  };\n\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    inputRef: handleInputRef,\n    readOnly: Boolean(readOnly)\n  };\n}","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/base/useSwitch/useSwitch.js"],"names":["React","unstable_useControlled","useControlled","unstable_useForkRef","useForkRef","unstable_isFocusVisible","isFocusVisible","useSwitch","props","checked","checkedProp","defaultChecked","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnly","required","setCheckedState","controlled","default","Boolean","name","state","createHandleInputChange","otherProps","event","nativeEvent","defaultPrevented","target","focusVisible","setFocusVisible","useState","inputRef","useRef","createHandleFocus","current","currentTarget","createHandleBlur","handleInputRef","getInputProps","ref","type","role"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { unstable_useControlled as useControlled, unstable_useForkRef as useForkRef, unstable_isFocusVisible as isFocusVisible } from '@mui/utils';\n/**\n * The basic building block for creating custom switches.\n *\n * Demos:\n *\n * - [Switch](https://next.mui.com/base-ui/react-switch/#hook)\n *\n * API:\n *\n * - [useSwitch API](https://next.mui.com/base-ui/react-switch/hooks-api/#use-switch)\n */\nexport function useSwitch(props) {\n  const {\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly,\n    required\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'Switch',\n    state: 'checked'\n  });\n  const createHandleInputChange = otherProps => event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    setCheckedState(event.target.checked);\n    onChange?.(event);\n    otherProps.onChange?.(event);\n  };\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  if (disabled && focusVisible) {\n    setFocusVisible(false);\n  }\n  const inputRef = React.useRef(null);\n  const createHandleFocus = otherProps => event => {\n    // Fix for https://github.com/facebook/react/issues/7769\n    if (!inputRef.current) {\n      inputRef.current = event.currentTarget;\n    }\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n      onFocusVisible?.(event);\n    }\n    onFocus?.(event);\n    otherProps.onFocus?.(event);\n  };\n  const createHandleBlur = otherProps => event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    onBlur?.(event);\n    otherProps.onBlur?.(event);\n  };\n  const handleInputRef = useForkRef(inputRef);\n  const getInputProps = (otherProps = {}) => ({\n    checked: checkedProp,\n    defaultChecked,\n    disabled,\n    readOnly,\n    ref: handleInputRef,\n    required,\n    type: 'checkbox',\n    role: 'switch',\n    'aria-checked': checkedProp,\n    ...otherProps,\n    onChange: createHandleInputChange(otherProps),\n    onFocus: createHandleFocus(otherProps),\n    onBlur: createHandleBlur(otherProps)\n  });\n  return {\n    checked,\n    disabled: Boolean(disabled),\n    focusVisible,\n    getInputProps,\n    inputRef: handleInputRef,\n    readOnly: Boolean(readOnly)\n  };\n}"]},"metadata":{},"sourceType":"module"}