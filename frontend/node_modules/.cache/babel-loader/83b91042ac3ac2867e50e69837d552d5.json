{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\n\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(_ref => {\n  let {\n    theme\n  } = _ref;\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return { ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(_ref2 => {\n      let [color] = _ref2;\n      return {\n        props: {\n          colorSeverity: color,\n          variant: 'standard'\n        },\n        style: {\n          color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n          backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n          [`& .${alertClasses.icon}`]: theme.vars ? {\n            color: theme.vars.palette.Alert[`${color}IconColor`]\n          } : {\n            color: theme.palette[color].main\n          }\n        }\n      };\n    }), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(_ref3 => {\n      let [color] = _ref3;\n      return {\n        props: {\n          colorSeverity: color,\n          variant: 'outlined'\n        },\n        style: {\n          color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n          border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n          [`& .${alertClasses.icon}`]: theme.vars ? {\n            color: theme.vars.palette.Alert[`${color}IconColor`]\n          } : {\n            color: theme.palette[color].main\n          }\n        }\n      };\n    }), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(_ref4 => {\n      let [color] = _ref4;\n      return {\n        props: {\n          colorSeverity: color,\n          variant: 'filled'\n        },\n        style: {\n          fontWeight: theme.typography.fontWeightMedium,\n          ...(theme.vars ? {\n            color: theme.vars.palette.Alert[`${color}FilledColor`],\n            backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n          } : {\n            backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n            color: theme.palette.getContrastText(theme.palette[color].main)\n          })\n        }\n      };\n    })]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = { ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: { ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AlertRoot, {\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes\n/* remove-proptypes */\n= {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;","map":{"version":3,"sources":["F:/Web Projects/Web/Business Website/frontend/node_modules/@mui/material/Alert/Alert.js"],"names":["React","PropTypes","clsx","composeClasses","darken","lighten","styled","memoTheme","useDefaultProps","useSlot","capitalize","createSimplePaletteValueFilter","Paper","alertClasses","getAlertUtilityClass","IconButton","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","CloseIcon","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","variant","color","severity","classes","slots","root","icon","message","action","AlertRoot","name","slot","overridesResolver","props","styles","theme","getColor","palette","mode","getBackgroundColor","typography","body2","backgroundColor","display","padding","variants","Object","entries","filter","map","colorSeverity","style","vars","Alert","light","main","border","fontWeight","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","fontSize","opacity","AlertMessage","minWidth","overflow","AlertAction","alignItems","marginLeft","defaultIconMapping","success","warning","error","info","forwardRef","inProps","ref","children","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","other","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseButtonSlot","closeButtonProps","elementType","CloseIconSlot","closeIconProps","elevation","size","title","onClick","process","env","NODE_ENV","propTypes","node","object","string","oneOfType","oneOf","shape","func","sx","arrayOf","bool"],"mappings":"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","sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return {\n    ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: {\n        fontWeight: theme.typography.fontWeightMedium,\n        ...(theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n        } : {\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n          color: theme.palette.getContrastText(theme.palette[color].main)\n        })\n      }\n    }))]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon',\n  overridesResolver: (props, styles) => styles.icon\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message',\n  overridesResolver: (props, styles) => styles.message\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AlertRoot, {\n    role: role,\n    elevation: 0,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [icon !== false ? /*#__PURE__*/_jsx(AlertIcon, {\n      ownerState: ownerState,\n      className: classes.icon,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(AlertMessage, {\n      ownerState: ownerState,\n      className: classes.message,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(AlertAction, {\n      ownerState: ownerState,\n      className: classes.action,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"]},"metadata":{},"sourceType":"module"}